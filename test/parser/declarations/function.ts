import { pass, fail } from '../core';
import { Context } from '../../../src/parser/common';
import { parseRoot } from '../../../src/seafox';
import * as t from 'assert';

fail('Declarations - Function (fail)', [
  ['async function af() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function a() { var await = 4; }', Context.Empty],
  ['async function method() { var await = 1; }', Context.Empty],
  ['async function f() {   class x { foo(x=new (await y)()){} }   }', Context.Empty],
  ['function f() {   class x { foo(x=new (await y)()){} }   }', Context.Empty],
  ['async function method(await;) { }', Context.Empty],
  ['async function f(){ async function fh([typeof await x]) { "use strict"; }   }', Context.Empty],
  ['async function f(){ async function fh([void await x]) { }', Context.Empty],
  ['async function f(){ async function fh([void await x]) { "use strict"; }   }', Context.Empty],
  ['async function f(){ async function fh([void await x]) { }', Context.Empty],
  ['async function method() { var x = await; }', Context.Empty],
  ['(async function(eval){"use strict";})', Context.Empty],
  ['(async function(x=1){"use strict";})', Context.Empty],
  ['(async function(a, x=1){"use strict";})', Context.Empty],
  ['(async function({x}){"use strict";})', Context.Empty],
  ['async function a() { return await; }', Context.Empty],
  ['async function x() { var a = (x, y, await) => { }; }', Context.Empty],
  ['function x(package) { "use strict"; }', Context.Empty],
  ['async function x() { var a = (x, await, y) => { }; }', Context.Empty],
  ['async function x() { (b = (c = await => {}) => {}) => {}; }', Context.Empty],
  ['async function foo (foo) { super() };', Context.Empty],
  ['async function foo() { (async function await() { }) }', Context.Empty],
  [`(async function() { 0, { await } = {};  });`, Context.Empty],
  ['async function f(){ (x = new (await x)) => {}   }', Context.Empty],
  ['async function f(){ (x = new f[await x]) => {}   }', Context.Empty],
  [`async function f(x = () => await x){}`, Context.Empty],
  ['async function f(){ (x = class A {[await foo](){}; "x"(){}}) => {} }', Context.Empty],
  ['async function x({await}) { return 1 }', Context.Empty],
  ['async function f() { return {await}; }', Context.Empty],
  ['async function f() { return {await = 0} = {}; }', Context.Empty],
  ['async (a = await => {}) => {}', Context.Empty],
  ['async function foo() { await }', Context.Empty],
  ['async function a(k = await 3) {}', Context.Empty],
  ['function f(x) { let x }', Context.OptionsDisableWebCompat],
  ['function f(x) { let x }', Context.Empty],
  ['function foo({x:abc+1}) {}', Context.Empty],
  ['function foo({x:abc.d}) {}', Context.Empty],
  ['function foo([abc.d]) {}', Context.Empty],
  ['function foo([super]) {}', Context.Empty],
  ['function foo({x:super}) {}', Context.Empty],
  ['function foo({x:super()}) {}', Context.Empty],
  ['function foo([super()]) {}', Context.Empty],
  ['async function f() { delete await; }', Context.Empty],
  ['async function foo (foo = super()) { let bar; }', Context.Empty],
  ['async function foo (foo = super()) { let bar; }', Context.Empty],
  ['async function foo (foo = super()) { let bar; }', Context.Empty],
  ['abc: async function a() {}', Context.Empty],
  ['async function wrap() {\nasync function await() { }\n}', Context.Empty],
  ['async function foo(await) { }', Context.Empty],
  ['(async function await() { })', Context.Empty],
  ['(async function foo(await) { })', Context.Empty],
  ['(async function foo() { return {await} })', Context.Empty],
  ['async function* a() { for (let m in ((await))) x;  (r = a) => {} }', Context.Strict],
  ['async function* g() { await; }; f = ([...[,]] = g()) => {};', Context.Empty],
  ['async ({a = b})', Context.Empty],
  ['async await => 1"', Context.Empty],
  ['async function f() { for await (let.x of a); }', Context.Empty],
  ['async function fn() { for await (const [x] = 1 of []) {} }', Context.Empty],
  ['async function fn() { for await (const {x} = 1 of []) {} }', Context.Empty],
  ['async function fn() { for await (let [x] = 1 of []) {} }', Context.Empty],
  ['async function fn() { for await (let {x} = 1 of []) {} }', Context.Empty],
  ['async function fn() { for await (var [x] = 1 of []) {} }', Context.Empty],
  ['async function fn() { for await (var {x} = 1 of []) {} }', Context.Empty],
  ['async function fn() { for await (const x = 1 of []) {} }', Context.Empty],
  ['async function fn() { for await (let x = 1 of []) {} }', Context.Empty],
  ['async function fn() { for await (var x = 1 of []) {} }', Context.Empty],
  ['async function fn() { for (const {x} = 1 of []) {} }', Context.Empty],
  ['async function fn() { for (let {x} = 1 of []) {} }', Context.Empty],
  ['async function fn() { for (let x = 1 of []) {} }', Context.Empty],
  ['async function fn() { for (var x = 1 of []) {} }', Context.Empty],
  ['async (a = await) => {}', Context.Empty],
  ['async (...await) => 1', Context.Empty],
  ['async ([await]) => 1', Context.Empty],
  ['async function f() { let\nyield 0 }', Context.Empty],
  ['async function f() { "use strict"; let\nawait 0 }', Context.Empty],
  ['async ([...await]) => 1', Context.Empty],
  ['async (b = {await}) => 1', Context.Empty],
  ['async (b = {a: await}) => 1', Context.Empty],
  ['async (b = [await]) => 1', Context.Empty],
  ['async function* f(a = await) {}', Context.Empty],
  ['function f(a = async function*(a = await) {}) {}', Context.Empty],
  ['function f() { a = async function*(a = await) {}; }', Context.Empty],
  ['async function a(k = await 3) {}', Context.Empty],
  ['async (a = await) => {}', Context.Empty],
  ['async function foo (foo) { super.prop };', Context.Empty],
  ['async function foo (foo) { super.prop };', Context.Empty],
  ['"use strict"; async function eval () {  }', Context.Empty],
  ['async function f() { let\narguments.length }', Context.Empty],
  ['async function f() { let\narguments.await }', Context.Empty],
  ['async function f() { let\narguments.package }', Context.Empty],
  ['async function f() { let\narguments.yield }', Context.Empty],
  ['async function foo (foo = super()) { let bar; }', Context.Empty],
  ['async function a(){ (foo = +await bar) => {} }', Context.Empty],
  ['async function a(){ ([await]) => 1 }', Context.Empty],
  ['async function a(){ (x = delete ((await) = f)) => {} }', Context.Empty],
  ['async function a(){ (await) => x }', Context.Empty],
  ['async function a(){ (e=await)=>l }', Context.Empty],
  ['async function af() { var a = (x, y, z = await 0) => { }; }', Context.Empty],
  ['async function af() { var a = (x, y = await 0, z = 0) => { }; }', Context.Empty],
  ['async function af() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function af() { var a = (x, await, y) => { }; }', Context.Empty],
  ['async function af() { var a = (x, y, await) => { }; }', Context.Empty],
  ['async function af() { var a = (await) => { }; }', Context.Empty],
  ['async function af() { var a = await => { }; }', Context.Empty],
  ['async function a(){ async ([a=await]) => 1 }', Context.Empty],
  ['({async foo() { var await }})', Context.Empty],
  ['({async foo(await) { }})', Context.Empty],
  ['({async foo() { return {await} }})', Context.Empty],
  ['async function f(a = await) {}', Context.Empty],
  ['({async foo: 1})', Context.Empty],
  ['class A {async\nfoo() { }}', Context.Empty],
  ['class A {static async\nfoo() { }}', Context.Empty],
  ['async function* g(){ ({[await]: a}) => 0; }', Context.Empty],
  ['class A {async constructor() { }}', Context.Empty],
  ['class A {async foo() { return {await} }}', Context.Empty],
  ['async function foo() { await }', Context.Empty],
  ['(async function foo() { await })', Context.Empty],
  ['({async foo() { await }})', Context.Empty],
  ['async function foo(a = await b) {}', Context.Empty],
  ['(async function foo(a = await b) {})', Context.Empty],
  ['async (a = await b) => {}', Context.Empty],
  ['async function wrapper() {\nasync (a = await b) => {}\n}', Context.Empty],
  ['({async foo(a = await b) {}})', Context.Empty],
  ['async function wrap() {\n(a = await b) => a\n}', Context.Empty],
  ['async function wrap() {\n({a = await b} = obj) => a\n}', Context.Empty],
  ['function* wrap() {\nasync(a = yield b) => a\n}', Context.Empty],
  ['async function f(){ (x = new x(await x)) => {}   }', Context.Empty],
  ['async function arguments() { "use strict"; }', Context.Empty],
  ['async function fn(eval) { "use strict"; }', Context.Empty],
  ['async function method() { var await = 1; }', Context.Empty],
  ['async function method(await;) { }', Context.Empty],
  ['async function method() { var x = await; }', Context.Empty],
  ['async function af(a, b = await a) { }', Context.Empty],
  ['async function af(a, b = await a) { "use strict"; }', Context.Empty],
  ['async function af(x) { function f(a = await x) { } f(); } af();', Context.Empty],
  ['async function af(arguments) { "use strict"; }', Context.Empty],
  ['async function af(eval) { "use strict"; }', Context.Empty],
  ['async function a() { async function b(k = await 3) {} }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function k() { function a() { await 4; } }', Context.Empty],
  ['async (b = [...await]) => 1', Context.Empty],
  ['async (b = class await {}) => 1', Context.Strict | Context.Module],
  ['async (await, b = async()) => 2', Context.Empty],
  ['async (await, b = async () => {}) => 1', Context.Empty],
  ['async function* a() { await;  (r = a) => {} }', Context.Empty],
  ['async function* a() { (await) => {} }', Context.Empty],
  ['{ async function f() {} async function f() {} }', Context.OptionsDisableWebCompat],
  ['switch (0) { case 1: async function f() {} default: function f() {} }', Context.OptionsDisableWebCompat],
  ['{ function* f() {} async function f() {} }', Context.OptionsDisableWebCompat | Context.Strict],
  ['async function* f() { a = async function*(a = await) {}; }', Context.Empty],
  ['function f(a = async function(a = await) {}) {}', Context.Empty],
  ['function f(a, b, a, c = 10) { }', Context.OptionsDisableWebCompat],
  ['async function a() { async function b(k = await 3) {} }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function a() { async function b([k = await 3]) {} }', Context.Empty],
  ['async function a() { async function b([k = [await 3]]) {} }', Context.Empty],
  ['async function a() { async function b({k = await 3}) {} }', Context.Empty],
  ['async function a() { async function b({k = [await 3]}) {} }', Context.Empty],
  ['async function f() { for await ([a = 1] = 1 of []); }', Context.Empty],
  ['async function f() { for await ([a] = 1 of []); }', Context.Empty],
  ['async function fn() { var await; }', Context.Empty],
  ['async function fn() { var await; }', Context.Empty],
  ['async function fn() { void await; }', Context.Empty],
  ['async function a(){ (foo = await bar) => {}     }', Context.Empty],
  ['async function f(){ (fail = class A {[await foo](){}; "x"(){}}) => {}    }', Context.Empty],
  ['async function fn() { await: ; }', Context.Empty],
  [`async function foo (foo = super()) { var bar; }`, Context.Empty],
  ['async function fn() { void await; }', Context.Empty],
  ['async function fn() { void await; }', Context.Empty],
  ['async function fn() { await: ; }', Context.Empty],
  ['async function x() { var a = (x, await, y) => { }; }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function x() { var a = (x, y = await 0, z = 0) => { }; }', Context.Empty],
  ['async function x() { var a = (x, y, z = await 0) => { }; }', Context.Empty],
  ['async function foo (x = await) {  }', Context.Empty],
  ['async function f() { class x { foo(await y){} }   }', Context.Empty],
  ['function f() { class x { foo(x=await y){} }   }', Context.Empty],
  ['async function foo() { async function bar(a = await baz()) {} }', Context.Empty],
  ['async function wrap() {\n({a = await b} = obj) => a\n}', Context.Empty],
  ['function f() { class x { foo(x=new (await y)()){} }   }', Context.Empty],
  ['async function wrap() {\n(a = await b) => a\n}', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['async function x() { var a = (x = await 0) => { }; }', Context.Empty],
  ['function foo() {}; function bar(){} let baz, {f: [bar]} = {f:[10]};', Context.Empty],
  ['for (let let = 0; let < 10; let++) {}', Context.Empty],
  ['"use strict"; for (let let = 0; let < 10; let++) {}"', Context.Empty],
  ['function f() { var x; let x; }', Context.Empty],
  ['function f() { var x; let [x] = 20; }', Context.Empty],
  ['function f() { var [x] = 20; let [x] = 20; }', Context.Empty],
  ['function f() { var [x] = 20; let x; }', Context.Empty],
  ['function f() { let x; var x; }', Context.Empty],
  ['function f() { let x; var {x} = 20; }', Context.Empty],
  ['function f() { let x;  function x(){} }', Context.Empty],
  ['function f() { function x(){}; let x; }', Context.Empty],
  ['function f() { const x = 20; var x; }', Context.Empty],
  ['function f() { const x = 20; var {x} = 20; }', Context.Empty],
  ['function f() { const x = 20; var [x] = 20; }', Context.Empty],
  ['function f() { const x = 20;  function x(){} }', Context.Empty],
  ['function f() { function x(){}; const x = 20; }', Context.Empty],
  ['function f() { class x{}; var x; }', Context.Empty],
  ['function f() { class x{}; var {x} = 20; }', Context.Empty],
  ['function f() { class x{}; var [x] = 20; }', Context.Empty],
  ['function f() { function x(){}; class x{}; }', Context.Empty],
  ['async function a() { async function b(k = [await 3]) {} }', Context.Empty],
  ['function *f(x = (switch) = f) {}', Context.Empty],
  ['function *f(x = (do) = f) {}', Context.Empty],
  ['async function * gen() { yield --> comment  } ', Context.Empty],
  ['async function * gen() { ({a: yield 24} = {a: 42}); } ', Context.Empty],
  ['async function * gen() { class C extends yield { } } ', Context.Empty],
  ['async function * gen() { for (yield "x" in {}); } ', Context.Empty],
  ['async function * gen() { + yield 3 } ', Context.Empty],
  ['async function * gen() { yield ? 1 : 2 } ', Context.Empty],
  ['async function * gen() { (async function * foo(await) { }) } ', Context.Empty],
  ['async function * gen() { try { } catch (await) { } } ', Context.Empty],
  ['async function * gen() { (async function * foo(yield) { }) } ', Context.Empty],
  ['async function * gen() { yield++; } ', Context.Empty],
  ['async function * gen() { await++; } ', Context.Empty],
  ['async function * gen() { yield * } ', Context.Empty],
  ['async function * gen() { (yield *) } ', Context.Empty],
  ['async function * gen() { yield 3 + yield 4; } ', Context.Empty],
  ['async function * gen() { yield: 34 } ', Context.Empty],
  ['async function * gen() { yield / yield } ', Context.Empty],
  ['async function * gen() { var [yield] = [42]; } ', Context.Empty],
  ['async function * gen() { var [await] = [42]; } ', Context.Empty],
  ['async function * gen() { var {foo: yield} = {a: 42}; } ', Context.Empty],
  ['async function * gen() { yield\n{yield: 42} } ', Context.Empty],
  ['async function * gen() { yield /* comment */\n {yield: 42} } ', Context.Empty],
  ['async function * gen() { var {foo: await} = {a: 42}; } ', Context.Empty],
  ['async function * gen() { [yield] = [42]; } ', Context.Empty],
  ['async function * gen() { [await] = [42]; } ', Context.Empty],
  ['async function * gen() { ({a: await} = {a: 42}); } ', Context.Empty],
  ['async function * gen() { ({a: yield} = {a: 42}); } ', Context.Empty],
  ['async function * gen() { var {foo: yield 24} = {a: 42}; } ', Context.Empty],
  ['async function * gen() { ({a: yield 24} = {a: 42}); } ', Context.Empty],
  ['async function * gen() { ({a: await 24} = {a: 42}); } ', Context.Empty],
  ['({ yield })', Context.Strict],
  ['for ( ; false; ) async function* g() {}', Context.Empty],
  ['class A { async* f() { () => await a; } }', Context.Empty],
  ['class A { async* f() { () => yield a; } }', Context.Empty],
  ['class A { *async f() {} }', Context.Empty],
  ['obj = { *async f() {}', Context.Empty],
  ['obj = { *async* f() {}', Context.Empty],
  ['obj = { async* f() { () => await a; } }', Context.Empty],
  ['obj = { async* f() { () => yield a; } }', Context.Empty],
  ['f = async function*() { () => yield a; }', Context.Empty],
  ['f = async function*() { () => await a; }', Context.Empty],
  ['async function* f([...x = []]) {  }', Context.Empty],
  ['function foo(a, b) { let b }', Context.Empty],
  ['async function* f([...x, y]) {}', Context.Empty],
  ['async function* f([...{ x }, y]) {}', Context.Empty],
  ['function foo(a, a) { "use strict"; }', Context.Empty],
  ['{ function foo(a, a) {  } function foo(a, a) {  } }', Context.OptionsDisableWebCompat],
  ['{ function foo(a, a) {  } function foo(a, a) { "use strict";  } }', Context.Empty],
  ['async function* f([...[x], y]) {}', Context.Empty],
  ['f = async function*() { () => await a; }', Context.Empty],
  ['function a({x: {x: y}.length}){}', Context.Empty],
  ['function a({x: {}.length}){}', Context.Empty],
  ['function a({x: void x}){}', Context.Empty],
  ['function a({x: typeof x}){}', Context.Empty],
  ['function a({x: null}){}', Context.Empty],
  ['function a({x: false}){}', Context.Empty],
  ['function a({x: class{}}){}', Context.Empty],
  [`function f({...{a: b}}){}`, Context.Empty],
  ['function super() {"use strict";}', Context.Empty],
  ['function f(,,){}', Context.Empty],
  ['function foo() { return {}; }; var [foo()] = [];', Context.Empty],
  ['function foo() { return {}; }; let [foo()] = [];', Context.Empty],
  ['function foo() { return {}; }; const [foo()] = [];', Context.Empty],
  ['function foo() { return {}; }; [foo()] = [];', Context.Empty],
  ['function foo() { return {}; }; var [foo().x] = [];', Context.Empty],
  ['function foo() { return {}; }; let [foo().x] = [];', Context.Empty],
  ['function foo() { return {}; }; const [foo().x] = [];', Context.Empty],
  ['function f(x = package = 10) {}', Context.Strict],
  ['function f(x = let = 10) {}', Context.Strict],
  ['function f(x = yield = 10) {}', Context.Strict],
  ['function f(x = package = 10) { "use strict"; }', Context.Empty],
  ['function test({...[]}) {}', Context.Empty],
  ['function test({...x = 1}) {}', Context.Empty],
  ['function test({...{}}) {}', Context.Empty],
  ['function f([var]) {}', Context.Empty],
  ['function f([typeof]) {}', Context.Empty],
  ['function f([while]) {}', Context.Empty],
  ['function f([catch]) {}', Context.Empty],
  ['function f([export]) {}', Context.Empty],
  ['function* a({e: a.b}) {}', Context.Empty],
  ['function f() { class x extends await y { }   }', Context.Empty],
  ['function f() { class x extends foo(await y) { }   }', Context.Empty],
  ['function f() { class x { foo(await y){} }   }', Context.Empty],
  ['function f() { class x { foo(x=await y){} }   }', Context.Empty],
  ['function *f(){ class x { foo(x=new (yield)()){} }  }', Context.Empty],
  ['function *f(){ class x { foo(x=yield y){} }  }', Context.Empty],
  ['function *f(){ class x { foo(x=yield){} }  }', Context.Empty],
  ['function *f(){ class x { foo(yield){} }  }', Context.Empty],
  ['function *f(){ class x extends yield y { }  }', Context.Empty],
  ['function *f(){ class x extends yield { }  }', Context.Empty],
  ['function f([if]) {}', Context.Empty],
  ['function f(){ class x extends foo(yield y) { }  }', Context.Empty],
  ['function f(){ class x { foo(yield){} }  }', Context.Empty],
  ['f(x=package=10) => { "use strict"; }', Context.Empty],
  ['f(x = eval = 10) => { "use strict"; }', Context.Empty],
  ['o = {foo(x=package=y){ "use strict"; }}', Context.Empty],
  ['class c {foo(x=package=y){ "use strict"; }}', Context.Empty],
  ['o = {foo(x = package = y){ "use strict"; }}', Context.Empty],
  ['o = {foo(x = let = y){ "use strict"; }}', Context.Empty],
  ['o = {foo(x = implements = y){ "use strict"; }}', Context.Empty],
  ['o = {foo(x= eval = y){ "use strict"; }}', Context.Empty],
  ['function f(async function() {}) { }', Context.Empty],
  ['function foo(package) { "use strict"; }', Context.Empty],
  ['function test({...x = 1}) {}', Context.Empty],
  ['function test({...[]}) {}', Context.Empty],
  ['function test({...x = 1}) {}', Context.Empty],
  ['function test({...{}}) {}', Context.Empty],
  ['function test({...x = 1}) {}', Context.Empty],
  ['function foo() { "use strict"; 00004; }', Context.Strict],
  ['function f(){ class x { foo(x=yield){} }  }', Context.Empty],
  ['function f(){ class x { foo(x=yield y){} }  }', Context.Empty],
  ['function f(){ class x { foo(x=new (yield)()){} }  }', Context.Empty],
  ['function f(){ class x { [yield](){} }  }', Context.Empty],
  ['function f(){ class x { [yield y](){} }  }', Context.Empty],
  ['function test({...x = 1}) {}', Context.Empty],
  ['function foo() { "use strict"; 00004; }', Context.Strict],
  ['"use strict"; function f(x= package = 10){ }', Context.Empty],
  ['for (var i = 0; i < 1; i++) function f() { };', Context.Empty],
  ['for (var x in {a: 1}) function f() { };', Context.Empty],
  ['function f() { class x { foo(x=await y){} }   }', Context.Empty],
  ['function *f(){ class x extends yield y { }  }', Context.Empty],
  ['for (var x in {}) function f() { };', Context.Empty],
  ['for (var x in {}) function foo() {}', Context.Empty],
  ['for (x in {a: 1}) function f() { };', Context.Empty],
  [`function f({...a.b}){}`, Context.Empty],
  [`function f({...[a, b]}){}`, Context.Empty],
  ['function f(x) { const x = y }', Context.Empty],
  ['function f([x=x()=x]){},({x:{1:y()=x},x:{7:3}})>x', Context.Empty],
  ['function f([x=x()=x]){}', Context.Empty],
  ['function *f(x = delete ((null) = f)) {}', Context.Empty],
  ['function *f(x = delete ((true) = f)) {}', Context.Empty],
  ['function *f(x = delete ((false) = f)) {}', Context.Empty],
  [
    `function *f(){
      (false) = 1;
    }`,
    Context.Empty
  ],
  ['({x:{1:y()=x},x:{7:3}})>x', Context.Empty],
  ['function f(a, a) {}', Context.Strict],
  ['function f(a, b, a) {}', Context.Strict],
  ['function f(b, a, a) {}', Context.Strict],
  ['function f(a, a, b) {}', Context.Strict],
  ['function f(b, a, b, a) {}', Context.Strict],
  ['function f(b, a, b, a, [fine]) {}', Context.Strict],
  ['function f(b, a, b, a = x) {}', Context.Strict],
  ['function f(b, a, b, ...a) {}', Context.Strict],
  ['function f(a, a) {"use strict"}', Context.OptionsDisableWebCompat],
  ['function f(a, b, a) {"use strict"}', Context.OptionsDisableWebCompat],
  ['function f(b, a, a) {"use strict"}', Context.OptionsDisableWebCompat],
  ['function f(b, a, b, a) {"use strict"}', Context.OptionsDisableWebCompat],
  ['function f(b, a, b, a, [fine]) {"use strict"}', Context.OptionsDisableWebCompat],
  ['function f(b, a, b, a = x) {"use strict"}', Context.OptionsDisableWebCompat],
  ['function f(b, a, b, ...a) {"use strict"}', Context.OptionsDisableWebCompat],
  ['function x(foo) { let foo = 1; }', Context.OptionsDisableWebCompat],
  ['function x(foo) { let foo = 1; }', Context.Empty],
  ['function foo() {} let foo = 1;', Context.Empty],
  ['function x([public], public){}', Context.OptionsDisableWebCompat],
  ['function f([a, a]) {}', Context.OptionsDisableWebCompat],
  ['function f([a, b, a]) {}', Context.OptionsDisableWebCompat],
  ['function f([b, a, a]) {}', Context.OptionsDisableWebCompat],
  ['function f([a, a, b]) {}', Context.OptionsDisableWebCompat],
  ['function f(){ const x = y; var x; }', Context.OptionsDisableWebCompat],
  ['function f(){ var x; const x = y; }', Context.OptionsDisableWebCompat],
  ['function f(){ let x; function x(){} }', Context.OptionsDisableWebCompat],
  ['function f(){ function x(){} let x; }', Context.OptionsDisableWebCompat],
  ['function f(){ const x = y; function x(){} }', Context.OptionsDisableWebCompat],
  ['function f(){ function x(){} const x = y; }', Context.OptionsDisableWebCompat],
  ['function a() { const x = 1; var x = 2; }', Context.OptionsDisableWebCompat],
  ['function* f(a) { let a; }', Context.OptionsDisableWebCompat],
  ['function* f([a]){ let a; }', Context.OptionsDisableWebCompat],
  ['function* f({a}){ let a; }', Context.OptionsDisableWebCompat],
  ['function a() { const x = 1; var x = 2; }', Context.OptionsDisableWebCompat],
  ['function a() { const x = 1; var x = 2; }', Context.OptionsDisableWebCompat],
  ['function a() { const x = 1; var x = 2; }', Context.OptionsDisableWebCompat],
  ['{ function f(){} function f(){} }', Context.OptionsDisableWebCompat],
  ['function f(){  for (var x;;); const x = 1  }', Context.OptionsDisableWebCompat],
  ['function foo({x:x, x:x}) {}', Context.OptionsDisableWebCompat],
  ['function foo({x:x}, {x:x}) {}', Context.OptionsDisableWebCompat],
  ['function foo() { return {}; }; let {x:foo()} = {};', Context.OptionsDisableWebCompat],
  ['function foo([x, x]) {}', Context.OptionsDisableWebCompat],
  ['function foo([x], [x]) {}', Context.OptionsDisableWebCompat],
  ['function foo([x], {x:x}) {}', Context.OptionsDisableWebCompat],
  ['function foo([x, x]) {}', Context.OptionsDisableWebCompat | Context.Strict | Context.Module],
  ['function foo([x], [x]) {}', Context.OptionsDisableWebCompat | Context.Strict | Context.Module],
  ['function foo([x], {x:x}) {}', Context.OptionsDisableWebCompat | Context.Strict | Context.Module],
  ['function foo([x], x) {}', Context.OptionsDisableWebCompat],
  ['function foo(x, [x]) {}', Context.OptionsDisableWebCompat],
  ['function g() { { var x; let x; } }', Context.OptionsDisableWebCompat],
  ['function f() { { { var x; } let x; } }', Context.OptionsDisableWebCompat],
  ['function f() { { { var x; } let x; } }', Context.Empty],
  ['function f() { { var x; let x; } }', Context.Empty],
  ['function f() { { var x; let x; } }', Context.OptionsDisableWebCompat],
  ['(function (e) { var e; const e = undefined; });', Context.OptionsDisableWebCompat],
  ['function x() {}const y = 4, x = 5;', Context.OptionsDisableWebCompat],
  ['function x() {}const y = 4, x = 5;', Context.OptionsDisableWebCompat],
  ['function x() {}const x = function() {};', Context.OptionsDisableWebCompat],
  ['function foo({x:{z:[z1]}}, z1) {}', Context.OptionsDisableWebCompat],
  ['function foo([x]) { let x = 10;}', Context.OptionsDisableWebCompat],
  ['(function() { "use strict"; { const f = 1; var f; } })', Context.OptionsDisableWebCompat],
  ['function foo([x, x]) {}', Context.OptionsDisableWebCompat],
  ['function x(x = class x {}) { const x = y; }', Context.OptionsDisableWebCompat],
  ['async function x(x) { let x; }', Context.OptionsDisableWebCompat],
  ['async function x(x) { const x = 1; }', Context.OptionsDisableWebCompat],
  ['async function x(x) { class x { } }', Context.OptionsDisableWebCompat],
  ['function fooa(a = b, a) {}', Context.OptionsDisableWebCompat],
  ['function f(x = 0, x) {}', Context.OptionsDisableWebCompat],
  ['0, function(x = 0, x) {};', Context.OptionsDisableWebCompat],
  ['function foo(a, a = b) {}', Context.OptionsDisableWebCompat],
  ['function f(x = 0, x) {}', Context.OptionsDisableWebCompat | Context.Strict | Context.Module],
  ['0, function(x = 0, x) {};', Context.OptionsDisableWebCompat | Context.Strict | Context.Module],
  ['function foo(a, a = b) {}', Context.OptionsDisableWebCompat | Context.Strict | Context.Module],
  ['function f([foo], [foo]){}', Context.OptionsDisableWebCompat],
  [`const x = a; function x(){};`, Context.OptionsDisableWebCompat],
  [`async function x() { var a = await => { }; }`, Context.Empty],
  [`async function x() { var a = (await) => { }; }`, Context.Empty],
  [`async function x() { var a = (x, y, await) => { }; }`, Context.Empty],
  [`async function x() { var a = (x, await, y) => { }; }`, Context.Empty],
  [`async function x() { var a = (x = await 0) => { }; }`, Context.Empty],
  [`async function x() { var a = (x, y = await 0, z = 0) => { }; }`, Context.Empty],
  [`async function x() { var a = (x, y, z = await 0) => { }; }`, Context.Empty],
  [`function () { a = async await => { } }`, Context.Empty],
  [`const x; { let x; var y; }`, Context.Empty],
  [`const a = b; let a = c`, Context.Empty],
  [`const {x:x, x:x} = c`, Context.Empty],
  [`const [x, {x}] = y`, Context.Empty],
  [`const [x, x] = c`, Context.Empty],
  [`const x = x, x = y;`, Context.Empty],
  [`const a = b, a = c`, Context.Empty],
  [`const {x:c, y:c} = {};`, Context.Empty],
  [`const a = 0, a = 1;`, Context.Empty],
  [`const {a:a, a:a} = {};`, Context.Empty],
  [`const a = 1; const a = 2`, Context.Empty],
  [`const x = x, x = y;`, Context.OptionsDisableWebCompat],
  [`const a = b, a = c`, Context.OptionsDisableWebCompat],
  [`const {x:c, y:c} = {};`, Context.OptionsDisableWebCompat],
  [`const a = 0, a = 1;`, Context.OptionsDisableWebCompat],
  [`const {a:a, a:a} = {};`, Context.OptionsDisableWebCompat],
  [`const a = 1; const a = 2`, Context.OptionsDisableWebCompat],
  ['function f([foo] = x, [foo] = y){}', Context.OptionsDisableWebCompat],
  ['function f({foo} = x, {foo}){}', Context.OptionsDisableWebCompat],
  ['function f([{foo}] = x, {foo}){}', Context.OptionsDisableWebCompat],
  ['function f([{foo}] = x, [{foo}]){}', Context.OptionsDisableWebCompat],
  ['function f([{foo}] = x, [{foo}]){}', Context.Empty],
  ['function f(b, a, b, a = x) {}', Context.OptionsDisableWebCompat],
  ['let x = a; function x(){};', Context.OptionsDisableWebCompat],
  ['const x = a; function x(){};', Context.OptionsDisableWebCompat],
  ['function f([b, a], b) {}', Context.Strict | Context.OptionsDisableWebCompat],
  ['function f([b, a], {b}) {}', Context.Strict | Context.OptionsDisableWebCompat],
  ['function f([b, a], b=x) {}', Context.Strict | Context.OptionsDisableWebCompat],
  ['function f([b, a, b, a]) {}', Context.Strict | Context.OptionsDisableWebCompat],
  ['function f([a, a, b]) {}', Context.Strict | Context.OptionsDisableWebCompat],
  ['function f([b, a], ...b) {}', Context.Empty],
  ['function f([b, a], ...b) {}', Context.Strict | Context.OptionsDisableWebCompat],
  ['(function() { { function* foo() {} function* foo() {} } })()', Context.OptionsDisableWebCompat],
  ['(function() { { function* foo() {} function foo() {} } })()', Context.OptionsDisableWebCompat],
  ['(function() { { function foo() {} function* foo() {} } })()', Context.OptionsDisableWebCompat],
  ['(function() { { async function foo() {} async function foo() {} } })()', Context.OptionsDisableWebCompat],
  ['function f(...rest, b){}', Context.OptionsDisableWebCompat],
  ['let x; { var x; }', Context.OptionsDisableWebCompat],
  ['{ var x; } let x;', Context.OptionsDisableWebCompat],
  ['function f(...a,){}', Context.OptionsDisableWebCompat],
  ['function f(...a = x,){}', Context.OptionsDisableWebCompat],
  ['function f(...a,){}', Context.OptionsDisableWebCompat | Context.Strict | Context.Module],
  ['function f(...a = x,){}', Context.OptionsDisableWebCompat | Context.Strict | Context.Module],
  ['function f(...a = x,){}', Context.OptionsDisableWebCompat],
  ['function f({a: x, b: x}) {}', Context.OptionsDisableWebCompat],
  ['function f({x, x}) {}', Context.OptionsDisableWebCompat],
  ['function f(x, {a: {b: x}}) {}', Context.OptionsDisableWebCompat],
  ['function f(x, {a: {x}}) {}', Context.OptionsDisableWebCompat],
  ['function f(x, {15: x}) {}', Context.OptionsDisableWebCompat],
  ['function f({a: x, ...{x}}) {}', Context.OptionsDisableWebCompat],
  ['function f({a: x, ...x}) {}', Context.OptionsDisableWebCompat],
  ['function f(x, {a: x}) {}', Context.OptionsDisableWebCompat],
  ['function f(x, {"foo": x}) {}', Context.OptionsDisableWebCompat],
  ['"use strict"; function foo(bar, bar){}', Context.OptionsDisableWebCompat],
  ['function foo(bar, bar){}', Context.OptionsDisableWebCompat | Context.Module | Context.Strict],
  ['function f(x) { let x }', Context.OptionsDisableWebCompat],
  ['function f(x) { let x }', Context.Empty],
  ['function f(a, b, a, c = 10) { }', Context.OptionsDisableWebCompat],
  ['function f(a, b = 10, a) { }', Context.OptionsDisableWebCompat],
  ['function foo(a) { let a; }', Context.OptionsDisableWebCompat],
  ['function foo(a, b = () => a) { const b = 1; };', Context.OptionsDisableWebCompat],
  ['function foo(a, b = () => a) { let b; };', Context.OptionsDisableWebCompat],
  ['function foo(arguments, b = () => arguments) { let arguments; };', Context.OptionsDisableWebCompat],
  ['function foo(arguments, b = () => arguments) { const arguments = 1; };', Context.OptionsDisableWebCompat],
  ['(a, b = () => a) => { let b; };', Context.OptionsDisableWebCompat],
  ['(a, b = () => a) => { const b = 1; };', Context.OptionsDisableWebCompat],
  ['function foo({a, b = () => a}) { let b; };', Context.OptionsDisableWebCompat],
  ['function foo([a], b = () => a) { const b = 1; };', Context.OptionsDisableWebCompat],
  ['function foo([arguments, b = () => arguments]) { let arguments; };', Context.OptionsDisableWebCompat],
  ['function foo() {try {} catch({x:x, x:x}) {} }', Context.OptionsDisableWebCompat],
  ['function foo() {try {} catch([x, x]) {} }', Context.OptionsDisableWebCompat],
  ['function foo() {try {} catch({z1, x:{z:[z1]}}) {} }', Context.OptionsDisableWebCompat],
  ['function foo() {try {} catch([x]) { let x = 10;} }', Context.OptionsDisableWebCompat],
  ['function foo() {try {} catch([x]) { function x() {} } }', Context.OptionsDisableWebCompat],
  ['function foo() {try {} catch([x]) { var x = 10;} }', Context.OptionsDisableWebCompat]
]);

// Valid only in sloppy mode and with the 'WebCompat' option on
for (const arg of [
  'if (true) function foo() {}',
  'if (false) {} else function f() { };',
  'label: function f() { }',
  'label: if (true) function f() { }',
  'label: if (true) {} else function f() { }',
  'label: label2: function f() { }'
]) {
  it(`${arg}`, () => {
    t.doesNotThrow(() => {
      parseRoot(`(function() {${arg}})()`, Context.Empty);
    });
    t.throws(() => {
      parseRoot(`(function() {${arg}})()`, Context.OptionsDisableWebCompat);
    });
  });
}

for (const arg of [
  'async function f() { for await ([x] in y) {} }',
  'async function f() { for await ("foo".x in y) {} }',
  'async function f() { for await ((x) in y) {} }',
  'async function f() { for await (var x in y) {} }',
  'async function f() { for await (let x in y) {} }',
  'async function f() { for await (const x in y) {} }'
]) {
  it(`${arg}`, () => {
    t.throws(() => {
      parseRoot(`${arg}`, Context.Empty);
    });
  });
}

for (const arg of [
  'async function wrap() {\n({a = await b} = obj)\n}',
  'async function wrap() {\n(a = await b)\n}',
  'async function foo(a = class {async bar() { await b }}) {}',
  'async function foo(a = {async bar() { await b }}) {}',
  'async function foo(a = async () => await b) {}',
  'async function foo(a = async function foo() { await b }) {}',
  'async function foo() { await + 1 }',
  'async function f() { for await ([a] of []); }',
  'async function f() { for await ([a = 1] of []); }',
  "async function f() { 'use strict'; for await ({a} of []); }",
  'async function * f() { for await ({a: a} of []); }',
  'async function * f() { for await ({0: a} of []); }',
  'async function * f() { for await ({0: a = 1} of []); }',
  'async function x({x}) { var y = x; var x = 2; return y; }',
  'async function x({x}) { { var y = x; var x = 2; } return y; }',
  'async function x({x}, g = () => x) { { var x = 2; } return g(); }',
  'async function x({x}) { var g = () => x; var x = 2; return g(); }',
  'async function x({x}) { { var g = () => x; var x = 2; } return g(); }',
  'async function x({x}, g = () => eval("x")) { var x = 2; return g(); }',
  'async function x(y, g = () => y) { var y = 2; return g(); }',
  'async function x({x}, y) { var z = y; var y = 2; return z; }',
  'async function x({x}, y, [z], v) { var x, y, z; return x*y*z*v }',
  'async function x({x}) { function x() { return 2 }; return x(); }',
  'async function x(x = (y = 1)) { z = 1; await undefined; w = 1; };',
  'async function x(a, b, c) { await a; }',
  'async function a({x}) { var x = 2; return x }',
  'async function a() { await 4; } var await = 5',
  'async function a() { function b() { return await; } }',
  'async function a() { var k = { async: 4 } }',
  'async function a() { await 4; }',
  'async function a() { var t = !await 1 }',
  'async function a() { var t = ~await 1; }',
  'async function a() { var t = !(await 1); }',
  'async function a() { var t = ~(await 1);  }',
  'async function a() { var t = typeof (await 1); }',
  'async function a() { var t = typeof typeof await 1;  }',
  'async function a() { var t = void void await 1;  }',
  'async function a() { await 2 + 3; }',
  '(async function a() {}.constructor)',
  '"use strict"; async function a() { var t = +(await 1); }',
  '"use strict"; async function a() { var t = void (await 1); }',
  '"use strict"; async function a() { var t = !void void await 1; }',
  '"use strict"; async function a() { var t = +(await 1); }',
  '"use strict"; async function a() { var t = +(await 1); }',
  'async function foo({x}) { { var x = 2; } return x; }',
  'async function foo(a = x) { var x = 2; return a; }',
  'async function foo(a = x) { function x() {}; return a; }',
  'async function foo(a = eval("x")) { var x; return a; }',
  'async function foo(a = function() { return x }) { var x; return a(); }',
  'async function foo(a = () => x) { var x; return a(); }',
  'async function foo(a = () => eval("x")) { var x; return a(); }',
  'async function foo(x, y = () => x) { return x + y(); }',
  'async function foo(x = {a: 1, m() { return 2 }}) { return x.a + x.m(); }',
  'async function foo(x = () => 1) { return x() }',
  'async function async(x, y) { return x - y; }',
  'async function async() { return 12; }',
  'async function foo(a, b = () => a, c = b) { function b() { return a; } var a = 2; return [b, c]; }',
  'async function foo(a = x) { let x = 2; return a; }',
  'async function foo(a = () => eval("x")) { var x; return a(); }',
  'async function foo(x = (y = 1)) { z = 1; await undefined; w = 1; };',
  'async function f() { let a = function(a = await) {}; }',
  'async function f(a = async function() { await 1; }) {}',
  'async function foo(y = eval("var x = 2")) { with ({}) { return x; } }',
  'async function foo(y = eval("var x = 2"), z = x) { return z; }',
  'async function foo(y = eval("var x = 2"), z = eval("x")) { return z; }',
  'async function foo(z = eval("var y = 2")) { return y; }',
  'async function foo(f = () => x) { eval("var x = 2"); return f() }',
  'async function foo() { return await bar() + await z(); }',
  'async function foo(a, b) { await a + await b }',
  'async function foo(a) { return a ? await bar() : await z(); }',
  'async function af(x) { var x = 0; with (obj) { x = await af(); } return x; }',
  'async function * foo() { yield ()=>{}; }',
  'async function af1(a) { await a; return await foo.call({ x : 100 }); /** comment**/ }',
  'async function f2(d, e, f) { let x = await f1(d + 10, e + 20, f + 30); return x; }',
  '(async function(x = 1) {})',
  '(async function(x = 1, ...a) {})',
  '(async function(x, y = 1, z, v = 2, ...a) {})',
  '(async function(x, y = 1, z, v = 2) {})',
  '(async function(x, y = 1, z) {})',
  '(async function(x, y = 1, ...a) {})',
  `(async () => { return !await Promise.resolve(false); })();`,
  `async function f(x = async function(){await x}){}`,
  `async function f(x = async () => await x){}`,
  `async function f(){ async(await x); }`,
  `function f() { async function yield() {} }`,
  'async (a = async () => { await 1; }) => {}',
  `async function yield() {}`,
  `(async function yield() {});`,
  `function f() { (async function yield() {}); }`,
  `function* g() { (async function yield() {}); }`,
  `({ async yield() {} });`,
  `function f() { ({ async yield() {} }); }`,
  `function* g() { ({ async yield() {} }); }`,
  `({ async [yield]() {} });`,
  `function f() { ({ async [yield]() {} }); }`,
  `function* g() { ({ async [yield]() {} }); }`,
  'async function* a() { yield; (r = a) => {} }',
  'async function* x(a, b, ...c) { await 1; }',
  'async function* x(a, b = 2) { await 1; }',
  'async function* x(a) { yield 1; }',
  'async function* x(a, b = 2) { yield 1; }',
  'async function* x(a, b, ...c) { yield 1; }',
  'async function x() { let x = await 1; eval("var i = 5"); let y = await 2; debugger; }',
  'new (async function*() {})',
  '(async function*() {}).caller',
  '(async function*() {}).arguments',
  'async function fib(n) { return (n == 0 || n == 1) ? n : await fib(n - 1) + await fib(n - 2); }',
  'var hardcoreFib = async function fib2(n) { return (n == 0 || n == 1) ? n : await fib2(n - 1) + await fib2(n - 2); }',
  '() => class extends (async function() {}) {}',
  'async function f() {   class x { foo(x=new (await)()){} }   }',
  'async function f() {   class x extends await y { }   }',
  `async function yield() {}`,
  'async function x () { a = { a: await(a) } }',
  'async function* a(){}',
  'async function f() {   class x { await(){} }   }',
  'async function f() {   class x { foo(x=await){} }   }',
  'function f() {   class x { [await](){} }   }',
  '(async function* (){})',
  'async function* a() { for (let m in ((yield))) x;  (r = a) => {} }',
  'async function f() {   class x { foo(await){} }   }',
  'function f() {   class x { await(){} }   }',
  'async function f() {   class x extends feh(await y) { }   }',
  'function f() {   class x { foo(x=new (await)()){} }   }',
  'async function fn() { const x = await import([a]); }',
  'async function fn() { const x = await import([]); }',
  'async function fn() { const x = await import(() => {}); }',
  'async function fn() { const x = await import(await a); }',
  'async function fn() { const x = await getpromise(); }',
  'async function fn() { const x = await import(a()()); }',
  'async function fn() { const x = await import(a()[0]); }',
  'async function fn() { const x = await import(a().x); }',
  'async function fn() { const x = await import(b()); }',
  'async function fn() { const x = await import((((((("./foo"))))))); }',
  'async function fn() { const x = await import(x += a); }',
  'async function fn() { const x = await import(x = a); }',
  'async function fn() { const x = await import(delete void typeof +-~! 0 && b); }',
  'async function fn() { const x = await import(false || b); }',
  'async function fn() { const x = await import({}); }',
  'async function fn() { const x = await import({}); }',

  'async function fn() { (await x)[a] += y; }',
  'async function fn() { x[await a] += y; }',
  'async function fn() { (await x).a += await y; }',
  'async function fn() { (await x)[a] += await y; }',
  'async function fn() { x[await a] += await y; }',
  'async function fn() { (await x) ** y; }',
  'async function fn() { return (await x), y; }',
  'async function fn() { return x, await y; }',
  'async function fn() { x.a.b = await y; }',
  'async function fn() {  x[z] = await y; }',
  'async function fn() {x[z].b = await y; }',
  'async function fn() { const x = await import({}); }',
  'async function fn() { x.a[z] = await y;; }',
  'async function fn() { (await x) && y; }',
  'async function fn() { x && await y; }',
  'async function fn() {  x = await y; }',
  'async function fn() { x + await y; }',
  'async function fn() {(await x) + y; }',
  'async function fn() {(await x).a = y; }',
  'async function fn() {  (await x.a).b = y; }',
  'async function fn() { (await x)[z] = y; }',
  'async function fn() { x[await z].b = y;}',
  'async function fn() { (await x[z]).b = y; }',
  'async function * fn() { return import(yield 42); }',
  'async function f() { let\narguments }',
  'async function f() { let\ninterface }',
  'async function f() { let\npackage }',
  'async function f() { for await (x[a in b] of y); }',
  'async function a() { await a.b[c](d).e; }',
  'await.b[c](d).e;',
  `function *a(){yield\n*a}`,
  'async function * fn() { import(yield * ["Mr. X", "Mr. Y", "Mr. Z"]); }',
  'async function* f(a = async function*() { await 1; }) {}',
  'function f() { return await; }',
  `async function *gen() {
    yield {
        ...yield,
        y: 1,
        ...yield yield,
      };
  }`,
  `async function *gen() {
    yield [...yield];
  }`,
  `async function *gen() {
    yield [...yield yield];
  }`,
  `"use strict"; async function * fn() {
    for await ([ {} = yield ] of [iterable]) {
    }
  }`,
  `async function f() {
    let x = await y;
          const a = (b) => {};
  }`,
  `async function f() {
    (((x = await y)));
          const a = (b) => {};
  }`,
  `async function f() {
    let x = await y;
          async (b) => {};
  }`,
  `async function f() {
    (((x = await y)));
          async (b) => {};
  }`
]) {
  it(`${arg}`, () => {
    t.doesNotThrow(() => {
      parseRoot(`${arg}`, Context.Empty);
    });
  });

  it(`${arg}`, () => {
    t.doesNotThrow(() => {
      parseRoot(`${arg}`, Context.OptionsDisableWebCompat);
    });
  });
}

pass('Declarations - Function (pass)', [
  [
    `async\nfunction foo() { }`,
    Context.OptionsLoc,
    {
      body: [
        {
          end: 5,
          expression: {
            end: 5,
            loc: {
              end: {
                column: 5,
                line: 1
              },
              start: {
                column: 0,
                line: 1
              }
            },
            name: 'async',
            start: 0,
            type: 'Identifier'
          },
          loc: {
            end: {
              column: 5,
              line: 1
            },
            start: {
              column: 0,
              line: 1
            }
          },
          start: 0,
          type: 'ExpressionStatement'
        },
        {
          async: false,
          body: {
            body: [],
            end: 24,
            loc: {
              end: {
                column: 18,
                line: 2
              },
              start: {
                column: 15,
                line: 2
              }
            },
            start: 21,
            type: 'BlockStatement'
          },
          end: 24,
          generator: false,
          id: {
            end: 18,
            loc: {
              end: {
                column: 12,
                line: 2
              },
              start: {
                column: 9,
                line: 2
              }
            },
            name: 'foo',
            start: 15,
            type: 'Identifier'
          },
          loc: {
            end: {
              column: 18,
              line: 2
            },
            start: {
              column: 0,
              line: 2
            }
          },
          params: [],
          start: 6,
          type: 'FunctionDeclaration'
        }
      ],
      end: 24,
      loc: {
        end: {
          column: 18,
          line: 2
        },
        start: {
          column: 0,
          line: 1
        }
      },
      sourceType: 'script',
      start: 0,
      type: 'Program'
    }
  ],
  [
    `async function *gen() { yield [...yield]; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'YieldExpression',
                  argument: {
                    type: 'ArrayExpression',
                    elements: [
                      {
                        type: 'SpreadElement',
                        argument: {
                          type: 'YieldExpression',
                          argument: null,
                          delegate: false,
                          start: 34,
                          end: 39,
                          loc: {
                            start: {
                              line: 1,
                              column: 34
                            },
                            end: {
                              line: 1,
                              column: 39
                            }
                          }
                        },
                        start: 31,
                        end: 39,
                        loc: {
                          start: {
                            line: 1,
                            column: 31
                          },
                          end: {
                            line: 1,
                            column: 39
                          }
                        }
                      }
                    ],
                    start: 30,
                    end: 40,
                    loc: {
                      start: {
                        line: 1,
                        column: 30
                      },
                      end: {
                        line: 1,
                        column: 40
                      }
                    }
                  },
                  delegate: false,
                  start: 24,
                  end: 40,
                  loc: {
                    start: {
                      line: 1,
                      column: 24
                    },
                    end: {
                      line: 1,
                      column: 40
                    }
                  }
                },
                start: 24,
                end: 41,
                loc: {
                  start: {
                    line: 1,
                    column: 24
                  },
                  end: {
                    line: 1,
                    column: 41
                  }
                }
              }
            ],
            start: 22,
            end: 43,
            loc: {
              start: {
                line: 1,
                column: 22
              },
              end: {
                line: 1,
                column: 43
              }
            }
          },
          async: true,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'gen',
            start: 16,
            end: 19,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 19
              }
            }
          },
          start: 0,
          end: 43,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 43
            }
          }
        }
      ],
      start: 0,
      end: 43,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 43
        }
      }
    }
  ],
  [
    `function *f(x = delete ((arguments) = f)) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'x',
                start: 12,
                end: 13,
                loc: {
                  start: {
                    line: 1,
                    column: 12
                  },
                  end: {
                    line: 1,
                    column: 13
                  }
                }
              },
              right: {
                type: 'UnaryExpression',
                operator: 'delete',
                argument: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'Identifier',
                    name: 'arguments',
                    start: 25,
                    end: 34,
                    loc: {
                      start: {
                        line: 1,
                        column: 25
                      },
                      end: {
                        line: 1,
                        column: 34
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Identifier',
                    name: 'f',
                    start: 38,
                    end: 39,
                    loc: {
                      start: {
                        line: 1,
                        column: 38
                      },
                      end: {
                        line: 1,
                        column: 39
                      }
                    }
                  },
                  start: 24,
                  end: 39,
                  loc: {
                    start: {
                      line: 1,
                      column: 24
                    },
                    end: {
                      line: 1,
                      column: 39
                    }
                  }
                },
                prefix: true,
                start: 16,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              },
              start: 12,
              end: 40,
              loc: {
                start: {
                  line: 1,
                  column: 12
                },
                end: {
                  line: 1,
                  column: 40
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 42,
            end: 44,
            loc: {
              start: {
                line: 1,
                column: 42
              },
              end: {
                line: 1,
                column: 44
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 10,
            end: 11,
            loc: {
              start: {
                line: 1,
                column: 10
              },
              end: {
                line: 1,
                column: 11
              }
            }
          },
          start: 0,
          end: 44,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 44
            }
          }
        }
      ],
      start: 0,
      end: 44,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 44
        }
      }
    }
  ],
  [
    `function f(){ "use strict"
    /* suffix = */ [foo]; eval = 1; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'MemberExpression',
                  object: {
                    type: 'Literal',
                    value: 'use strict',
                    start: 14,
                    end: 26,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 26
                      }
                    }
                  },
                  computed: true,
                  property: {
                    type: 'Identifier',
                    name: 'foo',
                    start: 47,
                    end: 50,
                    loc: {
                      start: {
                        line: 2,
                        column: 20
                      },
                      end: {
                        line: 2,
                        column: 23
                      }
                    }
                  },
                  start: 14,
                  end: 51,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 2,
                      column: 24
                    }
                  }
                },
                start: 14,
                end: 52,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 2,
                    column: 25
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'Identifier',
                    name: 'eval',
                    start: 53,
                    end: 57,
                    loc: {
                      start: {
                        line: 2,
                        column: 26
                      },
                      end: {
                        line: 2,
                        column: 30
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Literal',
                    value: 1,
                    start: 60,
                    end: 61,
                    loc: {
                      start: {
                        line: 2,
                        column: 33
                      },
                      end: {
                        line: 2,
                        column: 34
                      }
                    }
                  },
                  start: 53,
                  end: 61,
                  loc: {
                    start: {
                      line: 2,
                      column: 26
                    },
                    end: {
                      line: 2,
                      column: 34
                    }
                  }
                },
                start: 53,
                end: 62,
                loc: {
                  start: {
                    line: 2,
                    column: 26
                  },
                  end: {
                    line: 2,
                    column: 35
                  }
                }
              }
            ],
            start: 12,
            end: 64,
            loc: {
              start: {
                line: 1,
                column: 12
              },
              end: {
                line: 2,
                column: 37
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 64,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 2,
              column: 37
            }
          }
        }
      ],
      start: 0,
      end: 64,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 2,
          column: 37
        }
      }
    }
  ],
  [
    `function fn4([[x, y, ...z]]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'ArrayPattern',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'x',
                      start: 15,
                      end: 16,
                      loc: {
                        start: {
                          line: 1,
                          column: 15
                        },
                        end: {
                          line: 1,
                          column: 16
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'y',
                      start: 18,
                      end: 19,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 19
                        }
                      }
                    },
                    {
                      type: 'RestElement',
                      argument: {
                        type: 'Identifier',
                        name: 'z',
                        start: 24,
                        end: 25,
                        loc: {
                          start: {
                            line: 1,
                            column: 24
                          },
                          end: {
                            line: 1,
                            column: 25
                          }
                        }
                      },
                      start: 21,
                      end: 25,
                      loc: {
                        start: {
                          line: 1,
                          column: 21
                        },
                        end: {
                          line: 1,
                          column: 25
                        }
                      }
                    }
                  ],
                  start: 14,
                  end: 26,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 26
                    }
                  }
                }
              ],
              start: 13,
              end: 27,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 27
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 29,
            end: 31,
            loc: {
              start: {
                line: 1,
                column: 29
              },
              end: {
                line: 1,
                column: 31
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn4',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 31,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 31
            }
          }
        }
      ],
      start: 0,
      end: 31,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 31
        }
      }
    }
  ],
  [
    `function fooInline(a, b, c, ...rest) { arguments; this; return [a, b, c, ...rest]; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'a',
              start: 19,
              end: 20,
              loc: {
                start: {
                  line: 1,
                  column: 19
                },
                end: {
                  line: 1,
                  column: 20
                }
              }
            },
            {
              type: 'Identifier',
              name: 'b',
              start: 22,
              end: 23,
              loc: {
                start: {
                  line: 1,
                  column: 22
                },
                end: {
                  line: 1,
                  column: 23
                }
              }
            },
            {
              type: 'Identifier',
              name: 'c',
              start: 25,
              end: 26,
              loc: {
                start: {
                  line: 1,
                  column: 25
                },
                end: {
                  line: 1,
                  column: 26
                }
              }
            },
            {
              type: 'RestElement',
              argument: {
                type: 'Identifier',
                name: 'rest',
                start: 31,
                end: 35,
                loc: {
                  start: {
                    line: 1,
                    column: 31
                  },
                  end: {
                    line: 1,
                    column: 35
                  }
                }
              },
              start: 28,
              end: 35,
              loc: {
                start: {
                  line: 1,
                  column: 28
                },
                end: {
                  line: 1,
                  column: 35
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'Identifier',
                  name: 'arguments',
                  start: 39,
                  end: 48,
                  loc: {
                    start: {
                      line: 1,
                      column: 39
                    },
                    end: {
                      line: 1,
                      column: 48
                    }
                  }
                },
                start: 39,
                end: 49,
                loc: {
                  start: {
                    line: 1,
                    column: 39
                  },
                  end: {
                    line: 1,
                    column: 49
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'ThisExpression',
                  start: 50,
                  end: 54,
                  loc: {
                    start: {
                      line: 1,
                      column: 50
                    },
                    end: {
                      line: 1,
                      column: 54
                    }
                  }
                },
                start: 50,
                end: 55,
                loc: {
                  start: {
                    line: 1,
                    column: 50
                  },
                  end: {
                    line: 1,
                    column: 55
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'ArrayExpression',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'a',
                      start: 64,
                      end: 65,
                      loc: {
                        start: {
                          line: 1,
                          column: 64
                        },
                        end: {
                          line: 1,
                          column: 65
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'b',
                      start: 67,
                      end: 68,
                      loc: {
                        start: {
                          line: 1,
                          column: 67
                        },
                        end: {
                          line: 1,
                          column: 68
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'c',
                      start: 70,
                      end: 71,
                      loc: {
                        start: {
                          line: 1,
                          column: 70
                        },
                        end: {
                          line: 1,
                          column: 71
                        }
                      }
                    },
                    {
                      type: 'SpreadElement',
                      argument: {
                        type: 'Identifier',
                        name: 'rest',
                        start: 76,
                        end: 80,
                        loc: {
                          start: {
                            line: 1,
                            column: 76
                          },
                          end: {
                            line: 1,
                            column: 80
                          }
                        }
                      },
                      start: 73,
                      end: 80,
                      loc: {
                        start: {
                          line: 1,
                          column: 73
                        },
                        end: {
                          line: 1,
                          column: 80
                        }
                      }
                    }
                  ],
                  start: 63,
                  end: 81,
                  loc: {
                    start: {
                      line: 1,
                      column: 63
                    },
                    end: {
                      line: 1,
                      column: 81
                    }
                  }
                },
                start: 56,
                end: 82,
                loc: {
                  start: {
                    line: 1,
                    column: 56
                  },
                  end: {
                    line: 1,
                    column: 82
                  }
                }
              }
            ],
            start: 37,
            end: 84,
            loc: {
              start: {
                line: 1,
                column: 37
              },
              end: {
                line: 1,
                column: 84
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fooInline',
            start: 9,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 84,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 84
            }
          }
        }
      ],
      start: 0,
      end: 84,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 84
        }
      }
    }
  ],
  [
    `function singleRest(...[d]) { return d; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'RestElement',
              argument: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'Identifier',
                    name: 'd',
                    start: 24,
                    end: 25,
                    loc: {
                      start: {
                        line: 1,
                        column: 24
                      },
                      end: {
                        line: 1,
                        column: 25
                      }
                    }
                  }
                ],
                start: 23,
                end: 26,
                loc: {
                  start: {
                    line: 1,
                    column: 23
                  },
                  end: {
                    line: 1,
                    column: 26
                  }
                }
              },
              start: 20,
              end: 26,
              loc: {
                start: {
                  line: 1,
                  column: 20
                },
                end: {
                  line: 1,
                  column: 26
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'Identifier',
                  name: 'd',
                  start: 37,
                  end: 38,
                  loc: {
                    start: {
                      line: 1,
                      column: 37
                    },
                    end: {
                      line: 1,
                      column: 38
                    }
                  }
                },
                start: 30,
                end: 39,
                loc: {
                  start: {
                    line: 1,
                    column: 30
                  },
                  end: {
                    line: 1,
                    column: 39
                  }
                }
              }
            ],
            start: 28,
            end: 41,
            loc: {
              start: {
                line: 1,
                column: 28
              },
              end: {
                line: 1,
                column: 41
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'singleRest',
            start: 9,
            end: 19,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 19
              }
            }
          },
          start: 0,
          end: 41,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 41
            }
          }
        }
      ],
      start: 0,
      end: 41,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 41
        }
      }
    }
  ],
  [
    `function objRest(...{'0': a, '1': b, length}) { return [a, b, length]; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'RestElement',
              argument: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Literal',
                      value: '0',
                      start: 21,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 21
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'a',
                      start: 26,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 21,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 21
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  },
                  {
                    type: 'Property',
                    key: {
                      type: 'Literal',
                      value: '1',
                      start: 29,
                      end: 32,
                      loc: {
                        start: {
                          line: 1,
                          column: 29
                        },
                        end: {
                          line: 1,
                          column: 32
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'b',
                      start: 34,
                      end: 35,
                      loc: {
                        start: {
                          line: 1,
                          column: 34
                        },
                        end: {
                          line: 1,
                          column: 35
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 29,
                    end: 35,
                    loc: {
                      start: {
                        line: 1,
                        column: 29
                      },
                      end: {
                        line: 1,
                        column: 35
                      }
                    }
                  },
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'length',
                      start: 37,
                      end: 43,
                      loc: {
                        start: {
                          line: 1,
                          column: 37
                        },
                        end: {
                          line: 1,
                          column: 43
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'length',
                      start: 37,
                      end: 43,
                      loc: {
                        start: {
                          line: 1,
                          column: 37
                        },
                        end: {
                          line: 1,
                          column: 43
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: true,
                    start: 37,
                    end: 43,
                    loc: {
                      start: {
                        line: 1,
                        column: 37
                      },
                      end: {
                        line: 1,
                        column: 43
                      }
                    }
                  }
                ],
                start: 20,
                end: 44,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 44
                  }
                }
              },
              start: 17,
              end: 44,
              loc: {
                start: {
                  line: 1,
                  column: 17
                },
                end: {
                  line: 1,
                  column: 44
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'ArrayExpression',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'a',
                      start: 56,
                      end: 57,
                      loc: {
                        start: {
                          line: 1,
                          column: 56
                        },
                        end: {
                          line: 1,
                          column: 57
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'b',
                      start: 59,
                      end: 60,
                      loc: {
                        start: {
                          line: 1,
                          column: 59
                        },
                        end: {
                          line: 1,
                          column: 60
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'length',
                      start: 62,
                      end: 68,
                      loc: {
                        start: {
                          line: 1,
                          column: 62
                        },
                        end: {
                          line: 1,
                          column: 68
                        }
                      }
                    }
                  ],
                  start: 55,
                  end: 69,
                  loc: {
                    start: {
                      line: 1,
                      column: 55
                    },
                    end: {
                      line: 1,
                      column: 69
                    }
                  }
                },
                start: 48,
                end: 70,
                loc: {
                  start: {
                    line: 1,
                    column: 48
                  },
                  end: {
                    line: 1,
                    column: 70
                  }
                }
              }
            ],
            start: 46,
            end: 72,
            loc: {
              start: {
                line: 1,
                column: 46
              },
              end: {
                line: 1,
                column: 72
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'objRest',
            start: 9,
            end: 16,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 16
              }
            }
          },
          start: 0,
          end: 72,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 72
            }
          }
        }
      ],
      start: 0,
      end: 72,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 72
        }
      }
    }
  ],
  [
    `function spread() { return { ...p }; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'ObjectExpression',
                  properties: [
                    {
                      type: 'SpreadElement',
                      argument: {
                        type: 'Identifier',
                        name: 'p',
                        start: 32,
                        end: 33,
                        loc: {
                          start: {
                            line: 1,
                            column: 32
                          },
                          end: {
                            line: 1,
                            column: 33
                          }
                        }
                      },
                      start: 29,
                      end: 33,
                      loc: {
                        start: {
                          line: 1,
                          column: 29
                        },
                        end: {
                          line: 1,
                          column: 33
                        }
                      }
                    }
                  ],
                  start: 27,
                  end: 35,
                  loc: {
                    start: {
                      line: 1,
                      column: 27
                    },
                    end: {
                      line: 1,
                      column: 35
                    }
                  }
                },
                start: 20,
                end: 36,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 36
                  }
                }
              }
            ],
            start: 18,
            end: 38,
            loc: {
              start: {
                line: 1,
                column: 18
              },
              end: {
                line: 1,
                column: 38
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'spread',
            start: 9,
            end: 15,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 15
              }
            }
          },
          start: 0,
          end: 38,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 38
            }
          }
        }
      ],
      start: 0,
      end: 38,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 38
        }
      }
    }
  ],
  [
    `function z(x = {a: 1, m() { return 2 }}) { return x.a + x.m(); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'x',
                start: 11,
                end: 12,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 12
                  }
                }
              },
              right: {
                type: 'ObjectExpression',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'a',
                      start: 16,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    value: {
                      type: 'Literal',
                      value: 1,
                      start: 19,
                      end: 20,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 20
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 16,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  },
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'm',
                      start: 22,
                      end: 23,
                      loc: {
                        start: {
                          line: 1,
                          column: 22
                        },
                        end: {
                          line: 1,
                          column: 23
                        }
                      }
                    },
                    value: {
                      type: 'FunctionExpression',
                      params: [],
                      body: {
                        type: 'BlockStatement',
                        body: [
                          {
                            type: 'ReturnStatement',
                            argument: {
                              type: 'Literal',
                              value: 2,
                              start: 35,
                              end: 36,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 35
                                },
                                end: {
                                  line: 1,
                                  column: 36
                                }
                              }
                            },
                            start: 28,
                            end: 36,
                            loc: {
                              start: {
                                line: 1,
                                column: 28
                              },
                              end: {
                                line: 1,
                                column: 36
                              }
                            }
                          }
                        ],
                        start: 26,
                        end: 38,
                        loc: {
                          start: {
                            line: 1,
                            column: 26
                          },
                          end: {
                            line: 1,
                            column: 38
                          }
                        }
                      },
                      async: false,
                      generator: false,
                      id: null,
                      start: 23,
                      end: 38,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 38
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: true,
                    shorthand: false,
                    start: 22,
                    end: 38,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 38
                      }
                    }
                  }
                ],
                start: 15,
                end: 39,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 39
                  }
                }
              },
              start: 11,
              end: 39,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 39
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'BinaryExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'Identifier',
                      name: 'x',
                      start: 50,
                      end: 51,
                      loc: {
                        start: {
                          line: 1,
                          column: 50
                        },
                        end: {
                          line: 1,
                          column: 51
                        }
                      }
                    },
                    computed: false,
                    property: {
                      type: 'Identifier',
                      name: 'a',
                      start: 52,
                      end: 53,
                      loc: {
                        start: {
                          line: 1,
                          column: 52
                        },
                        end: {
                          line: 1,
                          column: 53
                        }
                      }
                    },
                    start: 50,
                    end: 53,
                    loc: {
                      start: {
                        line: 1,
                        column: 50
                      },
                      end: {
                        line: 1,
                        column: 53
                      }
                    }
                  },
                  right: {
                    type: 'CallExpression',
                    callee: {
                      type: 'MemberExpression',
                      object: {
                        type: 'Identifier',
                        name: 'x',
                        start: 56,
                        end: 57,
                        loc: {
                          start: {
                            line: 1,
                            column: 56
                          },
                          end: {
                            line: 1,
                            column: 57
                          }
                        }
                      },
                      computed: false,
                      property: {
                        type: 'Identifier',
                        name: 'm',
                        start: 58,
                        end: 59,
                        loc: {
                          start: {
                            line: 1,
                            column: 58
                          },
                          end: {
                            line: 1,
                            column: 59
                          }
                        }
                      },
                      start: 56,
                      end: 59,
                      loc: {
                        start: {
                          line: 1,
                          column: 56
                        },
                        end: {
                          line: 1,
                          column: 59
                        }
                      }
                    },
                    arguments: [],
                    start: 56,
                    end: 61,
                    loc: {
                      start: {
                        line: 1,
                        column: 56
                      },
                      end: {
                        line: 1,
                        column: 61
                      }
                    }
                  },
                  operator: '+',
                  start: 50,
                  end: 61,
                  loc: {
                    start: {
                      line: 1,
                      column: 50
                    },
                    end: {
                      line: 1,
                      column: 61
                    }
                  }
                },
                start: 43,
                end: 62,
                loc: {
                  start: {
                    line: 1,
                    column: 43
                  },
                  end: {
                    line: 1,
                    column: 62
                  }
                }
              }
            ],
            start: 41,
            end: 64,
            loc: {
              start: {
                line: 1,
                column: 41
              },
              end: {
                line: 1,
                column: 64
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'z',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 64,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 64
            }
          }
        }
      ],
      start: 0,
      end: 64,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 64
        }
      }
    }
  ],
  [
    `function g({x = {a:10,b:20}}, {y = [1,2,3], n = [], p = /abc/}) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  value: {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'x',
                      start: 12,
                      end: 13,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 13
                        }
                      }
                    },
                    right: {
                      type: 'ObjectExpression',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'a',
                            start: 17,
                            end: 18,
                            loc: {
                              start: {
                                line: 1,
                                column: 17
                              },
                              end: {
                                line: 1,
                                column: 18
                              }
                            }
                          },
                          value: {
                            type: 'Literal',
                            value: 10,
                            start: 19,
                            end: 21,
                            loc: {
                              start: {
                                line: 1,
                                column: 19
                              },
                              end: {
                                line: 1,
                                column: 21
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: false,
                          start: 17,
                          end: 21,
                          loc: {
                            start: {
                              line: 1,
                              column: 17
                            },
                            end: {
                              line: 1,
                              column: 21
                            }
                          }
                        },
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'b',
                            start: 22,
                            end: 23,
                            loc: {
                              start: {
                                line: 1,
                                column: 22
                              },
                              end: {
                                line: 1,
                                column: 23
                              }
                            }
                          },
                          value: {
                            type: 'Literal',
                            value: 20,
                            start: 24,
                            end: 26,
                            loc: {
                              start: {
                                line: 1,
                                column: 24
                              },
                              end: {
                                line: 1,
                                column: 26
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: false,
                          start: 22,
                          end: 26,
                          loc: {
                            start: {
                              line: 1,
                              column: 22
                            },
                            end: {
                              line: 1,
                              column: 26
                            }
                          }
                        }
                      ],
                      start: 16,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    start: 12,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 12,
                  end: 27,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 27
                    }
                  }
                }
              ],
              start: 11,
              end: 28,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 28
                }
              }
            },
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'y',
                    start: 31,
                    end: 32,
                    loc: {
                      start: {
                        line: 1,
                        column: 31
                      },
                      end: {
                        line: 1,
                        column: 32
                      }
                    }
                  },
                  value: {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'y',
                      start: 31,
                      end: 32,
                      loc: {
                        start: {
                          line: 1,
                          column: 31
                        },
                        end: {
                          line: 1,
                          column: 32
                        }
                      }
                    },
                    right: {
                      type: 'ArrayExpression',
                      elements: [
                        {
                          type: 'Literal',
                          value: 1,
                          start: 36,
                          end: 37,
                          loc: {
                            start: {
                              line: 1,
                              column: 36
                            },
                            end: {
                              line: 1,
                              column: 37
                            }
                          }
                        },
                        {
                          type: 'Literal',
                          value: 2,
                          start: 38,
                          end: 39,
                          loc: {
                            start: {
                              line: 1,
                              column: 38
                            },
                            end: {
                              line: 1,
                              column: 39
                            }
                          }
                        },
                        {
                          type: 'Literal',
                          value: 3,
                          start: 40,
                          end: 41,
                          loc: {
                            start: {
                              line: 1,
                              column: 40
                            },
                            end: {
                              line: 1,
                              column: 41
                            }
                          }
                        }
                      ],
                      start: 35,
                      end: 42,
                      loc: {
                        start: {
                          line: 1,
                          column: 35
                        },
                        end: {
                          line: 1,
                          column: 42
                        }
                      }
                    },
                    start: 31,
                    end: 42,
                    loc: {
                      start: {
                        line: 1,
                        column: 31
                      },
                      end: {
                        line: 1,
                        column: 42
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 31,
                  end: 42,
                  loc: {
                    start: {
                      line: 1,
                      column: 31
                    },
                    end: {
                      line: 1,
                      column: 42
                    }
                  }
                },
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'n',
                    start: 44,
                    end: 45,
                    loc: {
                      start: {
                        line: 1,
                        column: 44
                      },
                      end: {
                        line: 1,
                        column: 45
                      }
                    }
                  },
                  value: {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'n',
                      start: 44,
                      end: 45,
                      loc: {
                        start: {
                          line: 1,
                          column: 44
                        },
                        end: {
                          line: 1,
                          column: 45
                        }
                      }
                    },
                    right: {
                      type: 'ArrayExpression',
                      elements: [],
                      start: 48,
                      end: 50,
                      loc: {
                        start: {
                          line: 1,
                          column: 48
                        },
                        end: {
                          line: 1,
                          column: 50
                        }
                      }
                    },
                    start: 44,
                    end: 50,
                    loc: {
                      start: {
                        line: 1,
                        column: 44
                      },
                      end: {
                        line: 1,
                        column: 50
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 44,
                  end: 50,
                  loc: {
                    start: {
                      line: 1,
                      column: 44
                    },
                    end: {
                      line: 1,
                      column: 50
                    }
                  }
                },
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'p',
                    start: 52,
                    end: 53,
                    loc: {
                      start: {
                        line: 1,
                        column: 52
                      },
                      end: {
                        line: 1,
                        column: 53
                      }
                    }
                  },
                  value: {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'p',
                      start: 52,
                      end: 53,
                      loc: {
                        start: {
                          line: 1,
                          column: 52
                        },
                        end: {
                          line: 1,
                          column: 53
                        }
                      }
                    },
                    right: {
                      type: 'Literal',
                      value: /abc/,
                      regex: {
                        pattern: 'abc',
                        flags: ''
                      },
                      start: 56,
                      end: 61,
                      loc: {
                        start: {
                          line: 1,
                          column: 56
                        },
                        end: {
                          line: 1,
                          column: 61
                        }
                      }
                    },
                    start: 52,
                    end: 61,
                    loc: {
                      start: {
                        line: 1,
                        column: 52
                      },
                      end: {
                        line: 1,
                        column: 61
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 52,
                  end: 61,
                  loc: {
                    start: {
                      line: 1,
                      column: 52
                    },
                    end: {
                      line: 1,
                      column: 61
                    }
                  }
                }
              ],
              start: 30,
              end: 62,
              loc: {
                start: {
                  line: 1,
                  column: 30
                },
                end: {
                  line: 1,
                  column: 62
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 64,
            end: 66,
            loc: {
              start: {
                line: 1,
                column: 64
              },
              end: {
                line: 1,
                column: 66
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'g',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 66,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 66
            }
          }
        }
      ],
      start: 0,
      end: 66,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 66
        }
      }
    }
  ],
  [
    `function* f4({x}) { { var y = x; var x = 2; } return y; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 14,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'x',
                    start: 14,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 14,
                  end: 15,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 15
                    }
                  }
                }
              ],
              start: 13,
              end: 16,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 16
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: {
                          type: 'Identifier',
                          name: 'x',
                          start: 30,
                          end: 31,
                          loc: {
                            start: {
                              line: 1,
                              column: 30
                            },
                            end: {
                              line: 1,
                              column: 31
                            }
                          }
                        },
                        id: {
                          type: 'Identifier',
                          name: 'y',
                          start: 26,
                          end: 27,
                          loc: {
                            start: {
                              line: 1,
                              column: 26
                            },
                            end: {
                              line: 1,
                              column: 27
                            }
                          }
                        },
                        start: 26,
                        end: 31,
                        loc: {
                          start: {
                            line: 1,
                            column: 26
                          },
                          end: {
                            line: 1,
                            column: 31
                          }
                        }
                      }
                    ],
                    start: 22,
                    end: 32,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 32
                      }
                    }
                  },
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: {
                          type: 'Literal',
                          value: 2,
                          start: 41,
                          end: 42,
                          loc: {
                            start: {
                              line: 1,
                              column: 41
                            },
                            end: {
                              line: 1,
                              column: 42
                            }
                          }
                        },
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 37,
                          end: 38,
                          loc: {
                            start: {
                              line: 1,
                              column: 37
                            },
                            end: {
                              line: 1,
                              column: 38
                            }
                          }
                        },
                        start: 37,
                        end: 42,
                        loc: {
                          start: {
                            line: 1,
                            column: 37
                          },
                          end: {
                            line: 1,
                            column: 42
                          }
                        }
                      }
                    ],
                    start: 33,
                    end: 43,
                    loc: {
                      start: {
                        line: 1,
                        column: 33
                      },
                      end: {
                        line: 1,
                        column: 43
                      }
                    }
                  }
                ],
                start: 20,
                end: 45,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 45
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'Identifier',
                  name: 'y',
                  start: 53,
                  end: 54,
                  loc: {
                    start: {
                      line: 1,
                      column: 53
                    },
                    end: {
                      line: 1,
                      column: 54
                    }
                  }
                },
                start: 46,
                end: 55,
                loc: {
                  start: {
                    line: 1,
                    column: 46
                  },
                  end: {
                    line: 1,
                    column: 55
                  }
                }
              }
            ],
            start: 18,
            end: 57,
            loc: {
              start: {
                line: 1,
                column: 18
              },
              end: {
                line: 1,
                column: 57
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f4',
            start: 10,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 10
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 57,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 57
            }
          }
        }
      ],
      start: 0,
      end: 57,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 57
        }
      }
    }
  ],
  [
    `function* f8({x}) { { var g = () => x; var x = 2; } return g(); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 14,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'x',
                    start: 14,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 14,
                  end: 15,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 15
                    }
                  }
                }
              ],
              start: 13,
              end: 16,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 16
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: {
                          type: 'ArrowFunctionExpression',
                          body: {
                            type: 'Identifier',
                            name: 'x',
                            start: 36,
                            end: 37,
                            loc: {
                              start: {
                                line: 1,
                                column: 36
                              },
                              end: {
                                line: 1,
                                column: 37
                              }
                            }
                          },
                          params: [],
                          async: false,
                          expression: true,
                          start: 30,
                          end: 37,
                          loc: {
                            start: {
                              line: 1,
                              column: 30
                            },
                            end: {
                              line: 1,
                              column: 37
                            }
                          }
                        },
                        id: {
                          type: 'Identifier',
                          name: 'g',
                          start: 26,
                          end: 27,
                          loc: {
                            start: {
                              line: 1,
                              column: 26
                            },
                            end: {
                              line: 1,
                              column: 27
                            }
                          }
                        },
                        start: 26,
                        end: 37,
                        loc: {
                          start: {
                            line: 1,
                            column: 26
                          },
                          end: {
                            line: 1,
                            column: 37
                          }
                        }
                      }
                    ],
                    start: 22,
                    end: 38,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 38
                      }
                    }
                  },
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: {
                          type: 'Literal',
                          value: 2,
                          start: 47,
                          end: 48,
                          loc: {
                            start: {
                              line: 1,
                              column: 47
                            },
                            end: {
                              line: 1,
                              column: 48
                            }
                          }
                        },
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 43,
                          end: 44,
                          loc: {
                            start: {
                              line: 1,
                              column: 43
                            },
                            end: {
                              line: 1,
                              column: 44
                            }
                          }
                        },
                        start: 43,
                        end: 48,
                        loc: {
                          start: {
                            line: 1,
                            column: 43
                          },
                          end: {
                            line: 1,
                            column: 48
                          }
                        }
                      }
                    ],
                    start: 39,
                    end: 49,
                    loc: {
                      start: {
                        line: 1,
                        column: 39
                      },
                      end: {
                        line: 1,
                        column: 49
                      }
                    }
                  }
                ],
                start: 20,
                end: 51,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 51
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 59,
                    end: 60,
                    loc: {
                      start: {
                        line: 1,
                        column: 59
                      },
                      end: {
                        line: 1,
                        column: 60
                      }
                    }
                  },
                  arguments: [],
                  start: 59,
                  end: 62,
                  loc: {
                    start: {
                      line: 1,
                      column: 59
                    },
                    end: {
                      line: 1,
                      column: 62
                    }
                  }
                },
                start: 52,
                end: 63,
                loc: {
                  start: {
                    line: 1,
                    column: 52
                  },
                  end: {
                    line: 1,
                    column: 63
                  }
                }
              }
            ],
            start: 18,
            end: 65,
            loc: {
              start: {
                line: 1,
                column: 18
              },
              end: {
                line: 1,
                column: 65
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f8',
            start: 10,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 10
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 65,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 65
            }
          }
        }
      ],
      start: 0,
      end: 65,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 65
        }
      }
    }
  ],
  [
    `function* f12(y, g = () => y) { var y = 2; return g(); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'y',
              start: 14,
              end: 15,
              loc: {
                start: {
                  line: 1,
                  column: 14
                },
                end: {
                  line: 1,
                  column: 15
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'g',
                start: 17,
                end: 18,
                loc: {
                  start: {
                    line: 1,
                    column: 17
                  },
                  end: {
                    line: 1,
                    column: 18
                  }
                }
              },
              right: {
                type: 'ArrowFunctionExpression',
                body: {
                  type: 'Identifier',
                  name: 'y',
                  start: 27,
                  end: 28,
                  loc: {
                    start: {
                      line: 1,
                      column: 27
                    },
                    end: {
                      line: 1,
                      column: 28
                    }
                  }
                },
                params: [],
                async: false,
                expression: true,
                start: 21,
                end: 28,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 28
                  }
                }
              },
              start: 17,
              end: 28,
              loc: {
                start: {
                  line: 1,
                  column: 17
                },
                end: {
                  line: 1,
                  column: 28
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'Literal',
                      value: 2,
                      start: 40,
                      end: 41,
                      loc: {
                        start: {
                          line: 1,
                          column: 40
                        },
                        end: {
                          line: 1,
                          column: 41
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'y',
                      start: 36,
                      end: 37,
                      loc: {
                        start: {
                          line: 1,
                          column: 36
                        },
                        end: {
                          line: 1,
                          column: 37
                        }
                      }
                    },
                    start: 36,
                    end: 41,
                    loc: {
                      start: {
                        line: 1,
                        column: 36
                      },
                      end: {
                        line: 1,
                        column: 41
                      }
                    }
                  }
                ],
                start: 32,
                end: 42,
                loc: {
                  start: {
                    line: 1,
                    column: 32
                  },
                  end: {
                    line: 1,
                    column: 42
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 50,
                    end: 51,
                    loc: {
                      start: {
                        line: 1,
                        column: 50
                      },
                      end: {
                        line: 1,
                        column: 51
                      }
                    }
                  },
                  arguments: [],
                  start: 50,
                  end: 53,
                  loc: {
                    start: {
                      line: 1,
                      column: 50
                    },
                    end: {
                      line: 1,
                      column: 53
                    }
                  }
                },
                start: 43,
                end: 54,
                loc: {
                  start: {
                    line: 1,
                    column: 43
                  },
                  end: {
                    line: 1,
                    column: 54
                  }
                }
              }
            ],
            start: 30,
            end: 56,
            loc: {
              start: {
                line: 1,
                column: 30
              },
              end: {
                line: 1,
                column: 56
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f12',
            start: 10,
            end: 13,
            loc: {
              start: {
                line: 1,
                column: 10
              },
              end: {
                line: 1,
                column: 13
              }
            }
          },
          start: 0,
          end: 56,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 56
            }
          }
        }
      ],
      start: 0,
      end: 56,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 56
        }
      }
    }
  ],

  [
    `async function f2({x}) { { var x = 2; } return x; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 19,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'x',
                    start: 19,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 19,
                  end: 20,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 20
                    }
                  }
                }
              ],
              start: 18,
              end: 21,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 21
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: {
                          type: 'Literal',
                          value: 2,
                          start: 35,
                          end: 36,
                          loc: {
                            start: {
                              line: 1,
                              column: 35
                            },
                            end: {
                              line: 1,
                              column: 36
                            }
                          }
                        },
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 31,
                          end: 32,
                          loc: {
                            start: {
                              line: 1,
                              column: 31
                            },
                            end: {
                              line: 1,
                              column: 32
                            }
                          }
                        },
                        start: 31,
                        end: 36,
                        loc: {
                          start: {
                            line: 1,
                            column: 31
                          },
                          end: {
                            line: 1,
                            column: 36
                          }
                        }
                      }
                    ],
                    start: 27,
                    end: 37,
                    loc: {
                      start: {
                        line: 1,
                        column: 27
                      },
                      end: {
                        line: 1,
                        column: 37
                      }
                    }
                  }
                ],
                start: 25,
                end: 39,
                loc: {
                  start: {
                    line: 1,
                    column: 25
                  },
                  end: {
                    line: 1,
                    column: 39
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'Identifier',
                  name: 'x',
                  start: 47,
                  end: 48,
                  loc: {
                    start: {
                      line: 1,
                      column: 47
                    },
                    end: {
                      line: 1,
                      column: 48
                    }
                  }
                },
                start: 40,
                end: 49,
                loc: {
                  start: {
                    line: 1,
                    column: 40
                  },
                  end: {
                    line: 1,
                    column: 49
                  }
                }
              }
            ],
            start: 23,
            end: 51,
            loc: {
              start: {
                line: 1,
                column: 23
              },
              end: {
                line: 1,
                column: 51
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f2',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 51,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 51
            }
          }
        }
      ],
      start: 0,
      end: 51,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 51
        }
      }
    }
  ],
  [
    `async function f6({x}, g = () => x) { { var x = 2; } return g(); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 19,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'x',
                    start: 19,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 19,
                  end: 20,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 20
                    }
                  }
                }
              ],
              start: 18,
              end: 21,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 21
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'g',
                start: 23,
                end: 24,
                loc: {
                  start: {
                    line: 1,
                    column: 23
                  },
                  end: {
                    line: 1,
                    column: 24
                  }
                }
              },
              right: {
                type: 'ArrowFunctionExpression',
                body: {
                  type: 'Identifier',
                  name: 'x',
                  start: 33,
                  end: 34,
                  loc: {
                    start: {
                      line: 1,
                      column: 33
                    },
                    end: {
                      line: 1,
                      column: 34
                    }
                  }
                },
                params: [],
                async: false,
                expression: true,
                start: 27,
                end: 34,
                loc: {
                  start: {
                    line: 1,
                    column: 27
                  },
                  end: {
                    line: 1,
                    column: 34
                  }
                }
              },
              start: 23,
              end: 34,
              loc: {
                start: {
                  line: 1,
                  column: 23
                },
                end: {
                  line: 1,
                  column: 34
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: {
                          type: 'Literal',
                          value: 2,
                          start: 48,
                          end: 49,
                          loc: {
                            start: {
                              line: 1,
                              column: 48
                            },
                            end: {
                              line: 1,
                              column: 49
                            }
                          }
                        },
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 44,
                          end: 45,
                          loc: {
                            start: {
                              line: 1,
                              column: 44
                            },
                            end: {
                              line: 1,
                              column: 45
                            }
                          }
                        },
                        start: 44,
                        end: 49,
                        loc: {
                          start: {
                            line: 1,
                            column: 44
                          },
                          end: {
                            line: 1,
                            column: 49
                          }
                        }
                      }
                    ],
                    start: 40,
                    end: 50,
                    loc: {
                      start: {
                        line: 1,
                        column: 40
                      },
                      end: {
                        line: 1,
                        column: 50
                      }
                    }
                  }
                ],
                start: 38,
                end: 52,
                loc: {
                  start: {
                    line: 1,
                    column: 38
                  },
                  end: {
                    line: 1,
                    column: 52
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 60,
                    end: 61,
                    loc: {
                      start: {
                        line: 1,
                        column: 60
                      },
                      end: {
                        line: 1,
                        column: 61
                      }
                    }
                  },
                  arguments: [],
                  start: 60,
                  end: 63,
                  loc: {
                    start: {
                      line: 1,
                      column: 60
                    },
                    end: {
                      line: 1,
                      column: 63
                    }
                  }
                },
                start: 53,
                end: 64,
                loc: {
                  start: {
                    line: 1,
                    column: 53
                  },
                  end: {
                    line: 1,
                    column: 64
                  }
                }
              }
            ],
            start: 36,
            end: 66,
            loc: {
              start: {
                line: 1,
                column: 36
              },
              end: {
                line: 1,
                column: 66
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f6',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 66,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 66
            }
          }
        }
      ],
      start: 0,
      end: 66,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 66
        }
      }
    }
  ],
  [
    `async function f10({x}, y) { var y; return y }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 20,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 20
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'x',
                    start: 20,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 20
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 20,
                  end: 21,
                  loc: {
                    start: {
                      line: 1,
                      column: 20
                    },
                    end: {
                      line: 1,
                      column: 21
                    }
                  }
                }
              ],
              start: 19,
              end: 22,
              loc: {
                start: {
                  line: 1,
                  column: 19
                },
                end: {
                  line: 1,
                  column: 22
                }
              }
            },
            {
              type: 'Identifier',
              name: 'y',
              start: 24,
              end: 25,
              loc: {
                start: {
                  line: 1,
                  column: 24
                },
                end: {
                  line: 1,
                  column: 25
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'y',
                      start: 33,
                      end: 34,
                      loc: {
                        start: {
                          line: 1,
                          column: 33
                        },
                        end: {
                          line: 1,
                          column: 34
                        }
                      }
                    },
                    start: 33,
                    end: 34,
                    loc: {
                      start: {
                        line: 1,
                        column: 33
                      },
                      end: {
                        line: 1,
                        column: 34
                      }
                    }
                  }
                ],
                start: 29,
                end: 35,
                loc: {
                  start: {
                    line: 1,
                    column: 29
                  },
                  end: {
                    line: 1,
                    column: 35
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'Identifier',
                  name: 'y',
                  start: 43,
                  end: 44,
                  loc: {
                    start: {
                      line: 1,
                      column: 43
                    },
                    end: {
                      line: 1,
                      column: 44
                    }
                  }
                },
                start: 36,
                end: 44,
                loc: {
                  start: {
                    line: 1,
                    column: 36
                  },
                  end: {
                    line: 1,
                    column: 44
                  }
                }
              }
            ],
            start: 27,
            end: 46,
            loc: {
              start: {
                line: 1,
                column: 27
              },
              end: {
                line: 1,
                column: 46
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f10',
            start: 15,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 46,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 46
            }
          }
        }
      ],
      start: 0,
      end: 46,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 46
        }
      }
    }
  ],
  [
    `async function f13({x}, y, [z], v) { var x, y, z; return x*y*z*v }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 20,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 20
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'x',
                    start: 20,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 20
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 20,
                  end: 21,
                  loc: {
                    start: {
                      line: 1,
                      column: 20
                    },
                    end: {
                      line: 1,
                      column: 21
                    }
                  }
                }
              ],
              start: 19,
              end: 22,
              loc: {
                start: {
                  line: 1,
                  column: 19
                },
                end: {
                  line: 1,
                  column: 22
                }
              }
            },
            {
              type: 'Identifier',
              name: 'y',
              start: 24,
              end: 25,
              loc: {
                start: {
                  line: 1,
                  column: 24
                },
                end: {
                  line: 1,
                  column: 25
                }
              }
            },
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'Identifier',
                  name: 'z',
                  start: 28,
                  end: 29,
                  loc: {
                    start: {
                      line: 1,
                      column: 28
                    },
                    end: {
                      line: 1,
                      column: 29
                    }
                  }
                }
              ],
              start: 27,
              end: 30,
              loc: {
                start: {
                  line: 1,
                  column: 27
                },
                end: {
                  line: 1,
                  column: 30
                }
              }
            },
            {
              type: 'Identifier',
              name: 'v',
              start: 32,
              end: 33,
              loc: {
                start: {
                  line: 1,
                  column: 32
                },
                end: {
                  line: 1,
                  column: 33
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'x',
                      start: 41,
                      end: 42,
                      loc: {
                        start: {
                          line: 1,
                          column: 41
                        },
                        end: {
                          line: 1,
                          column: 42
                        }
                      }
                    },
                    start: 41,
                    end: 42,
                    loc: {
                      start: {
                        line: 1,
                        column: 41
                      },
                      end: {
                        line: 1,
                        column: 42
                      }
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'y',
                      start: 44,
                      end: 45,
                      loc: {
                        start: {
                          line: 1,
                          column: 44
                        },
                        end: {
                          line: 1,
                          column: 45
                        }
                      }
                    },
                    start: 44,
                    end: 45,
                    loc: {
                      start: {
                        line: 1,
                        column: 44
                      },
                      end: {
                        line: 1,
                        column: 45
                      }
                    }
                  },
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'z',
                      start: 47,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 47
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    },
                    start: 47,
                    end: 48,
                    loc: {
                      start: {
                        line: 1,
                        column: 47
                      },
                      end: {
                        line: 1,
                        column: 48
                      }
                    }
                  }
                ],
                start: 37,
                end: 49,
                loc: {
                  start: {
                    line: 1,
                    column: 37
                  },
                  end: {
                    line: 1,
                    column: 49
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'BinaryExpression',
                  left: {
                    type: 'BinaryExpression',
                    left: {
                      type: 'BinaryExpression',
                      left: {
                        type: 'Identifier',
                        name: 'x',
                        start: 57,
                        end: 58,
                        loc: {
                          start: {
                            line: 1,
                            column: 57
                          },
                          end: {
                            line: 1,
                            column: 58
                          }
                        }
                      },
                      right: {
                        type: 'Identifier',
                        name: 'y',
                        start: 59,
                        end: 60,
                        loc: {
                          start: {
                            line: 1,
                            column: 59
                          },
                          end: {
                            line: 1,
                            column: 60
                          }
                        }
                      },
                      operator: '*',
                      start: 57,
                      end: 60,
                      loc: {
                        start: {
                          line: 1,
                          column: 57
                        },
                        end: {
                          line: 1,
                          column: 60
                        }
                      }
                    },
                    right: {
                      type: 'Identifier',
                      name: 'z',
                      start: 61,
                      end: 62,
                      loc: {
                        start: {
                          line: 1,
                          column: 61
                        },
                        end: {
                          line: 1,
                          column: 62
                        }
                      }
                    },
                    operator: '*',
                    start: 57,
                    end: 62,
                    loc: {
                      start: {
                        line: 1,
                        column: 57
                      },
                      end: {
                        line: 1,
                        column: 62
                      }
                    }
                  },
                  right: {
                    type: 'Identifier',
                    name: 'v',
                    start: 63,
                    end: 64,
                    loc: {
                      start: {
                        line: 1,
                        column: 63
                      },
                      end: {
                        line: 1,
                        column: 64
                      }
                    }
                  },
                  operator: '*',
                  start: 57,
                  end: 64,
                  loc: {
                    start: {
                      line: 1,
                      column: 57
                    },
                    end: {
                      line: 1,
                      column: 64
                    }
                  }
                },
                start: 50,
                end: 64,
                loc: {
                  start: {
                    line: 1,
                    column: 50
                  },
                  end: {
                    line: 1,
                    column: 64
                  }
                }
              }
            ],
            start: 35,
            end: 66,
            loc: {
              start: {
                line: 1,
                column: 35
              },
              end: {
                line: 1,
                column: 66
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f13',
            start: 15,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 66,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 66
            }
          }
        }
      ],
      start: 0,
      end: 66,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 66
        }
      }
    }
  ],
  [
    `async function f20({x}) { function x() { return 2 }; return x(); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 20,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 20
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'x',
                    start: 20,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 20
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 20,
                  end: 21,
                  loc: {
                    start: {
                      line: 1,
                      column: 20
                    },
                    end: {
                      line: 1,
                      column: 21
                    }
                  }
                }
              ],
              start: 19,
              end: 22,
              loc: {
                start: {
                  line: 1,
                  column: 19
                },
                end: {
                  line: 1,
                  column: 22
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ReturnStatement',
                      argument: {
                        type: 'Literal',
                        value: 2,
                        start: 48,
                        end: 49,
                        loc: {
                          start: {
                            line: 1,
                            column: 48
                          },
                          end: {
                            line: 1,
                            column: 49
                          }
                        }
                      },
                      start: 41,
                      end: 49,
                      loc: {
                        start: {
                          line: 1,
                          column: 41
                        },
                        end: {
                          line: 1,
                          column: 49
                        }
                      }
                    }
                  ],
                  start: 39,
                  end: 51,
                  loc: {
                    start: {
                      line: 1,
                      column: 39
                    },
                    end: {
                      line: 1,
                      column: 51
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'x',
                  start: 35,
                  end: 36,
                  loc: {
                    start: {
                      line: 1,
                      column: 35
                    },
                    end: {
                      line: 1,
                      column: 36
                    }
                  }
                },
                start: 26,
                end: 51,
                loc: {
                  start: {
                    line: 1,
                    column: 26
                  },
                  end: {
                    line: 1,
                    column: 51
                  }
                }
              },
              {
                type: 'EmptyStatement',
                start: 51,
                end: 52,
                loc: {
                  start: {
                    line: 1,
                    column: 51
                  },
                  end: {
                    line: 1,
                    column: 52
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'x',
                    start: 60,
                    end: 61,
                    loc: {
                      start: {
                        line: 1,
                        column: 60
                      },
                      end: {
                        line: 1,
                        column: 61
                      }
                    }
                  },
                  arguments: [],
                  start: 60,
                  end: 63,
                  loc: {
                    start: {
                      line: 1,
                      column: 60
                    },
                    end: {
                      line: 1,
                      column: 63
                    }
                  }
                },
                start: 53,
                end: 64,
                loc: {
                  start: {
                    line: 1,
                    column: 53
                  },
                  end: {
                    line: 1,
                    column: 64
                  }
                }
              }
            ],
            start: 24,
            end: 66,
            loc: {
              start: {
                line: 1,
                column: 24
              },
              end: {
                line: 1,
                column: 66
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f20',
            start: 15,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 66,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 66
            }
          }
        }
      ],
      start: 0,
      end: 66,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 66
        }
      }
    }
  ],
  [
    `var g10 = async ({x}, y) => { var y; return y };`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {
              type: 'VariableDeclarator',
              init: {
                type: 'ArrowFunctionExpression',
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'VariableDeclaration',
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          init: null,
                          id: {
                            type: 'Identifier',
                            name: 'y',
                            start: 34,
                            end: 35,
                            loc: {
                              start: {
                                line: 1,
                                column: 34
                              },
                              end: {
                                line: 1,
                                column: 35
                              }
                            }
                          },
                          start: 34,
                          end: 35,
                          loc: {
                            start: {
                              line: 1,
                              column: 34
                            },
                            end: {
                              line: 1,
                              column: 35
                            }
                          }
                        }
                      ],
                      start: 30,
                      end: 36,
                      loc: {
                        start: {
                          line: 1,
                          column: 30
                        },
                        end: {
                          line: 1,
                          column: 36
                        }
                      }
                    },
                    {
                      type: 'ReturnStatement',
                      argument: {
                        type: 'Identifier',
                        name: 'y',
                        start: 44,
                        end: 45,
                        loc: {
                          start: {
                            line: 1,
                            column: 44
                          },
                          end: {
                            line: 1,
                            column: 45
                          }
                        }
                      },
                      start: 37,
                      end: 45,
                      loc: {
                        start: {
                          line: 1,
                          column: 37
                        },
                        end: {
                          line: 1,
                          column: 45
                        }
                      }
                    }
                  ],
                  start: 28,
                  end: 47,
                  loc: {
                    start: {
                      line: 1,
                      column: 28
                    },
                    end: {
                      line: 1,
                      column: 47
                    }
                  }
                },
                params: [
                  {
                    type: 'ObjectPattern',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'x',
                          start: 18,
                          end: 19,
                          loc: {
                            start: {
                              line: 1,
                              column: 18
                            },
                            end: {
                              line: 1,
                              column: 19
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'x',
                          start: 18,
                          end: 19,
                          loc: {
                            start: {
                              line: 1,
                              column: 18
                            },
                            end: {
                              line: 1,
                              column: 19
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 18,
                        end: 19,
                        loc: {
                          start: {
                            line: 1,
                            column: 18
                          },
                          end: {
                            line: 1,
                            column: 19
                          }
                        }
                      }
                    ],
                    start: 17,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  },
                  {
                    type: 'Identifier',
                    name: 'y',
                    start: 22,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  }
                ],
                async: true,
                expression: false,
                start: 10,
                end: 47,
                loc: {
                  start: {
                    line: 1,
                    column: 10
                  },
                  end: {
                    line: 1,
                    column: 47
                  }
                }
              },
              id: {
                type: 'Identifier',
                name: 'g10',
                start: 4,
                end: 7,
                loc: {
                  start: {
                    line: 1,
                    column: 4
                  },
                  end: {
                    line: 1,
                    column: 7
                  }
                }
              },
              start: 4,
              end: 47,
              loc: {
                start: {
                  line: 1,
                  column: 4
                },
                end: {
                  line: 1,
                  column: 47
                }
              }
            }
          ],
          start: 0,
          end: 48,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 48
            }
          }
        }
      ],
      start: 0,
      end: 48,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 48
        }
      }
    }
  ],
  [
    `var g13 = async ({x}, y, [z], v) => { var x, y, z; return x*y*z*v };`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {
              type: 'VariableDeclarator',
              init: {
                type: 'ArrowFunctionExpression',
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'VariableDeclaration',
                      kind: 'var',
                      declarations: [
                        {
                          type: 'VariableDeclarator',
                          init: null,
                          id: {
                            type: 'Identifier',
                            name: 'x',
                            start: 42,
                            end: 43,
                            loc: {
                              start: {
                                line: 1,
                                column: 42
                              },
                              end: {
                                line: 1,
                                column: 43
                              }
                            }
                          },
                          start: 42,
                          end: 43,
                          loc: {
                            start: {
                              line: 1,
                              column: 42
                            },
                            end: {
                              line: 1,
                              column: 43
                            }
                          }
                        },
                        {
                          type: 'VariableDeclarator',
                          init: null,
                          id: {
                            type: 'Identifier',
                            name: 'y',
                            start: 45,
                            end: 46,
                            loc: {
                              start: {
                                line: 1,
                                column: 45
                              },
                              end: {
                                line: 1,
                                column: 46
                              }
                            }
                          },
                          start: 45,
                          end: 46,
                          loc: {
                            start: {
                              line: 1,
                              column: 45
                            },
                            end: {
                              line: 1,
                              column: 46
                            }
                          }
                        },
                        {
                          type: 'VariableDeclarator',
                          init: null,
                          id: {
                            type: 'Identifier',
                            name: 'z',
                            start: 48,
                            end: 49,
                            loc: {
                              start: {
                                line: 1,
                                column: 48
                              },
                              end: {
                                line: 1,
                                column: 49
                              }
                            }
                          },
                          start: 48,
                          end: 49,
                          loc: {
                            start: {
                              line: 1,
                              column: 48
                            },
                            end: {
                              line: 1,
                              column: 49
                            }
                          }
                        }
                      ],
                      start: 38,
                      end: 50,
                      loc: {
                        start: {
                          line: 1,
                          column: 38
                        },
                        end: {
                          line: 1,
                          column: 50
                        }
                      }
                    },
                    {
                      type: 'ReturnStatement',
                      argument: {
                        type: 'BinaryExpression',
                        left: {
                          type: 'BinaryExpression',
                          left: {
                            type: 'BinaryExpression',
                            left: {
                              type: 'Identifier',
                              name: 'x',
                              start: 58,
                              end: 59,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 58
                                },
                                end: {
                                  line: 1,
                                  column: 59
                                }
                              }
                            },
                            right: {
                              type: 'Identifier',
                              name: 'y',
                              start: 60,
                              end: 61,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 60
                                },
                                end: {
                                  line: 1,
                                  column: 61
                                }
                              }
                            },
                            operator: '*',
                            start: 58,
                            end: 61,
                            loc: {
                              start: {
                                line: 1,
                                column: 58
                              },
                              end: {
                                line: 1,
                                column: 61
                              }
                            }
                          },
                          right: {
                            type: 'Identifier',
                            name: 'z',
                            start: 62,
                            end: 63,
                            loc: {
                              start: {
                                line: 1,
                                column: 62
                              },
                              end: {
                                line: 1,
                                column: 63
                              }
                            }
                          },
                          operator: '*',
                          start: 58,
                          end: 63,
                          loc: {
                            start: {
                              line: 1,
                              column: 58
                            },
                            end: {
                              line: 1,
                              column: 63
                            }
                          }
                        },
                        right: {
                          type: 'Identifier',
                          name: 'v',
                          start: 64,
                          end: 65,
                          loc: {
                            start: {
                              line: 1,
                              column: 64
                            },
                            end: {
                              line: 1,
                              column: 65
                            }
                          }
                        },
                        operator: '*',
                        start: 58,
                        end: 65,
                        loc: {
                          start: {
                            line: 1,
                            column: 58
                          },
                          end: {
                            line: 1,
                            column: 65
                          }
                        }
                      },
                      start: 51,
                      end: 65,
                      loc: {
                        start: {
                          line: 1,
                          column: 51
                        },
                        end: {
                          line: 1,
                          column: 65
                        }
                      }
                    }
                  ],
                  start: 36,
                  end: 67,
                  loc: {
                    start: {
                      line: 1,
                      column: 36
                    },
                    end: {
                      line: 1,
                      column: 67
                    }
                  }
                },
                params: [
                  {
                    type: 'ObjectPattern',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'x',
                          start: 18,
                          end: 19,
                          loc: {
                            start: {
                              line: 1,
                              column: 18
                            },
                            end: {
                              line: 1,
                              column: 19
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'x',
                          start: 18,
                          end: 19,
                          loc: {
                            start: {
                              line: 1,
                              column: 18
                            },
                            end: {
                              line: 1,
                              column: 19
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 18,
                        end: 19,
                        loc: {
                          start: {
                            line: 1,
                            column: 18
                          },
                          end: {
                            line: 1,
                            column: 19
                          }
                        }
                      }
                    ],
                    start: 17,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  },
                  {
                    type: 'Identifier',
                    name: 'y',
                    start: 22,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  },
                  {
                    type: 'ArrayPattern',
                    elements: [
                      {
                        type: 'Identifier',
                        name: 'z',
                        start: 26,
                        end: 27,
                        loc: {
                          start: {
                            line: 1,
                            column: 26
                          },
                          end: {
                            line: 1,
                            column: 27
                          }
                        }
                      }
                    ],
                    start: 25,
                    end: 28,
                    loc: {
                      start: {
                        line: 1,
                        column: 25
                      },
                      end: {
                        line: 1,
                        column: 28
                      }
                    }
                  },
                  {
                    type: 'Identifier',
                    name: 'v',
                    start: 30,
                    end: 31,
                    loc: {
                      start: {
                        line: 1,
                        column: 30
                      },
                      end: {
                        line: 1,
                        column: 31
                      }
                    }
                  }
                ],
                async: true,
                expression: false,
                start: 10,
                end: 67,
                loc: {
                  start: {
                    line: 1,
                    column: 10
                  },
                  end: {
                    line: 1,
                    column: 67
                  }
                }
              },
              id: {
                type: 'Identifier',
                name: 'g13',
                start: 4,
                end: 7,
                loc: {
                  start: {
                    line: 1,
                    column: 4
                  },
                  end: {
                    line: 1,
                    column: 7
                  }
                }
              },
              start: 4,
              end: 67,
              loc: {
                start: {
                  line: 1,
                  column: 4
                },
                end: {
                  line: 1,
                  column: 67
                }
              }
            }
          ],
          start: 0,
          end: 68,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 68
            }
          }
        }
      ],
      start: 0,
      end: 68,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 68
        }
      }
    }
  ],
  [
    `async function f6(x = {a: 1, m() { return 2 }}) { return x.a + x.m(); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'x',
                start: 18,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              right: {
                type: 'ObjectExpression',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'a',
                      start: 23,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    },
                    value: {
                      type: 'Literal',
                      value: 1,
                      start: 26,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 23,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  },
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'm',
                      start: 29,
                      end: 30,
                      loc: {
                        start: {
                          line: 1,
                          column: 29
                        },
                        end: {
                          line: 1,
                          column: 30
                        }
                      }
                    },
                    value: {
                      type: 'FunctionExpression',
                      params: [],
                      body: {
                        type: 'BlockStatement',
                        body: [
                          {
                            type: 'ReturnStatement',
                            argument: {
                              type: 'Literal',
                              value: 2,
                              start: 42,
                              end: 43,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 42
                                },
                                end: {
                                  line: 1,
                                  column: 43
                                }
                              }
                            },
                            start: 35,
                            end: 43,
                            loc: {
                              start: {
                                line: 1,
                                column: 35
                              },
                              end: {
                                line: 1,
                                column: 43
                              }
                            }
                          }
                        ],
                        start: 33,
                        end: 45,
                        loc: {
                          start: {
                            line: 1,
                            column: 33
                          },
                          end: {
                            line: 1,
                            column: 45
                          }
                        }
                      },
                      async: false,
                      generator: false,
                      id: null,
                      start: 30,
                      end: 45,
                      loc: {
                        start: {
                          line: 1,
                          column: 30
                        },
                        end: {
                          line: 1,
                          column: 45
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: true,
                    shorthand: false,
                    start: 29,
                    end: 45,
                    loc: {
                      start: {
                        line: 1,
                        column: 29
                      },
                      end: {
                        line: 1,
                        column: 45
                      }
                    }
                  }
                ],
                start: 22,
                end: 46,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 46
                  }
                }
              },
              start: 18,
              end: 46,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 46
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'BinaryExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'Identifier',
                      name: 'x',
                      start: 57,
                      end: 58,
                      loc: {
                        start: {
                          line: 1,
                          column: 57
                        },
                        end: {
                          line: 1,
                          column: 58
                        }
                      }
                    },
                    computed: false,
                    property: {
                      type: 'Identifier',
                      name: 'a',
                      start: 59,
                      end: 60,
                      loc: {
                        start: {
                          line: 1,
                          column: 59
                        },
                        end: {
                          line: 1,
                          column: 60
                        }
                      }
                    },
                    start: 57,
                    end: 60,
                    loc: {
                      start: {
                        line: 1,
                        column: 57
                      },
                      end: {
                        line: 1,
                        column: 60
                      }
                    }
                  },
                  right: {
                    type: 'CallExpression',
                    callee: {
                      type: 'MemberExpression',
                      object: {
                        type: 'Identifier',
                        name: 'x',
                        start: 63,
                        end: 64,
                        loc: {
                          start: {
                            line: 1,
                            column: 63
                          },
                          end: {
                            line: 1,
                            column: 64
                          }
                        }
                      },
                      computed: false,
                      property: {
                        type: 'Identifier',
                        name: 'm',
                        start: 65,
                        end: 66,
                        loc: {
                          start: {
                            line: 1,
                            column: 65
                          },
                          end: {
                            line: 1,
                            column: 66
                          }
                        }
                      },
                      start: 63,
                      end: 66,
                      loc: {
                        start: {
                          line: 1,
                          column: 63
                        },
                        end: {
                          line: 1,
                          column: 66
                        }
                      }
                    },
                    arguments: [],
                    start: 63,
                    end: 68,
                    loc: {
                      start: {
                        line: 1,
                        column: 63
                      },
                      end: {
                        line: 1,
                        column: 68
                      }
                    }
                  },
                  operator: '+',
                  start: 57,
                  end: 68,
                  loc: {
                    start: {
                      line: 1,
                      column: 57
                    },
                    end: {
                      line: 1,
                      column: 68
                    }
                  }
                },
                start: 50,
                end: 69,
                loc: {
                  start: {
                    line: 1,
                    column: 50
                  },
                  end: {
                    line: 1,
                    column: 69
                  }
                }
              }
            ],
            start: 48,
            end: 71,
            loc: {
              start: {
                line: 1,
                column: 48
              },
              end: {
                line: 1,
                column: 71
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f6',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 71,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 71
            }
          }
        }
      ],
      start: 0,
      end: 71,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 71
        }
      }
    }
  ],
  [
    `var g6 = async (x = {a: 1, m() { return 2 }}) => { return x.a + x.m(); };`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {
              type: 'VariableDeclarator',
              init: {
                type: 'ArrowFunctionExpression',
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ReturnStatement',
                      argument: {
                        type: 'BinaryExpression',
                        left: {
                          type: 'MemberExpression',
                          object: {
                            type: 'Identifier',
                            name: 'x',
                            start: 58,
                            end: 59,
                            loc: {
                              start: {
                                line: 1,
                                column: 58
                              },
                              end: {
                                line: 1,
                                column: 59
                              }
                            }
                          },
                          computed: false,
                          property: {
                            type: 'Identifier',
                            name: 'a',
                            start: 60,
                            end: 61,
                            loc: {
                              start: {
                                line: 1,
                                column: 60
                              },
                              end: {
                                line: 1,
                                column: 61
                              }
                            }
                          },
                          start: 58,
                          end: 61,
                          loc: {
                            start: {
                              line: 1,
                              column: 58
                            },
                            end: {
                              line: 1,
                              column: 61
                            }
                          }
                        },
                        right: {
                          type: 'CallExpression',
                          callee: {
                            type: 'MemberExpression',
                            object: {
                              type: 'Identifier',
                              name: 'x',
                              start: 64,
                              end: 65,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 64
                                },
                                end: {
                                  line: 1,
                                  column: 65
                                }
                              }
                            },
                            computed: false,
                            property: {
                              type: 'Identifier',
                              name: 'm',
                              start: 66,
                              end: 67,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 66
                                },
                                end: {
                                  line: 1,
                                  column: 67
                                }
                              }
                            },
                            start: 64,
                            end: 67,
                            loc: {
                              start: {
                                line: 1,
                                column: 64
                              },
                              end: {
                                line: 1,
                                column: 67
                              }
                            }
                          },
                          arguments: [],
                          start: 64,
                          end: 69,
                          loc: {
                            start: {
                              line: 1,
                              column: 64
                            },
                            end: {
                              line: 1,
                              column: 69
                            }
                          }
                        },
                        operator: '+',
                        start: 58,
                        end: 69,
                        loc: {
                          start: {
                            line: 1,
                            column: 58
                          },
                          end: {
                            line: 1,
                            column: 69
                          }
                        }
                      },
                      start: 51,
                      end: 70,
                      loc: {
                        start: {
                          line: 1,
                          column: 51
                        },
                        end: {
                          line: 1,
                          column: 70
                        }
                      }
                    }
                  ],
                  start: 49,
                  end: 72,
                  loc: {
                    start: {
                      line: 1,
                      column: 49
                    },
                    end: {
                      line: 1,
                      column: 72
                    }
                  }
                },
                params: [
                  {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'x',
                      start: 16,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    right: {
                      type: 'ObjectExpression',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'a',
                            start: 21,
                            end: 22,
                            loc: {
                              start: {
                                line: 1,
                                column: 21
                              },
                              end: {
                                line: 1,
                                column: 22
                              }
                            }
                          },
                          value: {
                            type: 'Literal',
                            value: 1,
                            start: 24,
                            end: 25,
                            loc: {
                              start: {
                                line: 1,
                                column: 24
                              },
                              end: {
                                line: 1,
                                column: 25
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: false,
                          start: 21,
                          end: 25,
                          loc: {
                            start: {
                              line: 1,
                              column: 21
                            },
                            end: {
                              line: 1,
                              column: 25
                            }
                          }
                        },
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'm',
                            start: 27,
                            end: 28,
                            loc: {
                              start: {
                                line: 1,
                                column: 27
                              },
                              end: {
                                line: 1,
                                column: 28
                              }
                            }
                          },
                          value: {
                            type: 'FunctionExpression',
                            params: [],
                            body: {
                              type: 'BlockStatement',
                              body: [
                                {
                                  type: 'ReturnStatement',
                                  argument: {
                                    type: 'Literal',
                                    value: 2,
                                    start: 40,
                                    end: 41,
                                    loc: {
                                      start: {
                                        line: 1,
                                        column: 40
                                      },
                                      end: {
                                        line: 1,
                                        column: 41
                                      }
                                    }
                                  },
                                  start: 33,
                                  end: 41,
                                  loc: {
                                    start: {
                                      line: 1,
                                      column: 33
                                    },
                                    end: {
                                      line: 1,
                                      column: 41
                                    }
                                  }
                                }
                              ],
                              start: 31,
                              end: 43,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 31
                                },
                                end: {
                                  line: 1,
                                  column: 43
                                }
                              }
                            },
                            async: false,
                            generator: false,
                            id: null,
                            start: 28,
                            end: 43,
                            loc: {
                              start: {
                                line: 1,
                                column: 28
                              },
                              end: {
                                line: 1,
                                column: 43
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: true,
                          shorthand: false,
                          start: 27,
                          end: 43,
                          loc: {
                            start: {
                              line: 1,
                              column: 27
                            },
                            end: {
                              line: 1,
                              column: 43
                            }
                          }
                        }
                      ],
                      start: 20,
                      end: 44,
                      loc: {
                        start: {
                          line: 1,
                          column: 20
                        },
                        end: {
                          line: 1,
                          column: 44
                        }
                      }
                    },
                    start: 16,
                    end: 44,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 44
                      }
                    }
                  }
                ],
                async: true,
                expression: false,
                start: 9,
                end: 72,
                loc: {
                  start: {
                    line: 1,
                    column: 9
                  },
                  end: {
                    line: 1,
                    column: 72
                  }
                }
              },
              id: {
                type: 'Identifier',
                name: 'g6',
                start: 4,
                end: 6,
                loc: {
                  start: {
                    line: 1,
                    column: 4
                  },
                  end: {
                    line: 1,
                    column: 6
                  }
                }
              },
              start: 4,
              end: 72,
              loc: {
                start: {
                  line: 1,
                  column: 4
                },
                end: {
                  line: 1,
                  column: 72
                }
              }
            }
          ],
          start: 0,
          end: 73,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 73
            }
          }
        }
      ],
      start: 0,
      end: 73,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 73
        }
      }
    }
  ],
  [
    `async function f1(a = x, x) { return a }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'a',
                start: 18,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 22,
                end: 23,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 23
                  }
                }
              },
              start: 18,
              end: 23,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 23
                }
              }
            },
            {
              type: 'Identifier',
              name: 'x',
              start: 25,
              end: 26,
              loc: {
                start: {
                  line: 1,
                  column: 25
                },
                end: {
                  line: 1,
                  column: 26
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'Identifier',
                  name: 'a',
                  start: 37,
                  end: 38,
                  loc: {
                    start: {
                      line: 1,
                      column: 37
                    },
                    end: {
                      line: 1,
                      column: 38
                    }
                  }
                },
                start: 30,
                end: 38,
                loc: {
                  start: {
                    line: 1,
                    column: 30
                  },
                  end: {
                    line: 1,
                    column: 38
                  }
                }
              }
            ],
            start: 28,
            end: 40,
            loc: {
              start: {
                line: 1,
                column: 28
              },
              end: {
                line: 1,
                column: 40
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f1',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 40,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 40
            }
          }
        }
      ],
      start: 0,
      end: 40,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 40
        }
      }
    }
  ],
  [
    `async function f4(a = () => x, x) { return a() }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'a',
                start: 18,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              right: {
                type: 'ArrowFunctionExpression',
                body: {
                  type: 'Identifier',
                  name: 'x',
                  start: 28,
                  end: 29,
                  loc: {
                    start: {
                      line: 1,
                      column: 28
                    },
                    end: {
                      line: 1,
                      column: 29
                    }
                  }
                },
                params: [],
                async: false,
                expression: true,
                start: 22,
                end: 29,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 29
                  }
                }
              },
              start: 18,
              end: 29,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 29
                }
              }
            },
            {
              type: 'Identifier',
              name: 'x',
              start: 31,
              end: 32,
              loc: {
                start: {
                  line: 1,
                  column: 31
                },
                end: {
                  line: 1,
                  column: 32
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'a',
                    start: 43,
                    end: 44,
                    loc: {
                      start: {
                        line: 1,
                        column: 43
                      },
                      end: {
                        line: 1,
                        column: 44
                      }
                    }
                  },
                  arguments: [],
                  start: 43,
                  end: 46,
                  loc: {
                    start: {
                      line: 1,
                      column: 43
                    },
                    end: {
                      line: 1,
                      column: 46
                    }
                  }
                },
                start: 36,
                end: 46,
                loc: {
                  start: {
                    line: 1,
                    column: 36
                  },
                  end: {
                    line: 1,
                    column: 46
                  }
                }
              }
            ],
            start: 34,
            end: 48,
            loc: {
              start: {
                line: 1,
                column: 34
              },
              end: {
                line: 1,
                column: 48
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f4',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 48,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 48
            }
          }
        }
      ],
      start: 0,
      end: 48,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 48
        }
      }
    }
  ],
  [
    ` var g1 = async (x = function() { return a }, ...a) => { return x()[0] };`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {
              type: 'VariableDeclarator',
              init: {
                type: 'ArrowFunctionExpression',
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ReturnStatement',
                      argument: {
                        type: 'MemberExpression',
                        object: {
                          type: 'CallExpression',
                          callee: {
                            type: 'Identifier',
                            name: 'x',
                            start: 64,
                            end: 65,
                            loc: {
                              start: {
                                line: 1,
                                column: 64
                              },
                              end: {
                                line: 1,
                                column: 65
                              }
                            }
                          },
                          arguments: [],
                          start: 64,
                          end: 67,
                          loc: {
                            start: {
                              line: 1,
                              column: 64
                            },
                            end: {
                              line: 1,
                              column: 67
                            }
                          }
                        },
                        computed: true,
                        property: {
                          type: 'Literal',
                          value: 0,
                          start: 68,
                          end: 69,
                          loc: {
                            start: {
                              line: 1,
                              column: 68
                            },
                            end: {
                              line: 1,
                              column: 69
                            }
                          }
                        },
                        start: 64,
                        end: 70,
                        loc: {
                          start: {
                            line: 1,
                            column: 64
                          },
                          end: {
                            line: 1,
                            column: 70
                          }
                        }
                      },
                      start: 57,
                      end: 70,
                      loc: {
                        start: {
                          line: 1,
                          column: 57
                        },
                        end: {
                          line: 1,
                          column: 70
                        }
                      }
                    }
                  ],
                  start: 55,
                  end: 72,
                  loc: {
                    start: {
                      line: 1,
                      column: 55
                    },
                    end: {
                      line: 1,
                      column: 72
                    }
                  }
                },
                params: [
                  {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'x',
                      start: 17,
                      end: 18,
                      loc: {
                        start: {
                          line: 1,
                          column: 17
                        },
                        end: {
                          line: 1,
                          column: 18
                        }
                      }
                    },
                    right: {
                      type: 'FunctionExpression',
                      params: [],
                      body: {
                        type: 'BlockStatement',
                        body: [
                          {
                            type: 'ReturnStatement',
                            argument: {
                              type: 'Identifier',
                              name: 'a',
                              start: 41,
                              end: 42,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 41
                                },
                                end: {
                                  line: 1,
                                  column: 42
                                }
                              }
                            },
                            start: 34,
                            end: 42,
                            loc: {
                              start: {
                                line: 1,
                                column: 34
                              },
                              end: {
                                line: 1,
                                column: 42
                              }
                            }
                          }
                        ],
                        start: 32,
                        end: 44,
                        loc: {
                          start: {
                            line: 1,
                            column: 32
                          },
                          end: {
                            line: 1,
                            column: 44
                          }
                        }
                      },
                      async: false,
                      generator: false,
                      id: null,
                      start: 21,
                      end: 44,
                      loc: {
                        start: {
                          line: 1,
                          column: 21
                        },
                        end: {
                          line: 1,
                          column: 44
                        }
                      }
                    },
                    start: 17,
                    end: 44,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 44
                      }
                    }
                  },
                  {
                    type: 'RestElement',
                    argument: {
                      type: 'Identifier',
                      name: 'a',
                      start: 49,
                      end: 50,
                      loc: {
                        start: {
                          line: 1,
                          column: 49
                        },
                        end: {
                          line: 1,
                          column: 50
                        }
                      }
                    },
                    start: 46,
                    end: 50,
                    loc: {
                      start: {
                        line: 1,
                        column: 46
                      },
                      end: {
                        line: 1,
                        column: 50
                      }
                    }
                  }
                ],
                async: true,
                expression: false,
                start: 10,
                end: 72,
                loc: {
                  start: {
                    line: 1,
                    column: 10
                  },
                  end: {
                    line: 1,
                    column: 72
                  }
                }
              },
              id: {
                type: 'Identifier',
                name: 'g1',
                start: 5,
                end: 7,
                loc: {
                  start: {
                    line: 1,
                    column: 5
                  },
                  end: {
                    line: 1,
                    column: 7
                  }
                }
              },
              start: 5,
              end: 72,
              loc: {
                start: {
                  line: 1,
                  column: 5
                },
                end: {
                  line: 1,
                  column: 72
                }
              }
            }
          ],
          start: 1,
          end: 73,
          loc: {
            start: {
              line: 1,
              column: 1
            },
            end: {
              line: 1,
              column: 73
            }
          }
        }
      ],
      start: 0,
      end: 73,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 73
        }
      }
    }
  ],
  [
    `function* f21({x}) { { function x() { return 2 } } return x; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 15,
                    end: 16,
                    loc: {
                      start: {
                        line: 1,
                        column: 15
                      },
                      end: {
                        line: 1,
                        column: 16
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'x',
                    start: 15,
                    end: 16,
                    loc: {
                      start: {
                        line: 1,
                        column: 15
                      },
                      end: {
                        line: 1,
                        column: 16
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 15,
                  end: 16,
                  loc: {
                    start: {
                      line: 1,
                      column: 15
                    },
                    end: {
                      line: 1,
                      column: 16
                    }
                  }
                }
              ],
              start: 14,
              end: 17,
              loc: {
                start: {
                  line: 1,
                  column: 14
                },
                end: {
                  line: 1,
                  column: 17
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'FunctionDeclaration',
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      body: [
                        {
                          type: 'ReturnStatement',
                          argument: {
                            type: 'Literal',
                            value: 2,
                            start: 45,
                            end: 46,
                            loc: {
                              start: {
                                line: 1,
                                column: 45
                              },
                              end: {
                                line: 1,
                                column: 46
                              }
                            }
                          },
                          start: 38,
                          end: 46,
                          loc: {
                            start: {
                              line: 1,
                              column: 38
                            },
                            end: {
                              line: 1,
                              column: 46
                            }
                          }
                        }
                      ],
                      start: 36,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 36
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    },
                    async: false,
                    generator: false,
                    id: {
                      type: 'Identifier',
                      name: 'x',
                      start: 32,
                      end: 33,
                      loc: {
                        start: {
                          line: 1,
                          column: 32
                        },
                        end: {
                          line: 1,
                          column: 33
                        }
                      }
                    },
                    start: 23,
                    end: 48,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 48
                      }
                    }
                  }
                ],
                start: 21,
                end: 50,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 50
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'Identifier',
                  name: 'x',
                  start: 58,
                  end: 59,
                  loc: {
                    start: {
                      line: 1,
                      column: 58
                    },
                    end: {
                      line: 1,
                      column: 59
                    }
                  }
                },
                start: 51,
                end: 60,
                loc: {
                  start: {
                    line: 1,
                    column: 51
                  },
                  end: {
                    line: 1,
                    column: 60
                  }
                }
              }
            ],
            start: 19,
            end: 62,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 62
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f21',
            start: 10,
            end: 13,
            loc: {
              start: {
                line: 1,
                column: 10
              },
              end: {
                line: 1,
                column: 13
              }
            }
          },
          start: 0,
          end: 62,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 62
            }
          }
        }
      ],
      start: 0,
      end: 62,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 62
        }
      }
    }
  ],
  [
    `(function*(x, y = 1, z, v = 2, ...a) {}).length`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'MemberExpression',
            object: {
              type: 'FunctionExpression',
              params: [
                {
                  type: 'Identifier',
                  name: 'x',
                  start: 11,
                  end: 12,
                  loc: {
                    start: {
                      line: 1,
                      column: 11
                    },
                    end: {
                      line: 1,
                      column: 12
                    }
                  }
                },
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'y',
                    start: 14,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  right: {
                    type: 'Literal',
                    value: 1,
                    start: 18,
                    end: 19,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 19
                      }
                    }
                  },
                  start: 14,
                  end: 19,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 19
                    }
                  }
                },
                {
                  type: 'Identifier',
                  name: 'z',
                  start: 21,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                },
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'v',
                    start: 24,
                    end: 25,
                    loc: {
                      start: {
                        line: 1,
                        column: 24
                      },
                      end: {
                        line: 1,
                        column: 25
                      }
                    }
                  },
                  right: {
                    type: 'Literal',
                    value: 2,
                    start: 28,
                    end: 29,
                    loc: {
                      start: {
                        line: 1,
                        column: 28
                      },
                      end: {
                        line: 1,
                        column: 29
                      }
                    }
                  },
                  start: 24,
                  end: 29,
                  loc: {
                    start: {
                      line: 1,
                      column: 24
                    },
                    end: {
                      line: 1,
                      column: 29
                    }
                  }
                },
                {
                  type: 'RestElement',
                  argument: {
                    type: 'Identifier',
                    name: 'a',
                    start: 34,
                    end: 35,
                    loc: {
                      start: {
                        line: 1,
                        column: 34
                      },
                      end: {
                        line: 1,
                        column: 35
                      }
                    }
                  },
                  start: 31,
                  end: 35,
                  loc: {
                    start: {
                      line: 1,
                      column: 31
                    },
                    end: {
                      line: 1,
                      column: 35
                    }
                  }
                }
              ],
              body: {
                type: 'BlockStatement',
                body: [],
                start: 37,
                end: 39,
                loc: {
                  start: {
                    line: 1,
                    column: 37
                  },
                  end: {
                    line: 1,
                    column: 39
                  }
                }
              },
              async: false,
              generator: true,
              id: null,
              start: 1,
              end: 39,
              loc: {
                start: {
                  line: 1,
                  column: 1
                },
                end: {
                  line: 1,
                  column: 39
                }
              }
            },
            computed: false,
            property: {
              type: 'Identifier',
              name: 'length',
              start: 41,
              end: 47,
              loc: {
                start: {
                  line: 1,
                  column: 41
                },
                end: {
                  line: 1,
                  column: 47
                }
              }
            },
            start: 0,
            end: 47,
            loc: {
              start: {
                line: 1,
                column: 0
              },
              end: {
                line: 1,
                column: 47
              }
            }
          },
          start: 0,
          end: 47,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 47
            }
          }
        }
      ],
      start: 0,
      end: 47,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 47
        }
      }
    }
  ],
  [
    `"use strict"; async function foo() { function bar() { await = 1; } bar(); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'Literal',
            value: 'use strict',
            start: 0,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 0
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 13,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 13
            }
          }
        },
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ExpressionStatement',
                      expression: {
                        type: 'AssignmentExpression',
                        left: {
                          type: 'Identifier',
                          name: 'await',
                          start: 54,
                          end: 59,
                          loc: {
                            start: {
                              line: 1,
                              column: 54
                            },
                            end: {
                              line: 1,
                              column: 59
                            }
                          }
                        },
                        operator: '=',
                        right: {
                          type: 'Literal',
                          value: 1,
                          start: 62,
                          end: 63,
                          loc: {
                            start: {
                              line: 1,
                              column: 62
                            },
                            end: {
                              line: 1,
                              column: 63
                            }
                          }
                        },
                        start: 54,
                        end: 63,
                        loc: {
                          start: {
                            line: 1,
                            column: 54
                          },
                          end: {
                            line: 1,
                            column: 63
                          }
                        }
                      },
                      start: 54,
                      end: 64,
                      loc: {
                        start: {
                          line: 1,
                          column: 54
                        },
                        end: {
                          line: 1,
                          column: 64
                        }
                      }
                    }
                  ],
                  start: 52,
                  end: 66,
                  loc: {
                    start: {
                      line: 1,
                      column: 52
                    },
                    end: {
                      line: 1,
                      column: 66
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'bar',
                  start: 46,
                  end: 49,
                  loc: {
                    start: {
                      line: 1,
                      column: 46
                    },
                    end: {
                      line: 1,
                      column: 49
                    }
                  }
                },
                start: 37,
                end: 66,
                loc: {
                  start: {
                    line: 1,
                    column: 37
                  },
                  end: {
                    line: 1,
                    column: 66
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'bar',
                    start: 67,
                    end: 70,
                    loc: {
                      start: {
                        line: 1,
                        column: 67
                      },
                      end: {
                        line: 1,
                        column: 70
                      }
                    }
                  },
                  arguments: [],
                  start: 67,
                  end: 72,
                  loc: {
                    start: {
                      line: 1,
                      column: 67
                    },
                    end: {
                      line: 1,
                      column: 72
                    }
                  }
                },
                start: 67,
                end: 73,
                loc: {
                  start: {
                    line: 1,
                    column: 67
                  },
                  end: {
                    line: 1,
                    column: 73
                  }
                }
              }
            ],
            start: 35,
            end: 75,
            loc: {
              start: {
                line: 1,
                column: 35
              },
              end: {
                line: 1,
                column: 75
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'foo',
            start: 29,
            end: 32,
            loc: {
              start: {
                line: 1,
                column: 29
              },
              end: {
                line: 1,
                column: 32
              }
            }
          },
          start: 14,
          end: 75,
          loc: {
            start: {
              line: 1,
              column: 14
            },
            end: {
              line: 1,
              column: 75
            }
          }
        }
      ],
      start: 0,
      end: 75,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 75
        }
      }
    }
  ],
  [
    `async function await() { }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 23,
            end: 26,
            loc: {
              start: {
                line: 1,
                column: 23
              },
              end: {
                line: 1,
                column: 26
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'await',
            start: 15,
            end: 20,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 20
              }
            }
          },
          start: 0,
          end: 26,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 26
            }
          }
        }
      ],
      start: 0,
      end: 26,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 26
        }
      }
    }
  ],
  [
    `{ function foo(a, a) {  } function foo(a, a) {  } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'BlockStatement',
          body: [
            {
              type: 'FunctionDeclaration',
              params: [
                {
                  type: 'Identifier',
                  name: 'a',
                  start: 15,
                  end: 16,
                  loc: {
                    start: {
                      line: 1,
                      column: 15
                    },
                    end: {
                      line: 1,
                      column: 16
                    }
                  }
                },
                {
                  type: 'Identifier',
                  name: 'a',
                  start: 18,
                  end: 19,
                  loc: {
                    start: {
                      line: 1,
                      column: 18
                    },
                    end: {
                      line: 1,
                      column: 19
                    }
                  }
                }
              ],
              body: {
                type: 'BlockStatement',
                body: [],
                start: 21,
                end: 25,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 25
                  }
                }
              },
              async: false,
              generator: false,
              id: {
                type: 'Identifier',
                name: 'foo',
                start: 11,
                end: 14,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 14
                  }
                }
              },
              start: 2,
              end: 25,
              loc: {
                start: {
                  line: 1,
                  column: 2
                },
                end: {
                  line: 1,
                  column: 25
                }
              }
            },
            {
              type: 'FunctionDeclaration',
              params: [
                {
                  type: 'Identifier',
                  name: 'a',
                  start: 39,
                  end: 40,
                  loc: {
                    start: {
                      line: 1,
                      column: 39
                    },
                    end: {
                      line: 1,
                      column: 40
                    }
                  }
                },
                {
                  type: 'Identifier',
                  name: 'a',
                  start: 42,
                  end: 43,
                  loc: {
                    start: {
                      line: 1,
                      column: 42
                    },
                    end: {
                      line: 1,
                      column: 43
                    }
                  }
                }
              ],
              body: {
                type: 'BlockStatement',
                body: [],
                start: 45,
                end: 49,
                loc: {
                  start: {
                    line: 1,
                    column: 45
                  },
                  end: {
                    line: 1,
                    column: 49
                  }
                }
              },
              async: false,
              generator: false,
              id: {
                type: 'Identifier',
                name: 'foo',
                start: 35,
                end: 38,
                loc: {
                  start: {
                    line: 1,
                    column: 35
                  },
                  end: {
                    line: 1,
                    column: 38
                  }
                }
              },
              start: 26,
              end: 49,
              loc: {
                start: {
                  line: 1,
                  column: 26
                },
                end: {
                  line: 1,
                  column: 49
                }
              }
            }
          ],
          start: 0,
          end: 51,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 51
            }
          }
        }
      ],
      start: 0,
      end: 51,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 51
        }
      }
    }
  ],

  [
    `"use strict"; function a() {} function a() {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'Literal',
            value: 'use strict',
            start: 0,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 0
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 13,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 13
            }
          }
        },
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 27,
            end: 29,
            loc: {
              start: {
                line: 1,
                column: 27
              },
              end: {
                line: 1,
                column: 29
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'a',
            start: 23,
            end: 24,
            loc: {
              start: {
                line: 1,
                column: 23
              },
              end: {
                line: 1,
                column: 24
              }
            }
          },
          start: 14,
          end: 29,
          loc: {
            start: {
              line: 1,
              column: 14
            },
            end: {
              line: 1,
              column: 29
            }
          }
        },
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 43,
            end: 45,
            loc: {
              start: {
                line: 1,
                column: 43
              },
              end: {
                line: 1,
                column: 45
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'a',
            start: 39,
            end: 40,
            loc: {
              start: {
                line: 1,
                column: 39
              },
              end: {
                line: 1,
                column: 40
              }
            }
          },
          start: 30,
          end: 45,
          loc: {
            start: {
              line: 1,
              column: 30
            },
            end: {
              line: 1,
              column: 45
            }
          }
        }
      ],
      start: 0,
      end: 45,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 45
        }
      }
    }
  ],
  [
    `function x(){""[new.target]}`,
    Context.Empty,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'MemberExpression',
                  object: {
                    type: 'Literal',
                    value: ''
                  },
                  computed: true,
                  property: {
                    type: 'MetaProperty',
                    meta: {
                      type: 'Identifier',
                      name: 'new'
                    },
                    property: {
                      type: 'Identifier',
                      name: 'target'
                    }
                  }
                }
              }
            ]
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'x'
          }
        }
      ]
    }
  ],
  [
    `function x(){""[new.target]}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'MemberExpression',
                  object: {
                    type: 'Literal',
                    value: '',
                    start: 13,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 13
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  computed: true,
                  property: {
                    type: 'MetaProperty',
                    meta: {
                      type: 'Identifier',
                      name: 'new',
                      start: 16,
                      end: 20,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 20
                        }
                      }
                    },
                    property: {
                      type: 'Identifier',
                      name: 'target',
                      start: 20,
                      end: 26,
                      loc: {
                        start: {
                          line: 1,
                          column: 20
                        },
                        end: {
                          line: 1,
                          column: 26
                        }
                      }
                    },
                    start: 16,
                    end: 26,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 26
                      }
                    }
                  },
                  start: 13,
                  end: 27,
                  loc: {
                    start: {
                      line: 1,
                      column: 13
                    },
                    end: {
                      line: 1,
                      column: 27
                    }
                  }
                },
                start: 13,
                end: 27,
                loc: {
                  start: {
                    line: 1,
                    column: 13
                  },
                  end: {
                    line: 1,
                    column: 27
                  }
                }
              }
            ],
            start: 12,
            end: 28,
            loc: {
              start: {
                line: 1,
                column: 12
              },
              end: {
                line: 1,
                column: 28
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'x',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 28,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 28
            }
          }
        }
      ],
      start: 0,
      end: 28,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 28
        }
      }
    }
  ],
  [
    `async function f() { for await ("foo".x of y) {} }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ForOfStatement',
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 46,
                  end: 48,
                  loc: {
                    start: {
                      line: 1,
                      column: 46
                    },
                    end: {
                      line: 1,
                      column: 48
                    }
                  }
                },
                left: {
                  type: 'MemberExpression',
                  object: {
                    type: 'Literal',
                    value: 'foo',
                    start: 32,
                    end: 37,
                    loc: {
                      start: {
                        line: 1,
                        column: 32
                      },
                      end: {
                        line: 1,
                        column: 37
                      }
                    }
                  },
                  computed: false,
                  property: {
                    type: 'Identifier',
                    name: 'x',
                    start: 38,
                    end: 39,
                    loc: {
                      start: {
                        line: 1,
                        column: 38
                      },
                      end: {
                        line: 1,
                        column: 39
                      }
                    }
                  },
                  start: 32,
                  end: 39,
                  loc: {
                    start: {
                      line: 1,
                      column: 32
                    },
                    end: {
                      line: 1,
                      column: 39
                    }
                  }
                },
                right: {
                  type: 'Identifier',
                  name: 'y',
                  start: 43,
                  end: 44,
                  loc: {
                    start: {
                      line: 1,
                      column: 43
                    },
                    end: {
                      line: 1,
                      column: 44
                    }
                  }
                },
                await: true,
                start: 21,
                end: 48,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 48
                  }
                }
              }
            ],
            start: 19,
            end: 50,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 50
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 15,
            end: 16,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 16
              }
            }
          },
          start: 0,
          end: 50,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 50
            }
          }
        }
      ],
      start: 0,
      end: 50,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 50
        }
      }
    }
  ],
  [
    `async function f(){ for await (function(){ }[foo] of x); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ForOfStatement',
                body: {
                  type: 'EmptyStatement',
                  start: 55,
                  end: 56,
                  loc: {
                    start: {
                      line: 1,
                      column: 55
                    },
                    end: {
                      line: 1,
                      column: 56
                    }
                  }
                },
                left: {
                  type: 'MemberExpression',
                  object: {
                    type: 'FunctionExpression',
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      body: [],
                      start: 41,
                      end: 44,
                      loc: {
                        start: {
                          line: 1,
                          column: 41
                        },
                        end: {
                          line: 1,
                          column: 44
                        }
                      }
                    },
                    async: false,
                    generator: false,
                    id: null,
                    start: 31,
                    end: 44,
                    loc: {
                      start: {
                        line: 1,
                        column: 31
                      },
                      end: {
                        line: 1,
                        column: 44
                      }
                    }
                  },
                  computed: true,
                  property: {
                    type: 'Identifier',
                    name: 'foo',
                    start: 45,
                    end: 48,
                    loc: {
                      start: {
                        line: 1,
                        column: 45
                      },
                      end: {
                        line: 1,
                        column: 48
                      }
                    }
                  },
                  start: 31,
                  end: 49,
                  loc: {
                    start: {
                      line: 1,
                      column: 31
                    },
                    end: {
                      line: 1,
                      column: 49
                    }
                  }
                },
                right: {
                  type: 'Identifier',
                  name: 'x',
                  start: 53,
                  end: 54,
                  loc: {
                    start: {
                      line: 1,
                      column: 53
                    },
                    end: {
                      line: 1,
                      column: 54
                    }
                  }
                },
                await: true,
                start: 20,
                end: 56,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 56
                  }
                }
              }
            ],
            start: 18,
            end: 58,
            loc: {
              start: {
                line: 1,
                column: 18
              },
              end: {
                line: 1,
                column: 58
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 15,
            end: 16,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 16
              }
            }
          },
          start: 0,
          end: 58,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 58
            }
          }
        }
      ],
      start: 0,
      end: 58,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 58
        }
      }
    }
  ],
  [
    `function f(){ let: foo; }`,
    Context.Empty,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'LabeledStatement',
                label: {
                  type: 'Identifier',
                  name: 'let'
                },
                body: {
                  type: 'ExpressionStatement',
                  expression: {
                    type: 'Identifier',
                    name: 'foo'
                  }
                }
              }
            ]
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f'
          }
        }
      ]
    }
  ],
  [
    `async function as(){ let f = async function yield() {} }`,
    Context.Empty,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'let',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'FunctionExpression',
                      params: [],
                      body: {
                        type: 'BlockStatement',
                        body: []
                      },
                      async: true,
                      generator: false,
                      id: {
                        type: 'Identifier',
                        name: 'yield'
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'f'
                    }
                  }
                ]
              }
            ]
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'as'
          }
        }
      ]
    }
  ],
  [
    `function f([a, [b], c]) {}`,
    Context.Empty,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'Identifier',
                  name: 'a'
                },
                {
                  type: 'ArrayPattern',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'b'
                    }
                  ]
                },
                {
                  type: 'Identifier',
                  name: 'c'
                }
              ]
            }
          ],
          body: {
            type: 'BlockStatement',
            body: []
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f'
          }
        }
      ]
    }
  ],
  [
    `function fk({x: [a, {b: []}]}) {}`,
    Context.Empty,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x'
                  },
                  value: {
                    type: 'ArrayPattern',
                    elements: [
                      {
                        type: 'Identifier',
                        name: 'a'
                      },
                      {
                        type: 'ObjectPattern',
                        properties: [
                          {
                            type: 'Property',
                            key: {
                              type: 'Identifier',
                              name: 'b'
                            },
                            value: {
                              type: 'ArrayPattern',
                              elements: []
                            },
                            kind: 'init',
                            computed: false,
                            method: false,
                            shorthand: false
                          }
                        ]
                      }
                    ]
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false
                }
              ]
            }
          ],
          body: {
            type: 'BlockStatement',
            body: []
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fk'
          }
        }
      ]
    }
  ],
  [
    `function f(){ let: foo; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'LabeledStatement',
                label: {
                  type: 'Identifier',
                  name: 'let',
                  start: 14,
                  end: 17,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 17
                    }
                  }
                },
                body: {
                  type: 'ExpressionStatement',
                  expression: {
                    type: 'Identifier',
                    name: 'foo',
                    start: 19,
                    end: 22,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 22
                      }
                    }
                  },
                  start: 19,
                  end: 23,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 23
                    }
                  }
                },
                start: 14,
                end: 23,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 23
                  }
                }
              }
            ],
            start: 12,
            end: 25,
            loc: {
              start: {
                line: 1,
                column: 12
              },
              end: {
                line: 1,
                column: 25
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 25,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 25
            }
          }
        }
      ],
      start: 0,
      end: 25,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 25
        }
      }
    }
  ],

  [
    `function f(x) {var x}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'x',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'x',
                      start: 19,
                      end: 20,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 20
                        }
                      }
                    },
                    start: 19,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  }
                ],
                start: 15,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              }
            ],
            start: 14,
            end: 21,
            loc: {
              start: {
                line: 1,
                column: 14
              },
              end: {
                line: 1,
                column: 21
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 21,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 21
            }
          }
        }
      ],
      start: 0,
      end: 21,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 21
        }
      }
    }
  ],
  [
    `function f() {var f}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'f',
                      start: 18,
                      end: 19,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 19
                        }
                      }
                    },
                    start: 18,
                    end: 19,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 19
                      }
                    }
                  }
                ],
                start: 14,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              }
            ],
            start: 13,
            end: 20,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 20
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 20,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 20
            }
          }
        }
      ],
      start: 0,
      end: 20,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 20
        }
      }
    }
  ],

  [
    `function f() {{var f}}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: null,
                        id: {
                          type: 'Identifier',
                          name: 'f',
                          start: 19,
                          end: 20,
                          loc: {
                            start: {
                              line: 1,
                              column: 19
                            },
                            end: {
                              line: 1,
                              column: 20
                            }
                          }
                        },
                        start: 19,
                        end: 20,
                        loc: {
                          start: {
                            line: 1,
                            column: 19
                          },
                          end: {
                            line: 1,
                            column: 20
                          }
                        }
                      }
                    ],
                    start: 15,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 15
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  }
                ],
                start: 14,
                end: 21,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 21
                  }
                }
              }
            ],
            start: 13,
            end: 22,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 22
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 22,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 22
            }
          }
        }
      ],
      start: 0,
      end: 22,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 22
        }
      }
    }
  ],
  [
    `function f(){ "use strict"; foo; } with (x) y;`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'Literal',
                  value: 'use strict',
                  start: 14,
                  end: 26,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 26
                    }
                  }
                },
                start: 14,
                end: 27,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 27
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'Identifier',
                  name: 'foo',
                  start: 28,
                  end: 31,
                  loc: {
                    start: {
                      line: 1,
                      column: 28
                    },
                    end: {
                      line: 1,
                      column: 31
                    }
                  }
                },
                start: 28,
                end: 32,
                loc: {
                  start: {
                    line: 1,
                    column: 28
                  },
                  end: {
                    line: 1,
                    column: 32
                  }
                }
              }
            ],
            start: 12,
            end: 34,
            loc: {
              start: {
                line: 1,
                column: 12
              },
              end: {
                line: 1,
                column: 34
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 34,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 34
            }
          }
        },
        {
          type: 'WithStatement',
          object: {
            type: 'Identifier',
            name: 'x',
            start: 41,
            end: 42,
            loc: {
              start: {
                line: 1,
                column: 41
              },
              end: {
                line: 1,
                column: 42
              }
            }
          },
          body: {
            type: 'ExpressionStatement',
            expression: {
              type: 'Identifier',
              name: 'y',
              start: 44,
              end: 45,
              loc: {
                start: {
                  line: 1,
                  column: 44
                },
                end: {
                  line: 1,
                  column: 45
                }
              }
            },
            start: 44,
            end: 46,
            loc: {
              start: {
                line: 1,
                column: 44
              },
              end: {
                line: 1,
                column: 46
              }
            }
          },
          start: 35,
          end: 46,
          loc: {
            start: {
              line: 1,
              column: 35
            },
            end: {
              line: 1,
              column: 46
            }
          }
        }
      ],
      start: 0,
      end: 46,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 46
        }
      }
    }
  ],
  [
    `async function as(){ let f = async function f(yield) {} }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'let',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'FunctionExpression',
                      params: [
                        {
                          type: 'Identifier',
                          name: 'yield',
                          start: 46,
                          end: 51,
                          loc: {
                            start: {
                              line: 1,
                              column: 46
                            },
                            end: {
                              line: 1,
                              column: 51
                            }
                          }
                        }
                      ],
                      body: {
                        type: 'BlockStatement',
                        body: [],
                        start: 53,
                        end: 55,
                        loc: {
                          start: {
                            line: 1,
                            column: 53
                          },
                          end: {
                            line: 1,
                            column: 55
                          }
                        }
                      },
                      async: true,
                      generator: false,
                      id: {
                        type: 'Identifier',
                        name: 'f',
                        start: 44,
                        end: 45,
                        loc: {
                          start: {
                            line: 1,
                            column: 44
                          },
                          end: {
                            line: 1,
                            column: 45
                          }
                        }
                      },
                      start: 29,
                      end: 55,
                      loc: {
                        start: {
                          line: 1,
                          column: 29
                        },
                        end: {
                          line: 1,
                          column: 55
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'f',
                      start: 25,
                      end: 26,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 26
                        }
                      }
                    },
                    start: 25,
                    end: 55,
                    loc: {
                      start: {
                        line: 1,
                        column: 25
                      },
                      end: {
                        line: 1,
                        column: 55
                      }
                    }
                  }
                ],
                start: 21,
                end: 55,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 55
                  }
                }
              }
            ],
            start: 19,
            end: 57,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 57
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'as',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 57,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 57
            }
          }
        }
      ],
      start: 0,
      end: 57,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 57
        }
      }
    }
  ],
  [
    `function *f() {
      let
      interface
    }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'let',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'interface',
                      start: 32,
                      end: 41,
                      loc: {
                        start: {
                          line: 3,
                          column: 6
                        },
                        end: {
                          line: 3,
                          column: 15
                        }
                      }
                    },
                    start: 32,
                    end: 41,
                    loc: {
                      start: {
                        line: 3,
                        column: 6
                      },
                      end: {
                        line: 3,
                        column: 15
                      }
                    }
                  }
                ],
                start: 22,
                end: 41,
                loc: {
                  start: {
                    line: 2,
                    column: 6
                  },
                  end: {
                    line: 3,
                    column: 15
                  }
                }
              }
            ],
            start: 14,
            end: 47,
            loc: {
              start: {
                line: 1,
                column: 14
              },
              end: {
                line: 4,
                column: 5
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 10,
            end: 11,
            loc: {
              start: {
                line: 1,
                column: 10
              },
              end: {
                line: 1,
                column: 11
              }
            }
          },
          start: 0,
          end: 47,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 4,
              column: 5
            }
          }
        }
      ],
      start: 0,
      end: 47,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 4,
          column: 5
        }
      }
    }
  ],
  [
    `function f() {   class x { foo(x=new (await)()){} }   }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ClassDeclaration',
                id: {
                  type: 'Identifier',
                  name: 'x',
                  start: 23,
                  end: 24,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 24
                    }
                  }
                },
                superClass: null,
                body: {
                  type: 'ClassBody',
                  body: [
                    {
                      type: 'MethodDefinition',
                      kind: 'method',
                      static: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        name: 'foo',
                        start: 27,
                        end: 30,
                        loc: {
                          start: {
                            line: 1,
                            column: 27
                          },
                          end: {
                            line: 1,
                            column: 30
                          }
                        }
                      },
                      value: {
                        type: 'FunctionExpression',
                        params: [
                          {
                            type: 'AssignmentPattern',
                            left: {
                              type: 'Identifier',
                              name: 'x',
                              start: 31,
                              end: 32,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 31
                                },
                                end: {
                                  line: 1,
                                  column: 32
                                }
                              }
                            },
                            right: {
                              type: 'NewExpression',
                              callee: {
                                type: 'Identifier',
                                name: 'await',
                                start: 38,
                                end: 43,
                                loc: {
                                  start: {
                                    line: 1,
                                    column: 38
                                  },
                                  end: {
                                    line: 1,
                                    column: 43
                                  }
                                }
                              },
                              arguments: [],
                              start: 33,
                              end: 46,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 33
                                },
                                end: {
                                  line: 1,
                                  column: 46
                                }
                              }
                            },
                            start: 31,
                            end: 46,
                            loc: {
                              start: {
                                line: 1,
                                column: 31
                              },
                              end: {
                                line: 1,
                                column: 46
                              }
                            }
                          }
                        ],
                        body: {
                          type: 'BlockStatement',
                          body: [],
                          start: 47,
                          end: 49,
                          loc: {
                            start: {
                              line: 1,
                              column: 47
                            },
                            end: {
                              line: 1,
                              column: 49
                            }
                          }
                        },
                        async: false,
                        generator: false,
                        id: null,
                        start: 30,
                        end: 49,
                        loc: {
                          start: {
                            line: 1,
                            column: 30
                          },
                          end: {
                            line: 1,
                            column: 49
                          }
                        }
                      },
                      start: 27,
                      end: 49,
                      loc: {
                        start: {
                          line: 1,
                          column: 27
                        },
                        end: {
                          line: 1,
                          column: 49
                        }
                      }
                    }
                  ],
                  start: 25,
                  end: 51,
                  loc: {
                    start: {
                      line: 1,
                      column: 25
                    },
                    end: {
                      line: 1,
                      column: 51
                    }
                  }
                },
                start: 17,
                end: 51,
                loc: {
                  start: {
                    line: 1,
                    column: 17
                  },
                  end: {
                    line: 1,
                    column: 51
                  }
                }
              }
            ],
            start: 13,
            end: 55,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 55
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 55,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 55
            }
          }
        }
      ],
      start: 0,
      end: 55,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 55
        }
      }
    }
  ],
  [
    `function f() { var await; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'await',
                      start: 19,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    },
                    start: 19,
                    end: 24,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 24
                      }
                    }
                  }
                ],
                start: 15,
                end: 25,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 25
                  }
                }
              }
            ],
            start: 13,
            end: 27,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 27
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 27,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 27
            }
          }
        }
      ],
      start: 0,
      end: 27,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      }
    }
  ],
  [
    `function f() { function* await() { } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 33,
                  end: 36,
                  loc: {
                    start: {
                      line: 1,
                      column: 33
                    },
                    end: {
                      line: 1,
                      column: 36
                    }
                  }
                },
                async: false,
                generator: true,
                id: {
                  type: 'Identifier',
                  name: 'await',
                  start: 25,
                  end: 30,
                  loc: {
                    start: {
                      line: 1,
                      column: 25
                    },
                    end: {
                      line: 1,
                      column: 30
                    }
                  }
                },
                start: 15,
                end: 36,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 36
                  }
                }
              }
            ],
            start: 13,
            end: 38,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 38
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 38,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 38
            }
          }
        }
      ],
      start: 0,
      end: 38,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 38
        }
      }
    }
  ],
  [
    `function f() { var fe = function await() { } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'FunctionExpression',
                      params: [],
                      body: {
                        type: 'BlockStatement',
                        body: [],
                        start: 41,
                        end: 44,
                        loc: {
                          start: {
                            line: 1,
                            column: 41
                          },
                          end: {
                            line: 1,
                            column: 44
                          }
                        }
                      },
                      async: false,
                      generator: false,
                      id: {
                        type: 'Identifier',
                        name: 'await',
                        start: 33,
                        end: 38,
                        loc: {
                          start: {
                            line: 1,
                            column: 33
                          },
                          end: {
                            line: 1,
                            column: 38
                          }
                        }
                      },
                      start: 24,
                      end: 44,
                      loc: {
                        start: {
                          line: 1,
                          column: 24
                        },
                        end: {
                          line: 1,
                          column: 44
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'fe',
                      start: 19,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    },
                    start: 19,
                    end: 44,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 44
                      }
                    }
                  }
                ],
                start: 15,
                end: 44,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 44
                  }
                }
              }
            ],
            start: 13,
            end: 46,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 46
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 46,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 46
            }
          }
        }
      ],
      start: 0,
      end: 46,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 46
        }
      }
    }
  ],
  [
    `function f() { var o = { get await() { } } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'ObjectExpression',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'await',
                            start: 29,
                            end: 34,
                            loc: {
                              start: {
                                line: 1,
                                column: 29
                              },
                              end: {
                                line: 1,
                                column: 34
                              }
                            }
                          },
                          value: {
                            type: 'FunctionExpression',
                            params: [],
                            body: {
                              type: 'BlockStatement',
                              body: [],
                              start: 37,
                              end: 40,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 37
                                },
                                end: {
                                  line: 1,
                                  column: 40
                                }
                              }
                            },
                            async: false,
                            generator: false,
                            id: null,
                            start: 34,
                            end: 40,
                            loc: {
                              start: {
                                line: 1,
                                column: 34
                              },
                              end: {
                                line: 1,
                                column: 40
                              }
                            }
                          },
                          kind: 'get',
                          computed: false,
                          method: false,
                          shorthand: false,
                          start: 25,
                          end: 40,
                          loc: {
                            start: {
                              line: 1,
                              column: 25
                            },
                            end: {
                              line: 1,
                              column: 40
                            }
                          }
                        }
                      ],
                      start: 23,
                      end: 42,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 42
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'o',
                      start: 19,
                      end: 20,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 20
                        }
                      }
                    },
                    start: 19,
                    end: 42,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 42
                      }
                    }
                  }
                ],
                start: 15,
                end: 42,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 42
                  }
                }
              }
            ],
            start: 13,
            end: 44,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 44
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 44,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 44
            }
          }
        }
      ],
      start: 0,
      end: 44,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 44
        }
      }
    }
  ],
  [
    `function f() { var o = { await() { } } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'ObjectExpression',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'await',
                            start: 25,
                            end: 30,
                            loc: {
                              start: {
                                line: 1,
                                column: 25
                              },
                              end: {
                                line: 1,
                                column: 30
                              }
                            }
                          },
                          value: {
                            type: 'FunctionExpression',
                            params: [],
                            body: {
                              type: 'BlockStatement',
                              body: [],
                              start: 33,
                              end: 36,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 33
                                },
                                end: {
                                  line: 1,
                                  column: 36
                                }
                              }
                            },
                            async: false,
                            generator: false,
                            id: null,
                            start: 30,
                            end: 36,
                            loc: {
                              start: {
                                line: 1,
                                column: 30
                              },
                              end: {
                                line: 1,
                                column: 36
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: true,
                          shorthand: false,
                          start: 25,
                          end: 36,
                          loc: {
                            start: {
                              line: 1,
                              column: 25
                            },
                            end: {
                              line: 1,
                              column: 36
                            }
                          }
                        }
                      ],
                      start: 23,
                      end: 38,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 38
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'o',
                      start: 19,
                      end: 20,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 20
                        }
                      }
                    },
                    start: 19,
                    end: 38,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 38
                      }
                    }
                  }
                ],
                start: 15,
                end: 38,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 38
                  }
                }
              }
            ],
            start: 13,
            end: 40,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 40
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 40,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 40
            }
          }
        }
      ],
      start: 0,
      end: 40,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 40
        }
      }
    }
  ],
  [
    `function f() { var o = { *await() { } } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'ObjectExpression',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'await',
                            start: 26,
                            end: 31,
                            loc: {
                              start: {
                                line: 1,
                                column: 26
                              },
                              end: {
                                line: 1,
                                column: 31
                              }
                            }
                          },
                          value: {
                            type: 'FunctionExpression',
                            params: [],
                            body: {
                              type: 'BlockStatement',
                              body: [],
                              start: 34,
                              end: 37,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 34
                                },
                                end: {
                                  line: 1,
                                  column: 37
                                }
                              }
                            },
                            async: false,
                            generator: true,
                            id: null,
                            start: 31,
                            end: 37,
                            loc: {
                              start: {
                                line: 1,
                                column: 31
                              },
                              end: {
                                line: 1,
                                column: 37
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: true,
                          shorthand: false,
                          start: 25,
                          end: 37,
                          loc: {
                            start: {
                              line: 1,
                              column: 25
                            },
                            end: {
                              line: 1,
                              column: 37
                            }
                          }
                        }
                      ],
                      start: 23,
                      end: 39,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 39
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'o',
                      start: 19,
                      end: 20,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 20
                        }
                      }
                    },
                    start: 19,
                    end: 39,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 39
                      }
                    }
                  }
                ],
                start: 15,
                end: 39,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 39
                  }
                }
              }
            ],
            start: 13,
            end: 41,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 41
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 41,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 41
            }
          }
        }
      ],
      start: 0,
      end: 41,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 41
        }
      }
    }
  ],
  [
    `function f() { var await = 10; var o = { await }; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'Literal',
                      value: 10,
                      start: 27,
                      end: 29,
                      loc: {
                        start: {
                          line: 1,
                          column: 27
                        },
                        end: {
                          line: 1,
                          column: 29
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'await',
                      start: 19,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    },
                    start: 19,
                    end: 29,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 29
                      }
                    }
                  }
                ],
                start: 15,
                end: 30,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 30
                  }
                }
              },
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'ObjectExpression',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'await',
                            start: 41,
                            end: 46,
                            loc: {
                              start: {
                                line: 1,
                                column: 41
                              },
                              end: {
                                line: 1,
                                column: 46
                              }
                            }
                          },
                          value: {
                            type: 'Identifier',
                            name: 'await',
                            start: 41,
                            end: 46,
                            loc: {
                              start: {
                                line: 1,
                                column: 41
                              },
                              end: {
                                line: 1,
                                column: 46
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: true,
                          start: 41,
                          end: 46,
                          loc: {
                            start: {
                              line: 1,
                              column: 41
                            },
                            end: {
                              line: 1,
                              column: 46
                            }
                          }
                        }
                      ],
                      start: 39,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 39
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'o',
                      start: 35,
                      end: 36,
                      loc: {
                        start: {
                          line: 1,
                          column: 35
                        },
                        end: {
                          line: 1,
                          column: 36
                        }
                      }
                    },
                    start: 35,
                    end: 48,
                    loc: {
                      start: {
                        line: 1,
                        column: 35
                      },
                      end: {
                        line: 1,
                        column: 48
                      }
                    }
                  }
                ],
                start: 31,
                end: 49,
                loc: {
                  start: {
                    line: 1,
                    column: 31
                  },
                  end: {
                    line: 1,
                    column: 49
                  }
                }
              }
            ],
            start: 13,
            end: 51,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 51
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 51,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 51
            }
          }
        }
      ],
      start: 0,
      end: 51,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 51
        }
      }
    }
  ],
  [
    `function f() { class C { *await() { } } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ClassDeclaration',
                id: {
                  type: 'Identifier',
                  name: 'C',
                  start: 21,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                },
                superClass: null,
                body: {
                  type: 'ClassBody',
                  body: [
                    {
                      type: 'MethodDefinition',
                      kind: 'method',
                      static: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        name: 'await',
                        start: 26,
                        end: 31,
                        loc: {
                          start: {
                            line: 1,
                            column: 26
                          },
                          end: {
                            line: 1,
                            column: 31
                          }
                        }
                      },
                      value: {
                        type: 'FunctionExpression',
                        params: [],
                        body: {
                          type: 'BlockStatement',
                          body: [],
                          start: 34,
                          end: 37,
                          loc: {
                            start: {
                              line: 1,
                              column: 34
                            },
                            end: {
                              line: 1,
                              column: 37
                            }
                          }
                        },
                        async: false,
                        generator: true,
                        id: null,
                        start: 31,
                        end: 37,
                        loc: {
                          start: {
                            line: 1,
                            column: 31
                          },
                          end: {
                            line: 1,
                            column: 37
                          }
                        }
                      },
                      start: 25,
                      end: 37,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 37
                        }
                      }
                    }
                  ],
                  start: 23,
                  end: 39,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 39
                    }
                  }
                },
                start: 15,
                end: 39,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 39
                  }
                }
              }
            ],
            start: 13,
            end: 41,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 41
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 41,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 41
            }
          }
        }
      ],
      start: 0,
      end: 41,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 41
        }
      }
    }
  ],
  [
    `async function af(a, b, a) { }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'a',
              start: 18,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            },
            {
              type: 'Identifier',
              name: 'b',
              start: 21,
              end: 22,
              loc: {
                start: {
                  line: 1,
                  column: 21
                },
                end: {
                  line: 1,
                  column: 22
                }
              }
            },
            {
              type: 'Identifier',
              name: 'a',
              start: 24,
              end: 25,
              loc: {
                start: {
                  line: 1,
                  column: 24
                },
                end: {
                  line: 1,
                  column: 25
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 27,
            end: 30,
            loc: {
              start: {
                line: 1,
                column: 27
              },
              end: {
                line: 1,
                column: 30
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'af',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 30,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 30
            }
          }
        }
      ],
      start: 0,
      end: 30,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 30
        }
      }
    }
  ],
  [
    `function f() {} var f;`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 13,
            end: 15,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 15
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 15,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 15
            }
          }
        },
        {
          type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {
              type: 'VariableDeclarator',
              init: null,
              id: {
                type: 'Identifier',
                name: 'f',
                start: 20,
                end: 21,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 21
                  }
                }
              },
              start: 20,
              end: 21,
              loc: {
                start: {
                  line: 1,
                  column: 20
                },
                end: {
                  line: 1,
                  column: 21
                }
              }
            }
          ],
          start: 16,
          end: 22,
          loc: {
            start: {
              line: 1,
              column: 16
            },
            end: {
              line: 1,
              column: 22
            }
          }
        }
      ],
      start: 0,
      end: 22,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 22
        }
      }
    }
  ],
  [
    `var f; function f() {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {
              type: 'VariableDeclarator',
              init: null,
              id: {
                type: 'Identifier',
                name: 'f',
                start: 4,
                end: 5,
                loc: {
                  start: {
                    line: 1,
                    column: 4
                  },
                  end: {
                    line: 1,
                    column: 5
                  }
                }
              },
              start: 4,
              end: 5,
              loc: {
                start: {
                  line: 1,
                  column: 4
                },
                end: {
                  line: 1,
                  column: 5
                }
              }
            }
          ],
          start: 0,
          end: 6,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 6
            }
          }
        },
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 20,
            end: 22,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 22
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 16,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 7,
          end: 22,
          loc: {
            start: {
              line: 1,
              column: 7
            },
            end: {
              line: 1,
              column: 22
            }
          }
        }
      ],
      start: 0,
      end: 22,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 22
        }
      }
    }
  ],
  [
    `function f( [a=[...b], ...c]){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'a',
                    start: 13,
                    end: 14,
                    loc: {
                      start: {
                        line: 1,
                        column: 13
                      },
                      end: {
                        line: 1,
                        column: 14
                      }
                    }
                  },
                  right: {
                    type: 'ArrayExpression',
                    elements: [
                      {
                        type: 'SpreadElement',
                        argument: {
                          type: 'Identifier',
                          name: 'b',
                          start: 19,
                          end: 20,
                          loc: {
                            start: {
                              line: 1,
                              column: 19
                            },
                            end: {
                              line: 1,
                              column: 20
                            }
                          }
                        },
                        start: 16,
                        end: 20,
                        loc: {
                          start: {
                            line: 1,
                            column: 16
                          },
                          end: {
                            line: 1,
                            column: 20
                          }
                        }
                      }
                    ],
                    start: 15,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 15
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  start: 13,
                  end: 21,
                  loc: {
                    start: {
                      line: 1,
                      column: 13
                    },
                    end: {
                      line: 1,
                      column: 21
                    }
                  }
                },
                {
                  type: 'RestElement',
                  argument: {
                    type: 'Identifier',
                    name: 'c',
                    start: 26,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 26
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  },
                  start: 23,
                  end: 27,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 27
                    }
                  }
                }
              ],
              start: 12,
              end: 28,
              loc: {
                start: {
                  line: 1,
                  column: 12
                },
                end: {
                  line: 1,
                  column: 28
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 29,
            end: 31,
            loc: {
              start: {
                line: 1,
                column: 29
              },
              end: {
                line: 1,
                column: 31
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 31,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 31
            }
          }
        }
      ],
      start: 0,
      end: 31,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 31
        }
      }
    }
  ],
  [
    `function f( [a=[...b], ...c] = obj){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'a',
                      start: 13,
                      end: 14,
                      loc: {
                        start: {
                          line: 1,
                          column: 13
                        },
                        end: {
                          line: 1,
                          column: 14
                        }
                      }
                    },
                    right: {
                      type: 'ArrayExpression',
                      elements: [
                        {
                          type: 'SpreadElement',
                          argument: {
                            type: 'Identifier',
                            name: 'b',
                            start: 19,
                            end: 20,
                            loc: {
                              start: {
                                line: 1,
                                column: 19
                              },
                              end: {
                                line: 1,
                                column: 20
                              }
                            }
                          },
                          start: 16,
                          end: 20,
                          loc: {
                            start: {
                              line: 1,
                              column: 16
                            },
                            end: {
                              line: 1,
                              column: 20
                            }
                          }
                        }
                      ],
                      start: 15,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 15
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    },
                    start: 13,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 13
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  {
                    type: 'RestElement',
                    argument: {
                      type: 'Identifier',
                      name: 'c',
                      start: 26,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    start: 23,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  }
                ],
                start: 12,
                end: 28,
                loc: {
                  start: {
                    line: 1,
                    column: 12
                  },
                  end: {
                    line: 1,
                    column: 28
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'obj',
                start: 31,
                end: 34,
                loc: {
                  start: {
                    line: 1,
                    column: 31
                  },
                  end: {
                    line: 1,
                    column: 34
                  }
                }
              },
              start: 12,
              end: 34,
              loc: {
                start: {
                  line: 1,
                  column: 12
                },
                end: {
                  line: 1,
                  column: 34
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 35,
            end: 37,
            loc: {
              start: {
                line: 1,
                column: 35
              },
              end: {
                line: 1,
                column: 37
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 37,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 37
            }
          }
        }
      ],
      start: 0,
      end: 37,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 37
        }
      }
    }
  ],
  [
    `function *f(){ return { ...(yield) } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'ObjectExpression',
                  properties: [
                    {
                      type: 'SpreadElement',
                      argument: {
                        type: 'YieldExpression',
                        argument: null,
                        delegate: false,
                        start: 28,
                        end: 33,
                        loc: {
                          start: {
                            line: 1,
                            column: 28
                          },
                          end: {
                            line: 1,
                            column: 33
                          }
                        }
                      },
                      start: 24,
                      end: 34,
                      loc: {
                        start: {
                          line: 1,
                          column: 24
                        },
                        end: {
                          line: 1,
                          column: 34
                        }
                      }
                    }
                  ],
                  start: 22,
                  end: 36,
                  loc: {
                    start: {
                      line: 1,
                      column: 22
                    },
                    end: {
                      line: 1,
                      column: 36
                    }
                  }
                },
                start: 15,
                end: 36,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 36
                  }
                }
              }
            ],
            start: 13,
            end: 38,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 38
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 10,
            end: 11,
            loc: {
              start: {
                line: 1,
                column: 10
              },
              end: {
                line: 1,
                column: 11
              }
            }
          },
          start: 0,
          end: 38,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 38
            }
          }
        }
      ],
      start: 0,
      end: 38,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 38
        }
      }
    }
  ],
  [
    `async function* f([{ x, y, z } = { x: 44, y: 55, z: 66 }]) {  }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'ObjectPattern',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'x',
                          start: 21,
                          end: 22,
                          loc: {
                            start: {
                              line: 1,
                              column: 21
                            },
                            end: {
                              line: 1,
                              column: 22
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'x',
                          start: 21,
                          end: 22,
                          loc: {
                            start: {
                              line: 1,
                              column: 21
                            },
                            end: {
                              line: 1,
                              column: 22
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 21,
                        end: 22,
                        loc: {
                          start: {
                            line: 1,
                            column: 21
                          },
                          end: {
                            line: 1,
                            column: 22
                          }
                        }
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'y',
                          start: 24,
                          end: 25,
                          loc: {
                            start: {
                              line: 1,
                              column: 24
                            },
                            end: {
                              line: 1,
                              column: 25
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'y',
                          start: 24,
                          end: 25,
                          loc: {
                            start: {
                              line: 1,
                              column: 24
                            },
                            end: {
                              line: 1,
                              column: 25
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 24,
                        end: 25,
                        loc: {
                          start: {
                            line: 1,
                            column: 24
                          },
                          end: {
                            line: 1,
                            column: 25
                          }
                        }
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'z',
                          start: 27,
                          end: 28,
                          loc: {
                            start: {
                              line: 1,
                              column: 27
                            },
                            end: {
                              line: 1,
                              column: 28
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'z',
                          start: 27,
                          end: 28,
                          loc: {
                            start: {
                              line: 1,
                              column: 27
                            },
                            end: {
                              line: 1,
                              column: 28
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 27,
                        end: 28,
                        loc: {
                          start: {
                            line: 1,
                            column: 27
                          },
                          end: {
                            line: 1,
                            column: 28
                          }
                        }
                      }
                    ],
                    start: 19,
                    end: 30,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 30
                      }
                    }
                  },
                  right: {
                    type: 'ObjectExpression',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'x',
                          start: 35,
                          end: 36,
                          loc: {
                            start: {
                              line: 1,
                              column: 35
                            },
                            end: {
                              line: 1,
                              column: 36
                            }
                          }
                        },
                        value: {
                          type: 'Literal',
                          value: 44,
                          start: 38,
                          end: 40,
                          loc: {
                            start: {
                              line: 1,
                              column: 38
                            },
                            end: {
                              line: 1,
                              column: 40
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 35,
                        end: 40,
                        loc: {
                          start: {
                            line: 1,
                            column: 35
                          },
                          end: {
                            line: 1,
                            column: 40
                          }
                        }
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'y',
                          start: 42,
                          end: 43,
                          loc: {
                            start: {
                              line: 1,
                              column: 42
                            },
                            end: {
                              line: 1,
                              column: 43
                            }
                          }
                        },
                        value: {
                          type: 'Literal',
                          value: 55,
                          start: 45,
                          end: 47,
                          loc: {
                            start: {
                              line: 1,
                              column: 45
                            },
                            end: {
                              line: 1,
                              column: 47
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 42,
                        end: 47,
                        loc: {
                          start: {
                            line: 1,
                            column: 42
                          },
                          end: {
                            line: 1,
                            column: 47
                          }
                        }
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'z',
                          start: 49,
                          end: 50,
                          loc: {
                            start: {
                              line: 1,
                              column: 49
                            },
                            end: {
                              line: 1,
                              column: 50
                            }
                          }
                        },
                        value: {
                          type: 'Literal',
                          value: 66,
                          start: 52,
                          end: 54,
                          loc: {
                            start: {
                              line: 1,
                              column: 52
                            },
                            end: {
                              line: 1,
                              column: 54
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 49,
                        end: 54,
                        loc: {
                          start: {
                            line: 1,
                            column: 49
                          },
                          end: {
                            line: 1,
                            column: 54
                          }
                        }
                      }
                    ],
                    start: 33,
                    end: 56,
                    loc: {
                      start: {
                        line: 1,
                        column: 33
                      },
                      end: {
                        line: 1,
                        column: 56
                      }
                    }
                  },
                  start: 19,
                  end: 56,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 56
                    }
                  }
                }
              ],
              start: 18,
              end: 57,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 57
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 59,
            end: 63,
            loc: {
              start: {
                line: 1,
                column: 59
              },
              end: {
                line: 1,
                column: 63
              }
            }
          },
          async: true,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 16,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 63,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 63
            }
          }
        }
      ],
      start: 0,
      end: 63,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 63
        }
      }
    }
  ],
  [
    `async function* f([[] = function() {}()]) { }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'ArrayPattern',
                    elements: [],
                    start: 19,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  right: {
                    type: 'CallExpression',
                    callee: {
                      type: 'FunctionExpression',
                      params: [],
                      body: {
                        type: 'BlockStatement',
                        body: [],
                        start: 35,
                        end: 37,
                        loc: {
                          start: {
                            line: 1,
                            column: 35
                          },
                          end: {
                            line: 1,
                            column: 37
                          }
                        }
                      },
                      async: false,
                      generator: false,
                      id: null,
                      start: 24,
                      end: 37,
                      loc: {
                        start: {
                          line: 1,
                          column: 24
                        },
                        end: {
                          line: 1,
                          column: 37
                        }
                      }
                    },
                    arguments: [],
                    start: 24,
                    end: 39,
                    loc: {
                      start: {
                        line: 1,
                        column: 24
                      },
                      end: {
                        line: 1,
                        column: 39
                      }
                    }
                  },
                  start: 19,
                  end: 39,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 39
                    }
                  }
                }
              ],
              start: 18,
              end: 40,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 40
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 42,
            end: 45,
            loc: {
              start: {
                line: 1,
                column: 42
              },
              end: {
                line: 1,
                column: 45
              }
            }
          },
          async: true,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 16,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 45,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 45
            }
          }
        }
      ],
      start: 0,
      end: 45,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 45
        }
      }
    }
  ],
  [
    `async function* f([[x]]) {  }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'ArrayPattern',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'x',
                      start: 20,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 20
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    }
                  ],
                  start: 19,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                }
              ],
              start: 18,
              end: 23,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 23
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 25,
            end: 29,
            loc: {
              start: {
                line: 1,
                column: 25
              },
              end: {
                line: 1,
                column: 29
              }
            }
          },
          async: true,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 16,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 29,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 29
            }
          }
        }
      ],
      start: 0,
      end: 29,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 29
        }
      }
    }
  ],
  [
    `var gen = async function *() { yield { ...yield, y: 1, ...yield yield, }; };`,
    Context.OptionsLoc | Context.Strict,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {
              type: 'VariableDeclarator',
              init: {
                type: 'FunctionExpression',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ExpressionStatement',
                      expression: {
                        type: 'YieldExpression',
                        argument: {
                          type: 'ObjectExpression',
                          properties: [
                            {
                              type: 'SpreadElement',
                              argument: {
                                type: 'YieldExpression',
                                argument: null,
                                delegate: false,
                                start: 42,
                                end: 47,
                                loc: {
                                  start: {
                                    line: 1,
                                    column: 42
                                  },
                                  end: {
                                    line: 1,
                                    column: 47
                                  }
                                }
                              },
                              start: 39,
                              end: 47,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 39
                                },
                                end: {
                                  line: 1,
                                  column: 47
                                }
                              }
                            },
                            {
                              type: 'Property',
                              key: {
                                type: 'Identifier',
                                name: 'y',
                                start: 49,
                                end: 50,
                                loc: {
                                  start: {
                                    line: 1,
                                    column: 49
                                  },
                                  end: {
                                    line: 1,
                                    column: 50
                                  }
                                }
                              },
                              value: {
                                type: 'Literal',
                                value: 1,
                                start: 52,
                                end: 53,
                                loc: {
                                  start: {
                                    line: 1,
                                    column: 52
                                  },
                                  end: {
                                    line: 1,
                                    column: 53
                                  }
                                }
                              },
                              kind: 'init',
                              computed: false,
                              method: false,
                              shorthand: false,
                              start: 49,
                              end: 53,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 49
                                },
                                end: {
                                  line: 1,
                                  column: 53
                                }
                              }
                            },
                            {
                              type: 'SpreadElement',
                              argument: {
                                type: 'YieldExpression',
                                argument: {
                                  type: 'YieldExpression',
                                  argument: null,
                                  delegate: false,
                                  start: 64,
                                  end: 69,
                                  loc: {
                                    start: {
                                      line: 1,
                                      column: 64
                                    },
                                    end: {
                                      line: 1,
                                      column: 69
                                    }
                                  }
                                },
                                delegate: false,
                                start: 58,
                                end: 69,
                                loc: {
                                  start: {
                                    line: 1,
                                    column: 58
                                  },
                                  end: {
                                    line: 1,
                                    column: 69
                                  }
                                }
                              },
                              start: 55,
                              end: 69,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 55
                                },
                                end: {
                                  line: 1,
                                  column: 69
                                }
                              }
                            }
                          ],
                          start: 37,
                          end: 72,
                          loc: {
                            start: {
                              line: 1,
                              column: 37
                            },
                            end: {
                              line: 1,
                              column: 72
                            }
                          }
                        },
                        delegate: false,
                        start: 31,
                        end: 72,
                        loc: {
                          start: {
                            line: 1,
                            column: 31
                          },
                          end: {
                            line: 1,
                            column: 72
                          }
                        }
                      },
                      start: 31,
                      end: 73,
                      loc: {
                        start: {
                          line: 1,
                          column: 31
                        },
                        end: {
                          line: 1,
                          column: 73
                        }
                      }
                    }
                  ],
                  start: 29,
                  end: 75,
                  loc: {
                    start: {
                      line: 1,
                      column: 29
                    },
                    end: {
                      line: 1,
                      column: 75
                    }
                  }
                },
                async: true,
                generator: true,
                id: null,
                start: 10,
                end: 75,
                loc: {
                  start: {
                    line: 1,
                    column: 10
                  },
                  end: {
                    line: 1,
                    column: 75
                  }
                }
              },
              id: {
                type: 'Identifier',
                name: 'gen',
                start: 4,
                end: 7,
                loc: {
                  start: {
                    line: 1,
                    column: 4
                  },
                  end: {
                    line: 1,
                    column: 7
                  }
                }
              },
              start: 4,
              end: 75,
              loc: {
                start: {
                  line: 1,
                  column: 4
                },
                end: {
                  line: 1,
                  column: 75
                }
              }
            }
          ],
          start: 0,
          end: 76,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 76
            }
          }
        }
      ],
      start: 0,
      end: 76,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 76
        }
      }
    }
  ],
  [
    `async function* f([arrow = () => {}]) {  }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'arrow',
                    start: 19,
                    end: 24,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 24
                      }
                    }
                  },
                  right: {
                    type: 'ArrowFunctionExpression',
                    body: {
                      type: 'BlockStatement',
                      body: [],
                      start: 33,
                      end: 35,
                      loc: {
                        start: {
                          line: 1,
                          column: 33
                        },
                        end: {
                          line: 1,
                          column: 35
                        }
                      }
                    },
                    params: [],
                    async: false,
                    expression: false,
                    start: 27,
                    end: 35,
                    loc: {
                      start: {
                        line: 1,
                        column: 27
                      },
                      end: {
                        line: 1,
                        column: 35
                      }
                    }
                  },
                  start: 19,
                  end: 35,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 35
                    }
                  }
                }
              ],
              start: 18,
              end: 36,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 36
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 38,
            end: 42,
            loc: {
              start: {
                line: 1,
                column: 38
              },
              end: {
                line: 1,
                column: 42
              }
            }
          },
          async: true,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 16,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 42,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 42
            }
          }
        }
      ],
      start: 0,
      end: 42,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 42
        }
      }
    }
  ],
  [
    `async function* f([fn = function () {}, xFn = function x() {}]) {  }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'fn',
                    start: 19,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      body: [],
                      start: 36,
                      end: 38,
                      loc: {
                        start: {
                          line: 1,
                          column: 36
                        },
                        end: {
                          line: 1,
                          column: 38
                        }
                      }
                    },
                    async: false,
                    generator: false,
                    id: null,
                    start: 24,
                    end: 38,
                    loc: {
                      start: {
                        line: 1,
                        column: 24
                      },
                      end: {
                        line: 1,
                        column: 38
                      }
                    }
                  },
                  start: 19,
                  end: 38,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 38
                    }
                  }
                },
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'xFn',
                    start: 40,
                    end: 43,
                    loc: {
                      start: {
                        line: 1,
                        column: 40
                      },
                      end: {
                        line: 1,
                        column: 43
                      }
                    }
                  },
                  right: {
                    type: 'FunctionExpression',
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      body: [],
                      start: 59,
                      end: 61,
                      loc: {
                        start: {
                          line: 1,
                          column: 59
                        },
                        end: {
                          line: 1,
                          column: 61
                        }
                      }
                    },
                    async: false,
                    generator: false,
                    id: {
                      type: 'Identifier',
                      name: 'x',
                      start: 55,
                      end: 56,
                      loc: {
                        start: {
                          line: 1,
                          column: 55
                        },
                        end: {
                          line: 1,
                          column: 56
                        }
                      }
                    },
                    start: 46,
                    end: 61,
                    loc: {
                      start: {
                        line: 1,
                        column: 46
                      },
                      end: {
                        line: 1,
                        column: 61
                      }
                    }
                  },
                  start: 40,
                  end: 61,
                  loc: {
                    start: {
                      line: 1,
                      column: 40
                    },
                    end: {
                      line: 1,
                      column: 61
                    }
                  }
                }
              ],
              start: 18,
              end: 62,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 62
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 64,
            end: 68,
            loc: {
              start: {
                line: 1,
                column: 64
              },
              end: {
                line: 1,
                column: 68
              }
            }
          },
          async: true,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 16,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 68,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 68
            }
          }
        }
      ],
      start: 0,
      end: 68,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 68
        }
      }
    }
  ],
  [
    `async function* f([{ x }]) {  }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'ObjectPattern',
                  properties: [
                    {
                      type: 'Property',
                      key: {
                        type: 'Identifier',
                        name: 'x',
                        start: 21,
                        end: 22,
                        loc: {
                          start: {
                            line: 1,
                            column: 21
                          },
                          end: {
                            line: 1,
                            column: 22
                          }
                        }
                      },
                      value: {
                        type: 'Identifier',
                        name: 'x',
                        start: 21,
                        end: 22,
                        loc: {
                          start: {
                            line: 1,
                            column: 21
                          },
                          end: {
                            line: 1,
                            column: 22
                          }
                        }
                      },
                      kind: 'init',
                      computed: false,
                      method: false,
                      shorthand: true,
                      start: 21,
                      end: 22,
                      loc: {
                        start: {
                          line: 1,
                          column: 21
                        },
                        end: {
                          line: 1,
                          column: 22
                        }
                      }
                    }
                  ],
                  start: 19,
                  end: 24,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 24
                    }
                  }
                }
              ],
              start: 18,
              end: 25,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 25
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 27,
            end: 31,
            loc: {
              start: {
                line: 1,
                column: 27
              },
              end: {
                line: 1,
                column: 31
              }
            }
          },
          async: true,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 16,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 31,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 31
            }
          }
        }
      ],
      start: 0,
      end: 31,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 31
        }
      }
    }
  ],
  [
    `async function* f([{ x, y, z } = { x: 44, y: 55, z: 66 }] = [{ x: 11, y: 22, z: 33 }]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'ObjectPattern',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'x',
                            start: 21,
                            end: 22,
                            loc: {
                              start: {
                                line: 1,
                                column: 21
                              },
                              end: {
                                line: 1,
                                column: 22
                              }
                            }
                          },
                          value: {
                            type: 'Identifier',
                            name: 'x',
                            start: 21,
                            end: 22,
                            loc: {
                              start: {
                                line: 1,
                                column: 21
                              },
                              end: {
                                line: 1,
                                column: 22
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: true,
                          start: 21,
                          end: 22,
                          loc: {
                            start: {
                              line: 1,
                              column: 21
                            },
                            end: {
                              line: 1,
                              column: 22
                            }
                          }
                        },
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'y',
                            start: 24,
                            end: 25,
                            loc: {
                              start: {
                                line: 1,
                                column: 24
                              },
                              end: {
                                line: 1,
                                column: 25
                              }
                            }
                          },
                          value: {
                            type: 'Identifier',
                            name: 'y',
                            start: 24,
                            end: 25,
                            loc: {
                              start: {
                                line: 1,
                                column: 24
                              },
                              end: {
                                line: 1,
                                column: 25
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: true,
                          start: 24,
                          end: 25,
                          loc: {
                            start: {
                              line: 1,
                              column: 24
                            },
                            end: {
                              line: 1,
                              column: 25
                            }
                          }
                        },
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'z',
                            start: 27,
                            end: 28,
                            loc: {
                              start: {
                                line: 1,
                                column: 27
                              },
                              end: {
                                line: 1,
                                column: 28
                              }
                            }
                          },
                          value: {
                            type: 'Identifier',
                            name: 'z',
                            start: 27,
                            end: 28,
                            loc: {
                              start: {
                                line: 1,
                                column: 27
                              },
                              end: {
                                line: 1,
                                column: 28
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: true,
                          start: 27,
                          end: 28,
                          loc: {
                            start: {
                              line: 1,
                              column: 27
                            },
                            end: {
                              line: 1,
                              column: 28
                            }
                          }
                        }
                      ],
                      start: 19,
                      end: 30,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 30
                        }
                      }
                    },
                    right: {
                      type: 'ObjectExpression',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'x',
                            start: 35,
                            end: 36,
                            loc: {
                              start: {
                                line: 1,
                                column: 35
                              },
                              end: {
                                line: 1,
                                column: 36
                              }
                            }
                          },
                          value: {
                            type: 'Literal',
                            value: 44,
                            start: 38,
                            end: 40,
                            loc: {
                              start: {
                                line: 1,
                                column: 38
                              },
                              end: {
                                line: 1,
                                column: 40
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: false,
                          start: 35,
                          end: 40,
                          loc: {
                            start: {
                              line: 1,
                              column: 35
                            },
                            end: {
                              line: 1,
                              column: 40
                            }
                          }
                        },
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'y',
                            start: 42,
                            end: 43,
                            loc: {
                              start: {
                                line: 1,
                                column: 42
                              },
                              end: {
                                line: 1,
                                column: 43
                              }
                            }
                          },
                          value: {
                            type: 'Literal',
                            value: 55,
                            start: 45,
                            end: 47,
                            loc: {
                              start: {
                                line: 1,
                                column: 45
                              },
                              end: {
                                line: 1,
                                column: 47
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: false,
                          start: 42,
                          end: 47,
                          loc: {
                            start: {
                              line: 1,
                              column: 42
                            },
                            end: {
                              line: 1,
                              column: 47
                            }
                          }
                        },
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'z',
                            start: 49,
                            end: 50,
                            loc: {
                              start: {
                                line: 1,
                                column: 49
                              },
                              end: {
                                line: 1,
                                column: 50
                              }
                            }
                          },
                          value: {
                            type: 'Literal',
                            value: 66,
                            start: 52,
                            end: 54,
                            loc: {
                              start: {
                                line: 1,
                                column: 52
                              },
                              end: {
                                line: 1,
                                column: 54
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: false,
                          start: 49,
                          end: 54,
                          loc: {
                            start: {
                              line: 1,
                              column: 49
                            },
                            end: {
                              line: 1,
                              column: 54
                            }
                          }
                        }
                      ],
                      start: 33,
                      end: 56,
                      loc: {
                        start: {
                          line: 1,
                          column: 33
                        },
                        end: {
                          line: 1,
                          column: 56
                        }
                      }
                    },
                    start: 19,
                    end: 56,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 56
                      }
                    }
                  }
                ],
                start: 18,
                end: 57,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 57
                  }
                }
              },
              right: {
                type: 'ArrayExpression',
                elements: [
                  {
                    type: 'ObjectExpression',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'x',
                          start: 63,
                          end: 64,
                          loc: {
                            start: {
                              line: 1,
                              column: 63
                            },
                            end: {
                              line: 1,
                              column: 64
                            }
                          }
                        },
                        value: {
                          type: 'Literal',
                          value: 11,
                          start: 66,
                          end: 68,
                          loc: {
                            start: {
                              line: 1,
                              column: 66
                            },
                            end: {
                              line: 1,
                              column: 68
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 63,
                        end: 68,
                        loc: {
                          start: {
                            line: 1,
                            column: 63
                          },
                          end: {
                            line: 1,
                            column: 68
                          }
                        }
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'y',
                          start: 70,
                          end: 71,
                          loc: {
                            start: {
                              line: 1,
                              column: 70
                            },
                            end: {
                              line: 1,
                              column: 71
                            }
                          }
                        },
                        value: {
                          type: 'Literal',
                          value: 22,
                          start: 73,
                          end: 75,
                          loc: {
                            start: {
                              line: 1,
                              column: 73
                            },
                            end: {
                              line: 1,
                              column: 75
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 70,
                        end: 75,
                        loc: {
                          start: {
                            line: 1,
                            column: 70
                          },
                          end: {
                            line: 1,
                            column: 75
                          }
                        }
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'z',
                          start: 77,
                          end: 78,
                          loc: {
                            start: {
                              line: 1,
                              column: 77
                            },
                            end: {
                              line: 1,
                              column: 78
                            }
                          }
                        },
                        value: {
                          type: 'Literal',
                          value: 33,
                          start: 80,
                          end: 82,
                          loc: {
                            start: {
                              line: 1,
                              column: 80
                            },
                            end: {
                              line: 1,
                              column: 82
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 77,
                        end: 82,
                        loc: {
                          start: {
                            line: 1,
                            column: 77
                          },
                          end: {
                            line: 1,
                            column: 82
                          }
                        }
                      }
                    ],
                    start: 61,
                    end: 84,
                    loc: {
                      start: {
                        line: 1,
                        column: 61
                      },
                      end: {
                        line: 1,
                        column: 84
                      }
                    }
                  }
                ],
                start: 60,
                end: 85,
                loc: {
                  start: {
                    line: 1,
                    column: 60
                  },
                  end: {
                    line: 1,
                    column: 85
                  }
                }
              },
              start: 18,
              end: 85,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 85
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 87,
            end: 89,
            loc: {
              start: {
                line: 1,
                column: 87
              },
              end: {
                line: 1,
                column: 89
              }
            }
          },
          async: true,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 16,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 89,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 89
            }
          }
        }
      ],
      start: 0,
      end: 89,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 89
        }
      }
    }
  ],
  [
    `async function* f({ x: y = 33 } = { }) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'x',
                      start: 20,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 20
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    },
                    value: {
                      type: 'AssignmentPattern',
                      left: {
                        type: 'Identifier',
                        name: 'y',
                        start: 23,
                        end: 24,
                        loc: {
                          start: {
                            line: 1,
                            column: 23
                          },
                          end: {
                            line: 1,
                            column: 24
                          }
                        }
                      },
                      right: {
                        type: 'Literal',
                        value: 33,
                        start: 27,
                        end: 29,
                        loc: {
                          start: {
                            line: 1,
                            column: 27
                          },
                          end: {
                            line: 1,
                            column: 29
                          }
                        }
                      },
                      start: 23,
                      end: 29,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 29
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 20,
                    end: 29,
                    loc: {
                      start: {
                        line: 1,
                        column: 20
                      },
                      end: {
                        line: 1,
                        column: 29
                      }
                    }
                  }
                ],
                start: 18,
                end: 31,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 31
                  }
                }
              },
              right: {
                type: 'ObjectExpression',
                properties: [],
                start: 34,
                end: 37,
                loc: {
                  start: {
                    line: 1,
                    column: 34
                  },
                  end: {
                    line: 1,
                    column: 37
                  }
                }
              },
              start: 18,
              end: 37,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 37
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 39,
            end: 41,
            loc: {
              start: {
                line: 1,
                column: 39
              },
              end: {
                line: 1,
                column: 41
              }
            }
          },
          async: true,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 16,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 41,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 41
            }
          }
        }
      ],
      start: 0,
      end: 41,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 41
        }
      }
    }
  ],
  [
    `(async function * () { for await (x of xs); })`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'FunctionExpression',
            params: [],
            body: {
              type: 'BlockStatement',
              body: [
                {
                  type: 'ForOfStatement',
                  body: {
                    type: 'EmptyStatement',
                    start: 42,
                    end: 43,
                    loc: {
                      start: {
                        line: 1,
                        column: 42
                      },
                      end: {
                        line: 1,
                        column: 43
                      }
                    }
                  },
                  left: {
                    type: 'Identifier',
                    name: 'x',
                    start: 34,
                    end: 35,
                    loc: {
                      start: {
                        line: 1,
                        column: 34
                      },
                      end: {
                        line: 1,
                        column: 35
                      }
                    }
                  },
                  right: {
                    type: 'Identifier',
                    name: 'xs',
                    start: 39,
                    end: 41,
                    loc: {
                      start: {
                        line: 1,
                        column: 39
                      },
                      end: {
                        line: 1,
                        column: 41
                      }
                    }
                  },
                  await: true,
                  start: 23,
                  end: 43,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 43
                    }
                  }
                }
              ],
              start: 21,
              end: 45,
              loc: {
                start: {
                  line: 1,
                  column: 21
                },
                end: {
                  line: 1,
                  column: 45
                }
              }
            },
            async: true,
            generator: true,
            id: null,
            start: 1,
            end: 45,
            loc: {
              start: {
                line: 1,
                column: 1
              },
              end: {
                line: 1,
                column: 45
              }
            }
          },
          start: 0,
          end: 46,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 46
            }
          }
        }
      ],
      start: 0,
      end: 46,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 46
        }
      }
    }
  ],
  [
    `(async function * () { await a; yield b; })`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'FunctionExpression',
            params: [],
            body: {
              type: 'BlockStatement',
              body: [
                {
                  type: 'ExpressionStatement',
                  expression: {
                    type: 'AwaitExpression',
                    argument: {
                      type: 'Identifier',
                      name: 'a',
                      start: 29,
                      end: 30,
                      loc: {
                        start: {
                          line: 1,
                          column: 29
                        },
                        end: {
                          line: 1,
                          column: 30
                        }
                      }
                    },
                    start: 23,
                    end: 30,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 30
                      }
                    }
                  },
                  start: 23,
                  end: 31,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 31
                    }
                  }
                },
                {
                  type: 'ExpressionStatement',
                  expression: {
                    type: 'YieldExpression',
                    argument: {
                      type: 'Identifier',
                      name: 'b',
                      start: 38,
                      end: 39,
                      loc: {
                        start: {
                          line: 1,
                          column: 38
                        },
                        end: {
                          line: 1,
                          column: 39
                        }
                      }
                    },
                    delegate: false,
                    start: 32,
                    end: 39,
                    loc: {
                      start: {
                        line: 1,
                        column: 32
                      },
                      end: {
                        line: 1,
                        column: 39
                      }
                    }
                  },
                  start: 32,
                  end: 40,
                  loc: {
                    start: {
                      line: 1,
                      column: 32
                    },
                    end: {
                      line: 1,
                      column: 40
                    }
                  }
                }
              ],
              start: 21,
              end: 42,
              loc: {
                start: {
                  line: 1,
                  column: 21
                },
                end: {
                  line: 1,
                  column: 42
                }
              }
            },
            async: true,
            generator: true,
            id: null,
            start: 1,
            end: 42,
            loc: {
              start: {
                line: 1,
                column: 1
              },
              end: {
                line: 1,
                column: 42
              }
            }
          },
          start: 0,
          end: 43,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 43
            }
          }
        }
      ],
      start: 0,
      end: 43,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 43
        }
      }
    }
  ],
  [
    `async function fn() { (await x)[a] += y; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'AwaitExpression',
                      argument: {
                        type: 'Identifier',
                        name: 'x',
                        start: 29,
                        end: 30,
                        loc: {
                          start: {
                            line: 1,
                            column: 29
                          },
                          end: {
                            line: 1,
                            column: 30
                          }
                        }
                      },
                      start: 23,
                      end: 30,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 30
                        }
                      }
                    },
                    computed: true,
                    property: {
                      type: 'Identifier',
                      name: 'a',
                      start: 32,
                      end: 33,
                      loc: {
                        start: {
                          line: 1,
                          column: 32
                        },
                        end: {
                          line: 1,
                          column: 33
                        }
                      }
                    },
                    start: 22,
                    end: 34,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 34
                      }
                    }
                  },
                  operator: '+=',
                  right: {
                    type: 'Identifier',
                    name: 'y',
                    start: 38,
                    end: 39,
                    loc: {
                      start: {
                        line: 1,
                        column: 38
                      },
                      end: {
                        line: 1,
                        column: 39
                      }
                    }
                  },
                  start: 22,
                  end: 39,
                  loc: {
                    start: {
                      line: 1,
                      column: 22
                    },
                    end: {
                      line: 1,
                      column: 39
                    }
                  }
                },
                start: 22,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              }
            ],
            start: 20,
            end: 42,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 42
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 42,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 42
            }
          }
        }
      ],
      start: 0,
      end: 42,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 42
        }
      }
    }
  ],
  [
    `async function fn() { (await x) ** y; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'BinaryExpression',
                  left: {
                    type: 'AwaitExpression',
                    argument: {
                      type: 'Identifier',
                      name: 'x',
                      start: 29,
                      end: 30,
                      loc: {
                        start: {
                          line: 1,
                          column: 29
                        },
                        end: {
                          line: 1,
                          column: 30
                        }
                      }
                    },
                    start: 23,
                    end: 30,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 30
                      }
                    }
                  },
                  right: {
                    type: 'Identifier',
                    name: 'y',
                    start: 35,
                    end: 36,
                    loc: {
                      start: {
                        line: 1,
                        column: 35
                      },
                      end: {
                        line: 1,
                        column: 36
                      }
                    }
                  },
                  operator: '**',
                  start: 22,
                  end: 36,
                  loc: {
                    start: {
                      line: 1,
                      column: 22
                    },
                    end: {
                      line: 1,
                      column: 36
                    }
                  }
                },
                start: 22,
                end: 37,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 37
                  }
                }
              }
            ],
            start: 20,
            end: 39,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 39
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 39,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 39
            }
          }
        }
      ],
      start: 0,
      end: 39,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 39
        }
      }
    }
  ],
  [
    `async function fn() { x.a.b = await y; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'MemberExpression',
                      object: {
                        type: 'Identifier',
                        name: 'x',
                        start: 22,
                        end: 23,
                        loc: {
                          start: {
                            line: 1,
                            column: 22
                          },
                          end: {
                            line: 1,
                            column: 23
                          }
                        }
                      },
                      computed: false,
                      property: {
                        type: 'Identifier',
                        name: 'a',
                        start: 24,
                        end: 25,
                        loc: {
                          start: {
                            line: 1,
                            column: 24
                          },
                          end: {
                            line: 1,
                            column: 25
                          }
                        }
                      },
                      start: 22,
                      end: 25,
                      loc: {
                        start: {
                          line: 1,
                          column: 22
                        },
                        end: {
                          line: 1,
                          column: 25
                        }
                      }
                    },
                    computed: false,
                    property: {
                      type: 'Identifier',
                      name: 'b',
                      start: 26,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    start: 22,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'AwaitExpression',
                    argument: {
                      type: 'Identifier',
                      name: 'y',
                      start: 36,
                      end: 37,
                      loc: {
                        start: {
                          line: 1,
                          column: 36
                        },
                        end: {
                          line: 1,
                          column: 37
                        }
                      }
                    },
                    start: 30,
                    end: 37,
                    loc: {
                      start: {
                        line: 1,
                        column: 30
                      },
                      end: {
                        line: 1,
                        column: 37
                      }
                    }
                  },
                  start: 22,
                  end: 37,
                  loc: {
                    start: {
                      line: 1,
                      column: 22
                    },
                    end: {
                      line: 1,
                      column: 37
                    }
                  }
                },
                start: 22,
                end: 38,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 38
                  }
                }
              }
            ],
            start: 20,
            end: 40,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 40
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 40,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 40
            }
          }
        }
      ],
      start: 0,
      end: 40,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 40
        }
      }
    }
  ],
  [
    `async function fn() {x[z].b = await y; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'MemberExpression',
                      object: {
                        type: 'Identifier',
                        name: 'x',
                        start: 21,
                        end: 22,
                        loc: {
                          start: {
                            line: 1,
                            column: 21
                          },
                          end: {
                            line: 1,
                            column: 22
                          }
                        }
                      },
                      computed: true,
                      property: {
                        type: 'Identifier',
                        name: 'z',
                        start: 23,
                        end: 24,
                        loc: {
                          start: {
                            line: 1,
                            column: 23
                          },
                          end: {
                            line: 1,
                            column: 24
                          }
                        }
                      },
                      start: 21,
                      end: 25,
                      loc: {
                        start: {
                          line: 1,
                          column: 21
                        },
                        end: {
                          line: 1,
                          column: 25
                        }
                      }
                    },
                    computed: false,
                    property: {
                      type: 'Identifier',
                      name: 'b',
                      start: 26,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    start: 21,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 21
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'AwaitExpression',
                    argument: {
                      type: 'Identifier',
                      name: 'y',
                      start: 36,
                      end: 37,
                      loc: {
                        start: {
                          line: 1,
                          column: 36
                        },
                        end: {
                          line: 1,
                          column: 37
                        }
                      }
                    },
                    start: 30,
                    end: 37,
                    loc: {
                      start: {
                        line: 1,
                        column: 30
                      },
                      end: {
                        line: 1,
                        column: 37
                      }
                    }
                  },
                  start: 21,
                  end: 37,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 37
                    }
                  }
                },
                start: 21,
                end: 38,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 38
                  }
                }
              }
            ],
            start: 20,
            end: 40,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 40
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 40,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 40
            }
          }
        }
      ],
      start: 0,
      end: 40,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 40
        }
      }
    }
  ],
  [
    `async function fn() { const x = await import({}); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'const',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'AwaitExpression',
                      argument: {
                        type: 'ImportExpression',
                        source: {
                          type: 'ObjectExpression',
                          properties: [],
                          start: 45,
                          end: 47,
                          loc: {
                            start: {
                              line: 1,
                              column: 45
                            },
                            end: {
                              line: 1,
                              column: 47
                            }
                          }
                        },
                        start: 38,
                        end: 48,
                        loc: {
                          start: {
                            line: 1,
                            column: 38
                          },
                          end: {
                            line: 1,
                            column: 48
                          }
                        }
                      },
                      start: 32,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 32
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'x',
                      start: 28,
                      end: 29,
                      loc: {
                        start: {
                          line: 1,
                          column: 28
                        },
                        end: {
                          line: 1,
                          column: 29
                        }
                      }
                    },
                    start: 28,
                    end: 48,
                    loc: {
                      start: {
                        line: 1,
                        column: 28
                      },
                      end: {
                        line: 1,
                        column: 48
                      }
                    }
                  }
                ],
                start: 22,
                end: 49,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 49
                  }
                }
              }
            ],
            start: 20,
            end: 51,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 51
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 51,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 51
            }
          }
        }
      ],
      start: 0,
      end: 51,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 51
        }
      }
    }
  ],
  [
    `async function fn() { x.a[z] = await y;; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'MemberExpression',
                      object: {
                        type: 'Identifier',
                        name: 'x',
                        start: 22,
                        end: 23,
                        loc: {
                          start: {
                            line: 1,
                            column: 22
                          },
                          end: {
                            line: 1,
                            column: 23
                          }
                        }
                      },
                      computed: false,
                      property: {
                        type: 'Identifier',
                        name: 'a',
                        start: 24,
                        end: 25,
                        loc: {
                          start: {
                            line: 1,
                            column: 24
                          },
                          end: {
                            line: 1,
                            column: 25
                          }
                        }
                      },
                      start: 22,
                      end: 25,
                      loc: {
                        start: {
                          line: 1,
                          column: 22
                        },
                        end: {
                          line: 1,
                          column: 25
                        }
                      }
                    },
                    computed: true,
                    property: {
                      type: 'Identifier',
                      name: 'z',
                      start: 26,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    start: 22,
                    end: 28,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 28
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'AwaitExpression',
                    argument: {
                      type: 'Identifier',
                      name: 'y',
                      start: 37,
                      end: 38,
                      loc: {
                        start: {
                          line: 1,
                          column: 37
                        },
                        end: {
                          line: 1,
                          column: 38
                        }
                      }
                    },
                    start: 31,
                    end: 38,
                    loc: {
                      start: {
                        line: 1,
                        column: 31
                      },
                      end: {
                        line: 1,
                        column: 38
                      }
                    }
                  },
                  start: 22,
                  end: 38,
                  loc: {
                    start: {
                      line: 1,
                      column: 22
                    },
                    end: {
                      line: 1,
                      column: 38
                    }
                  }
                },
                start: 22,
                end: 39,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 39
                  }
                }
              },
              {
                type: 'EmptyStatement',
                start: 39,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 39
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              }
            ],
            start: 20,
            end: 42,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 42
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 42,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 42
            }
          }
        }
      ],
      start: 0,
      end: 42,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 42
        }
      }
    }
  ],
  [
    `async function fn() {(await x).a = y; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'AwaitExpression',
                      argument: {
                        type: 'Identifier',
                        name: 'x',
                        start: 28,
                        end: 29,
                        loc: {
                          start: {
                            line: 1,
                            column: 28
                          },
                          end: {
                            line: 1,
                            column: 29
                          }
                        }
                      },
                      start: 22,
                      end: 29,
                      loc: {
                        start: {
                          line: 1,
                          column: 22
                        },
                        end: {
                          line: 1,
                          column: 29
                        }
                      }
                    },
                    computed: false,
                    property: {
                      type: 'Identifier',
                      name: 'a',
                      start: 31,
                      end: 32,
                      loc: {
                        start: {
                          line: 1,
                          column: 31
                        },
                        end: {
                          line: 1,
                          column: 32
                        }
                      }
                    },
                    start: 21,
                    end: 32,
                    loc: {
                      start: {
                        line: 1,
                        column: 21
                      },
                      end: {
                        line: 1,
                        column: 32
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Identifier',
                    name: 'y',
                    start: 35,
                    end: 36,
                    loc: {
                      start: {
                        line: 1,
                        column: 35
                      },
                      end: {
                        line: 1,
                        column: 36
                      }
                    }
                  },
                  start: 21,
                  end: 36,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 36
                    }
                  }
                },
                start: 21,
                end: 37,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 37
                  }
                }
              }
            ],
            start: 20,
            end: 39,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 39
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 39,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 39
            }
          }
        }
      ],
      start: 0,
      end: 39,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 39
        }
      }
    }
  ],
  [
    `async function fn() {  (await x.a).b = y; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'AwaitExpression',
                      argument: {
                        type: 'MemberExpression',
                        object: {
                          type: 'Identifier',
                          name: 'x',
                          start: 30,
                          end: 31,
                          loc: {
                            start: {
                              line: 1,
                              column: 30
                            },
                            end: {
                              line: 1,
                              column: 31
                            }
                          }
                        },
                        computed: false,
                        property: {
                          type: 'Identifier',
                          name: 'a',
                          start: 32,
                          end: 33,
                          loc: {
                            start: {
                              line: 1,
                              column: 32
                            },
                            end: {
                              line: 1,
                              column: 33
                            }
                          }
                        },
                        start: 30,
                        end: 33,
                        loc: {
                          start: {
                            line: 1,
                            column: 30
                          },
                          end: {
                            line: 1,
                            column: 33
                          }
                        }
                      },
                      start: 24,
                      end: 33,
                      loc: {
                        start: {
                          line: 1,
                          column: 24
                        },
                        end: {
                          line: 1,
                          column: 33
                        }
                      }
                    },
                    computed: false,
                    property: {
                      type: 'Identifier',
                      name: 'b',
                      start: 35,
                      end: 36,
                      loc: {
                        start: {
                          line: 1,
                          column: 35
                        },
                        end: {
                          line: 1,
                          column: 36
                        }
                      }
                    },
                    start: 23,
                    end: 36,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 36
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Identifier',
                    name: 'y',
                    start: 39,
                    end: 40,
                    loc: {
                      start: {
                        line: 1,
                        column: 39
                      },
                      end: {
                        line: 1,
                        column: 40
                      }
                    }
                  },
                  start: 23,
                  end: 40,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 40
                    }
                  }
                },
                start: 23,
                end: 41,
                loc: {
                  start: {
                    line: 1,
                    column: 23
                  },
                  end: {
                    line: 1,
                    column: 41
                  }
                }
              }
            ],
            start: 20,
            end: 43,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 43
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 43,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 43
            }
          }
        }
      ],
      start: 0,
      end: 43,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 43
        }
      }
    }
  ],
  [
    `await.b[c](d).e;`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'MemberExpression',
            object: {
              type: 'CallExpression',
              callee: {
                type: 'MemberExpression',
                object: {
                  type: 'MemberExpression',
                  object: {
                    type: 'Identifier',
                    name: 'await',
                    start: 0,
                    end: 5,
                    loc: {
                      start: {
                        line: 1,
                        column: 0
                      },
                      end: {
                        line: 1,
                        column: 5
                      }
                    }
                  },
                  computed: false,
                  property: {
                    type: 'Identifier',
                    name: 'b',
                    start: 6,
                    end: 7,
                    loc: {
                      start: {
                        line: 1,
                        column: 6
                      },
                      end: {
                        line: 1,
                        column: 7
                      }
                    }
                  },
                  start: 0,
                  end: 7,
                  loc: {
                    start: {
                      line: 1,
                      column: 0
                    },
                    end: {
                      line: 1,
                      column: 7
                    }
                  }
                },
                computed: true,
                property: {
                  type: 'Identifier',
                  name: 'c',
                  start: 8,
                  end: 9,
                  loc: {
                    start: {
                      line: 1,
                      column: 8
                    },
                    end: {
                      line: 1,
                      column: 9
                    }
                  }
                },
                start: 0,
                end: 10,
                loc: {
                  start: {
                    line: 1,
                    column: 0
                  },
                  end: {
                    line: 1,
                    column: 10
                  }
                }
              },
              arguments: [
                {
                  type: 'Identifier',
                  name: 'd',
                  start: 11,
                  end: 12,
                  loc: {
                    start: {
                      line: 1,
                      column: 11
                    },
                    end: {
                      line: 1,
                      column: 12
                    }
                  }
                }
              ],
              start: 0,
              end: 13,
              loc: {
                start: {
                  line: 1,
                  column: 0
                },
                end: {
                  line: 1,
                  column: 13
                }
              }
            },
            computed: false,
            property: {
              type: 'Identifier',
              name: 'e',
              start: 14,
              end: 15,
              loc: {
                start: {
                  line: 1,
                  column: 14
                },
                end: {
                  line: 1,
                  column: 15
                }
              }
            },
            start: 0,
            end: 15,
            loc: {
              start: {
                line: 1,
                column: 0
              },
              end: {
                line: 1,
                column: 15
              }
            }
          },
          start: 0,
          end: 16,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 16
            }
          }
        }
      ],
      start: 0,
      end: 16,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 16
        }
      }
    }
  ],
  [
    `async function * fn() { import(yield * ["Mr. X", "Mr. Y", "Mr. Z"]); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'ImportExpression',
                  source: {
                    type: 'YieldExpression',
                    argument: {
                      type: 'ArrayExpression',
                      elements: [
                        {
                          type: 'Literal',
                          value: 'Mr. X',
                          start: 40,
                          end: 47,
                          loc: {
                            start: {
                              line: 1,
                              column: 40
                            },
                            end: {
                              line: 1,
                              column: 47
                            }
                          }
                        },
                        {
                          type: 'Literal',
                          value: 'Mr. Y',
                          start: 49,
                          end: 56,
                          loc: {
                            start: {
                              line: 1,
                              column: 49
                            },
                            end: {
                              line: 1,
                              column: 56
                            }
                          }
                        },
                        {
                          type: 'Literal',
                          value: 'Mr. Z',
                          start: 58,
                          end: 65,
                          loc: {
                            start: {
                              line: 1,
                              column: 58
                            },
                            end: {
                              line: 1,
                              column: 65
                            }
                          }
                        }
                      ],
                      start: 39,
                      end: 66,
                      loc: {
                        start: {
                          line: 1,
                          column: 39
                        },
                        end: {
                          line: 1,
                          column: 66
                        }
                      }
                    },
                    delegate: true,
                    start: 31,
                    end: 66,
                    loc: {
                      start: {
                        line: 1,
                        column: 31
                      },
                      end: {
                        line: 1,
                        column: 66
                      }
                    }
                  },
                  start: 24,
                  end: 67,
                  loc: {
                    start: {
                      line: 1,
                      column: 24
                    },
                    end: {
                      line: 1,
                      column: 67
                    }
                  }
                },
                start: 24,
                end: 68,
                loc: {
                  start: {
                    line: 1,
                    column: 24
                  },
                  end: {
                    line: 1,
                    column: 68
                  }
                }
              }
            ],
            start: 22,
            end: 70,
            loc: {
              start: {
                line: 1,
                column: 22
              },
              end: {
                line: 1,
                column: 70
              }
            }
          },
          async: true,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'fn',
            start: 17,
            end: 19,
            loc: {
              start: {
                line: 1,
                column: 17
              },
              end: {
                line: 1,
                column: 19
              }
            }
          },
          start: 0,
          end: 70,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 70
            }
          }
        }
      ],
      start: 0,
      end: 70,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 70
        }
      }
    }
  ],
  [
    `async function af1(a) { await a; return await foo.call({ x : 100 }); /** comment**/ }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'a',
              start: 19,
              end: 20,
              loc: {
                start: {
                  line: 1,
                  column: 19
                },
                end: {
                  line: 1,
                  column: 20
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AwaitExpression',
                  argument: {
                    type: 'Identifier',
                    name: 'a',
                    start: 30,
                    end: 31,
                    loc: {
                      start: {
                        line: 1,
                        column: 30
                      },
                      end: {
                        line: 1,
                        column: 31
                      }
                    }
                  },
                  start: 24,
                  end: 31,
                  loc: {
                    start: {
                      line: 1,
                      column: 24
                    },
                    end: {
                      line: 1,
                      column: 31
                    }
                  }
                },
                start: 24,
                end: 32,
                loc: {
                  start: {
                    line: 1,
                    column: 24
                  },
                  end: {
                    line: 1,
                    column: 32
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'AwaitExpression',
                  argument: {
                    type: 'CallExpression',
                    callee: {
                      type: 'MemberExpression',
                      object: {
                        type: 'Identifier',
                        name: 'foo',
                        start: 46,
                        end: 49,
                        loc: {
                          start: {
                            line: 1,
                            column: 46
                          },
                          end: {
                            line: 1,
                            column: 49
                          }
                        }
                      },
                      computed: false,
                      property: {
                        type: 'Identifier',
                        name: 'call',
                        start: 50,
                        end: 54,
                        loc: {
                          start: {
                            line: 1,
                            column: 50
                          },
                          end: {
                            line: 1,
                            column: 54
                          }
                        }
                      },
                      start: 46,
                      end: 54,
                      loc: {
                        start: {
                          line: 1,
                          column: 46
                        },
                        end: {
                          line: 1,
                          column: 54
                        }
                      }
                    },
                    arguments: [
                      {
                        type: 'ObjectExpression',
                        properties: [
                          {
                            type: 'Property',
                            key: {
                              type: 'Identifier',
                              name: 'x',
                              start: 57,
                              end: 58,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 57
                                },
                                end: {
                                  line: 1,
                                  column: 58
                                }
                              }
                            },
                            value: {
                              type: 'Literal',
                              value: 100,
                              start: 61,
                              end: 64,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 61
                                },
                                end: {
                                  line: 1,
                                  column: 64
                                }
                              }
                            },
                            kind: 'init',
                            computed: false,
                            method: false,
                            shorthand: false,
                            start: 57,
                            end: 64,
                            loc: {
                              start: {
                                line: 1,
                                column: 57
                              },
                              end: {
                                line: 1,
                                column: 64
                              }
                            }
                          }
                        ],
                        start: 55,
                        end: 66,
                        loc: {
                          start: {
                            line: 1,
                            column: 55
                          },
                          end: {
                            line: 1,
                            column: 66
                          }
                        }
                      }
                    ],
                    start: 46,
                    end: 67,
                    loc: {
                      start: {
                        line: 1,
                        column: 46
                      },
                      end: {
                        line: 1,
                        column: 67
                      }
                    }
                  },
                  start: 40,
                  end: 67,
                  loc: {
                    start: {
                      line: 1,
                      column: 40
                    },
                    end: {
                      line: 1,
                      column: 67
                    }
                  }
                },
                start: 33,
                end: 68,
                loc: {
                  start: {
                    line: 1,
                    column: 33
                  },
                  end: {
                    line: 1,
                    column: 68
                  }
                }
              }
            ],
            start: 22,
            end: 85,
            loc: {
              start: {
                line: 1,
                column: 22
              },
              end: {
                line: 1,
                column: 85
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'af1',
            start: 15,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 85,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 85
            }
          }
        }
      ],
      start: 0,
      end: 85,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 85
        }
      }
    }
  ],
  [
    `async function f2(d, e, f) { let x = await f1(d + 10, e + 20, f + 30); return x; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'd',
              start: 18,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            },
            {
              type: 'Identifier',
              name: 'e',
              start: 21,
              end: 22,
              loc: {
                start: {
                  line: 1,
                  column: 21
                },
                end: {
                  line: 1,
                  column: 22
                }
              }
            },
            {
              type: 'Identifier',
              name: 'f',
              start: 24,
              end: 25,
              loc: {
                start: {
                  line: 1,
                  column: 24
                },
                end: {
                  line: 1,
                  column: 25
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'let',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'AwaitExpression',
                      argument: {
                        type: 'CallExpression',
                        callee: {
                          type: 'Identifier',
                          name: 'f1',
                          start: 43,
                          end: 45,
                          loc: {
                            start: {
                              line: 1,
                              column: 43
                            },
                            end: {
                              line: 1,
                              column: 45
                            }
                          }
                        },
                        arguments: [
                          {
                            type: 'BinaryExpression',
                            left: {
                              type: 'Identifier',
                              name: 'd',
                              start: 46,
                              end: 47,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 46
                                },
                                end: {
                                  line: 1,
                                  column: 47
                                }
                              }
                            },
                            right: {
                              type: 'Literal',
                              value: 10,
                              start: 50,
                              end: 52,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 50
                                },
                                end: {
                                  line: 1,
                                  column: 52
                                }
                              }
                            },
                            operator: '+',
                            start: 46,
                            end: 52,
                            loc: {
                              start: {
                                line: 1,
                                column: 46
                              },
                              end: {
                                line: 1,
                                column: 52
                              }
                            }
                          },
                          {
                            type: 'BinaryExpression',
                            left: {
                              type: 'Identifier',
                              name: 'e',
                              start: 54,
                              end: 55,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 54
                                },
                                end: {
                                  line: 1,
                                  column: 55
                                }
                              }
                            },
                            right: {
                              type: 'Literal',
                              value: 20,
                              start: 58,
                              end: 60,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 58
                                },
                                end: {
                                  line: 1,
                                  column: 60
                                }
                              }
                            },
                            operator: '+',
                            start: 54,
                            end: 60,
                            loc: {
                              start: {
                                line: 1,
                                column: 54
                              },
                              end: {
                                line: 1,
                                column: 60
                              }
                            }
                          },
                          {
                            type: 'BinaryExpression',
                            left: {
                              type: 'Identifier',
                              name: 'f',
                              start: 62,
                              end: 63,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 62
                                },
                                end: {
                                  line: 1,
                                  column: 63
                                }
                              }
                            },
                            right: {
                              type: 'Literal',
                              value: 30,
                              start: 66,
                              end: 68,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 66
                                },
                                end: {
                                  line: 1,
                                  column: 68
                                }
                              }
                            },
                            operator: '+',
                            start: 62,
                            end: 68,
                            loc: {
                              start: {
                                line: 1,
                                column: 62
                              },
                              end: {
                                line: 1,
                                column: 68
                              }
                            }
                          }
                        ],
                        start: 43,
                        end: 69,
                        loc: {
                          start: {
                            line: 1,
                            column: 43
                          },
                          end: {
                            line: 1,
                            column: 69
                          }
                        }
                      },
                      start: 37,
                      end: 69,
                      loc: {
                        start: {
                          line: 1,
                          column: 37
                        },
                        end: {
                          line: 1,
                          column: 69
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'x',
                      start: 33,
                      end: 34,
                      loc: {
                        start: {
                          line: 1,
                          column: 33
                        },
                        end: {
                          line: 1,
                          column: 34
                        }
                      }
                    },
                    start: 33,
                    end: 69,
                    loc: {
                      start: {
                        line: 1,
                        column: 33
                      },
                      end: {
                        line: 1,
                        column: 69
                      }
                    }
                  }
                ],
                start: 29,
                end: 70,
                loc: {
                  start: {
                    line: 1,
                    column: 29
                  },
                  end: {
                    line: 1,
                    column: 70
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'Identifier',
                  name: 'x',
                  start: 78,
                  end: 79,
                  loc: {
                    start: {
                      line: 1,
                      column: 78
                    },
                    end: {
                      line: 1,
                      column: 79
                    }
                  }
                },
                start: 71,
                end: 80,
                loc: {
                  start: {
                    line: 1,
                    column: 71
                  },
                  end: {
                    line: 1,
                    column: 80
                  }
                }
              }
            ],
            start: 27,
            end: 82,
            loc: {
              start: {
                line: 1,
                column: 27
              },
              end: {
                line: 1,
                column: 82
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f2',
            start: 15,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 82,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 82
            }
          }
        }
      ],
      start: 0,
      end: 82,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 82
        }
      }
    }
  ],
  [
    `(async function(x, y = 1, z, v = 2, ...a) {})`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'FunctionExpression',
            params: [
              {
                type: 'Identifier',
                name: 'x',
                start: 16,
                end: 17,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 17
                  }
                }
              },
              {
                type: 'AssignmentPattern',
                left: {
                  type: 'Identifier',
                  name: 'y',
                  start: 19,
                  end: 20,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 20
                    }
                  }
                },
                right: {
                  type: 'Literal',
                  value: 1,
                  start: 23,
                  end: 24,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 24
                    }
                  }
                },
                start: 19,
                end: 24,
                loc: {
                  start: {
                    line: 1,
                    column: 19
                  },
                  end: {
                    line: 1,
                    column: 24
                  }
                }
              },
              {
                type: 'Identifier',
                name: 'z',
                start: 26,
                end: 27,
                loc: {
                  start: {
                    line: 1,
                    column: 26
                  },
                  end: {
                    line: 1,
                    column: 27
                  }
                }
              },
              {
                type: 'AssignmentPattern',
                left: {
                  type: 'Identifier',
                  name: 'v',
                  start: 29,
                  end: 30,
                  loc: {
                    start: {
                      line: 1,
                      column: 29
                    },
                    end: {
                      line: 1,
                      column: 30
                    }
                  }
                },
                right: {
                  type: 'Literal',
                  value: 2,
                  start: 33,
                  end: 34,
                  loc: {
                    start: {
                      line: 1,
                      column: 33
                    },
                    end: {
                      line: 1,
                      column: 34
                    }
                  }
                },
                start: 29,
                end: 34,
                loc: {
                  start: {
                    line: 1,
                    column: 29
                  },
                  end: {
                    line: 1,
                    column: 34
                  }
                }
              },
              {
                type: 'RestElement',
                argument: {
                  type: 'Identifier',
                  name: 'a',
                  start: 39,
                  end: 40,
                  loc: {
                    start: {
                      line: 1,
                      column: 39
                    },
                    end: {
                      line: 1,
                      column: 40
                    }
                  }
                },
                start: 36,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 36
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              }
            ],
            body: {
              type: 'BlockStatement',
              body: [],
              start: 42,
              end: 44,
              loc: {
                start: {
                  line: 1,
                  column: 42
                },
                end: {
                  line: 1,
                  column: 44
                }
              }
            },
            async: true,
            generator: false,
            id: null,
            start: 1,
            end: 44,
            loc: {
              start: {
                line: 1,
                column: 1
              },
              end: {
                line: 1,
                column: 44
              }
            }
          },
          start: 0,
          end: 45,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 45
            }
          }
        }
      ],
      start: 0,
      end: 45,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 45
        }
      }
    }
  ],
  [
    `async function foo(y = eval("var x = 2")) { with ({}) { return x; } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'y',
                start: 19,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 19
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              },
              right: {
                type: 'CallExpression',
                callee: {
                  type: 'Identifier',
                  name: 'eval',
                  start: 23,
                  end: 27,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 27
                    }
                  }
                },
                arguments: [
                  {
                    type: 'Literal',
                    value: 'var x = 2',
                    start: 28,
                    end: 39,
                    loc: {
                      start: {
                        line: 1,
                        column: 28
                      },
                      end: {
                        line: 1,
                        column: 39
                      }
                    }
                  }
                ],
                start: 23,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 23
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              },
              start: 19,
              end: 40,
              loc: {
                start: {
                  line: 1,
                  column: 19
                },
                end: {
                  line: 1,
                  column: 40
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'WithStatement',
                object: {
                  type: 'ObjectExpression',
                  properties: [],
                  start: 50,
                  end: 52,
                  loc: {
                    start: {
                      line: 1,
                      column: 50
                    },
                    end: {
                      line: 1,
                      column: 52
                    }
                  }
                },
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ReturnStatement',
                      argument: {
                        type: 'Identifier',
                        name: 'x',
                        start: 63,
                        end: 64,
                        loc: {
                          start: {
                            line: 1,
                            column: 63
                          },
                          end: {
                            line: 1,
                            column: 64
                          }
                        }
                      },
                      start: 56,
                      end: 65,
                      loc: {
                        start: {
                          line: 1,
                          column: 56
                        },
                        end: {
                          line: 1,
                          column: 65
                        }
                      }
                    }
                  ],
                  start: 54,
                  end: 67,
                  loc: {
                    start: {
                      line: 1,
                      column: 54
                    },
                    end: {
                      line: 1,
                      column: 67
                    }
                  }
                },
                start: 44,
                end: 67,
                loc: {
                  start: {
                    line: 1,
                    column: 44
                  },
                  end: {
                    line: 1,
                    column: 67
                  }
                }
              }
            ],
            start: 42,
            end: 69,
            loc: {
              start: {
                line: 1,
                column: 42
              },
              end: {
                line: 1,
                column: 69
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'foo',
            start: 15,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 69,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 69
            }
          }
        }
      ],
      start: 0,
      end: 69,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 69
        }
      }
    }
  ],
  [
    `async function foo(x = (y = 1)) { z = 1; await undefined; w = 1; };`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'x',
                start: 19,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 19
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              },
              right: {
                type: 'AssignmentExpression',
                left: {
                  type: 'Identifier',
                  name: 'y',
                  start: 24,
                  end: 25,
                  loc: {
                    start: {
                      line: 1,
                      column: 24
                    },
                    end: {
                      line: 1,
                      column: 25
                    }
                  }
                },
                operator: '=',
                right: {
                  type: 'Literal',
                  value: 1,
                  start: 28,
                  end: 29,
                  loc: {
                    start: {
                      line: 1,
                      column: 28
                    },
                    end: {
                      line: 1,
                      column: 29
                    }
                  }
                },
                start: 24,
                end: 29,
                loc: {
                  start: {
                    line: 1,
                    column: 24
                  },
                  end: {
                    line: 1,
                    column: 29
                  }
                }
              },
              start: 19,
              end: 30,
              loc: {
                start: {
                  line: 1,
                  column: 19
                },
                end: {
                  line: 1,
                  column: 30
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'Identifier',
                    name: 'z',
                    start: 34,
                    end: 35,
                    loc: {
                      start: {
                        line: 1,
                        column: 34
                      },
                      end: {
                        line: 1,
                        column: 35
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Literal',
                    value: 1,
                    start: 38,
                    end: 39,
                    loc: {
                      start: {
                        line: 1,
                        column: 38
                      },
                      end: {
                        line: 1,
                        column: 39
                      }
                    }
                  },
                  start: 34,
                  end: 39,
                  loc: {
                    start: {
                      line: 1,
                      column: 34
                    },
                    end: {
                      line: 1,
                      column: 39
                    }
                  }
                },
                start: 34,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 34
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AwaitExpression',
                  argument: {
                    type: 'Identifier',
                    name: 'undefined',
                    start: 47,
                    end: 56,
                    loc: {
                      start: {
                        line: 1,
                        column: 47
                      },
                      end: {
                        line: 1,
                        column: 56
                      }
                    }
                  },
                  start: 41,
                  end: 56,
                  loc: {
                    start: {
                      line: 1,
                      column: 41
                    },
                    end: {
                      line: 1,
                      column: 56
                    }
                  }
                },
                start: 41,
                end: 57,
                loc: {
                  start: {
                    line: 1,
                    column: 41
                  },
                  end: {
                    line: 1,
                    column: 57
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'Identifier',
                    name: 'w',
                    start: 58,
                    end: 59,
                    loc: {
                      start: {
                        line: 1,
                        column: 58
                      },
                      end: {
                        line: 1,
                        column: 59
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Literal',
                    value: 1,
                    start: 62,
                    end: 63,
                    loc: {
                      start: {
                        line: 1,
                        column: 62
                      },
                      end: {
                        line: 1,
                        column: 63
                      }
                    }
                  },
                  start: 58,
                  end: 63,
                  loc: {
                    start: {
                      line: 1,
                      column: 58
                    },
                    end: {
                      line: 1,
                      column: 63
                    }
                  }
                },
                start: 58,
                end: 64,
                loc: {
                  start: {
                    line: 1,
                    column: 58
                  },
                  end: {
                    line: 1,
                    column: 64
                  }
                }
              }
            ],
            start: 32,
            end: 66,
            loc: {
              start: {
                line: 1,
                column: 32
              },
              end: {
                line: 1,
                column: 66
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'foo',
            start: 15,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 66,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 66
            }
          }
        },
        {
          type: 'EmptyStatement',
          start: 66,
          end: 67,
          loc: {
            start: {
              line: 1,
              column: 66
            },
            end: {
              line: 1,
              column: 67
            }
          }
        }
      ],
      start: 0,
      end: 67,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 67
        }
      }
    }
  ],
  [
    `async function foo(a, b = () => a, c = b) { function b() { return a; } var a = 2; return [b, c]; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'a',
              start: 19,
              end: 20,
              loc: {
                start: {
                  line: 1,
                  column: 19
                },
                end: {
                  line: 1,
                  column: 20
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'b',
                start: 22,
                end: 23,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 23
                  }
                }
              },
              right: {
                type: 'ArrowFunctionExpression',
                body: {
                  type: 'Identifier',
                  name: 'a',
                  start: 32,
                  end: 33,
                  loc: {
                    start: {
                      line: 1,
                      column: 32
                    },
                    end: {
                      line: 1,
                      column: 33
                    }
                  }
                },
                params: [],
                async: false,
                expression: true,
                start: 26,
                end: 33,
                loc: {
                  start: {
                    line: 1,
                    column: 26
                  },
                  end: {
                    line: 1,
                    column: 33
                  }
                }
              },
              start: 22,
              end: 33,
              loc: {
                start: {
                  line: 1,
                  column: 22
                },
                end: {
                  line: 1,
                  column: 33
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'c',
                start: 35,
                end: 36,
                loc: {
                  start: {
                    line: 1,
                    column: 35
                  },
                  end: {
                    line: 1,
                    column: 36
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'b',
                start: 39,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 39
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              },
              start: 35,
              end: 40,
              loc: {
                start: {
                  line: 1,
                  column: 35
                },
                end: {
                  line: 1,
                  column: 40
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ReturnStatement',
                      argument: {
                        type: 'Identifier',
                        name: 'a',
                        start: 66,
                        end: 67,
                        loc: {
                          start: {
                            line: 1,
                            column: 66
                          },
                          end: {
                            line: 1,
                            column: 67
                          }
                        }
                      },
                      start: 59,
                      end: 68,
                      loc: {
                        start: {
                          line: 1,
                          column: 59
                        },
                        end: {
                          line: 1,
                          column: 68
                        }
                      }
                    }
                  ],
                  start: 57,
                  end: 70,
                  loc: {
                    start: {
                      line: 1,
                      column: 57
                    },
                    end: {
                      line: 1,
                      column: 70
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'b',
                  start: 53,
                  end: 54,
                  loc: {
                    start: {
                      line: 1,
                      column: 53
                    },
                    end: {
                      line: 1,
                      column: 54
                    }
                  }
                },
                start: 44,
                end: 70,
                loc: {
                  start: {
                    line: 1,
                    column: 44
                  },
                  end: {
                    line: 1,
                    column: 70
                  }
                }
              },
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'Literal',
                      value: 2,
                      start: 79,
                      end: 80,
                      loc: {
                        start: {
                          line: 1,
                          column: 79
                        },
                        end: {
                          line: 1,
                          column: 80
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'a',
                      start: 75,
                      end: 76,
                      loc: {
                        start: {
                          line: 1,
                          column: 75
                        },
                        end: {
                          line: 1,
                          column: 76
                        }
                      }
                    },
                    start: 75,
                    end: 80,
                    loc: {
                      start: {
                        line: 1,
                        column: 75
                      },
                      end: {
                        line: 1,
                        column: 80
                      }
                    }
                  }
                ],
                start: 71,
                end: 81,
                loc: {
                  start: {
                    line: 1,
                    column: 71
                  },
                  end: {
                    line: 1,
                    column: 81
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'ArrayExpression',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'b',
                      start: 90,
                      end: 91,
                      loc: {
                        start: {
                          line: 1,
                          column: 90
                        },
                        end: {
                          line: 1,
                          column: 91
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'c',
                      start: 93,
                      end: 94,
                      loc: {
                        start: {
                          line: 1,
                          column: 93
                        },
                        end: {
                          line: 1,
                          column: 94
                        }
                      }
                    }
                  ],
                  start: 89,
                  end: 95,
                  loc: {
                    start: {
                      line: 1,
                      column: 89
                    },
                    end: {
                      line: 1,
                      column: 95
                    }
                  }
                },
                start: 82,
                end: 96,
                loc: {
                  start: {
                    line: 1,
                    column: 82
                  },
                  end: {
                    line: 1,
                    column: 96
                  }
                }
              }
            ],
            start: 42,
            end: 98,
            loc: {
              start: {
                line: 1,
                column: 42
              },
              end: {
                line: 1,
                column: 98
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'foo',
            start: 15,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 98,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 98
            }
          }
        }
      ],
      start: 0,
      end: 98,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 98
        }
      }
    }
  ],
  [
    `async function foo(a = function() { return x }) { var x; return a(); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'a',
                start: 19,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 19
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              },
              right: {
                type: 'FunctionExpression',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ReturnStatement',
                      argument: {
                        type: 'Identifier',
                        name: 'x',
                        start: 43,
                        end: 44,
                        loc: {
                          start: {
                            line: 1,
                            column: 43
                          },
                          end: {
                            line: 1,
                            column: 44
                          }
                        }
                      },
                      start: 36,
                      end: 44,
                      loc: {
                        start: {
                          line: 1,
                          column: 36
                        },
                        end: {
                          line: 1,
                          column: 44
                        }
                      }
                    }
                  ],
                  start: 34,
                  end: 46,
                  loc: {
                    start: {
                      line: 1,
                      column: 34
                    },
                    end: {
                      line: 1,
                      column: 46
                    }
                  }
                },
                async: false,
                generator: false,
                id: null,
                start: 23,
                end: 46,
                loc: {
                  start: {
                    line: 1,
                    column: 23
                  },
                  end: {
                    line: 1,
                    column: 46
                  }
                }
              },
              start: 19,
              end: 46,
              loc: {
                start: {
                  line: 1,
                  column: 19
                },
                end: {
                  line: 1,
                  column: 46
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'x',
                      start: 54,
                      end: 55,
                      loc: {
                        start: {
                          line: 1,
                          column: 54
                        },
                        end: {
                          line: 1,
                          column: 55
                        }
                      }
                    },
                    start: 54,
                    end: 55,
                    loc: {
                      start: {
                        line: 1,
                        column: 54
                      },
                      end: {
                        line: 1,
                        column: 55
                      }
                    }
                  }
                ],
                start: 50,
                end: 56,
                loc: {
                  start: {
                    line: 1,
                    column: 50
                  },
                  end: {
                    line: 1,
                    column: 56
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'a',
                    start: 64,
                    end: 65,
                    loc: {
                      start: {
                        line: 1,
                        column: 64
                      },
                      end: {
                        line: 1,
                        column: 65
                      }
                    }
                  },
                  arguments: [],
                  start: 64,
                  end: 67,
                  loc: {
                    start: {
                      line: 1,
                      column: 64
                    },
                    end: {
                      line: 1,
                      column: 67
                    }
                  }
                },
                start: 57,
                end: 68,
                loc: {
                  start: {
                    line: 1,
                    column: 57
                  },
                  end: {
                    line: 1,
                    column: 68
                  }
                }
              }
            ],
            start: 48,
            end: 70,
            loc: {
              start: {
                line: 1,
                column: 48
              },
              end: {
                line: 1,
                column: 70
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'foo',
            start: 15,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 70,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 70
            }
          }
        }
      ],
      start: 0,
      end: 70,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 70
        }
      }
    }
  ],
  [
    `async function a() { var t = !(await 1); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'UnaryExpression',
                      operator: '!',
                      argument: {
                        type: 'AwaitExpression',
                        argument: {
                          type: 'Literal',
                          value: 1,
                          start: 37,
                          end: 38,
                          loc: {
                            start: {
                              line: 1,
                              column: 37
                            },
                            end: {
                              line: 1,
                              column: 38
                            }
                          }
                        },
                        start: 31,
                        end: 38,
                        loc: {
                          start: {
                            line: 1,
                            column: 31
                          },
                          end: {
                            line: 1,
                            column: 38
                          }
                        }
                      },
                      prefix: true,
                      start: 29,
                      end: 39,
                      loc: {
                        start: {
                          line: 1,
                          column: 29
                        },
                        end: {
                          line: 1,
                          column: 39
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 't',
                      start: 25,
                      end: 26,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 26
                        }
                      }
                    },
                    start: 25,
                    end: 39,
                    loc: {
                      start: {
                        line: 1,
                        column: 25
                      },
                      end: {
                        line: 1,
                        column: 39
                      }
                    }
                  }
                ],
                start: 21,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              }
            ],
            start: 19,
            end: 42,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 42
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'a',
            start: 15,
            end: 16,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 16
              }
            }
          },
          start: 0,
          end: 42,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 42
            }
          }
        }
      ],
      start: 0,
      end: 42,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 42
        }
      }
    }
  ],
  [
    `async function a() { var t = ~await 1; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'UnaryExpression',
                      operator: '~',
                      argument: {
                        type: 'AwaitExpression',
                        argument: {
                          type: 'Literal',
                          value: 1,
                          start: 36,
                          end: 37,
                          loc: {
                            start: {
                              line: 1,
                              column: 36
                            },
                            end: {
                              line: 1,
                              column: 37
                            }
                          }
                        },
                        start: 30,
                        end: 37,
                        loc: {
                          start: {
                            line: 1,
                            column: 30
                          },
                          end: {
                            line: 1,
                            column: 37
                          }
                        }
                      },
                      prefix: true,
                      start: 29,
                      end: 37,
                      loc: {
                        start: {
                          line: 1,
                          column: 29
                        },
                        end: {
                          line: 1,
                          column: 37
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 't',
                      start: 25,
                      end: 26,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 26
                        }
                      }
                    },
                    start: 25,
                    end: 37,
                    loc: {
                      start: {
                        line: 1,
                        column: 25
                      },
                      end: {
                        line: 1,
                        column: 37
                      }
                    }
                  }
                ],
                start: 21,
                end: 38,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 38
                  }
                }
              }
            ],
            start: 19,
            end: 40,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 40
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'a',
            start: 15,
            end: 16,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 16
              }
            }
          },
          start: 0,
          end: 40,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 40
            }
          }
        }
      ],
      start: 0,
      end: 40,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 40
        }
      }
    }
  ],
  [
    `async function x({x}) { { var g = () => x; var x = 2; } return g(); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 18,
                    end: 19,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 19
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'x',
                    start: 18,
                    end: 19,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 19
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 18,
                  end: 19,
                  loc: {
                    start: {
                      line: 1,
                      column: 18
                    },
                    end: {
                      line: 1,
                      column: 19
                    }
                  }
                }
              ],
              start: 17,
              end: 20,
              loc: {
                start: {
                  line: 1,
                  column: 17
                },
                end: {
                  line: 1,
                  column: 20
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: {
                          type: 'ArrowFunctionExpression',
                          body: {
                            type: 'Identifier',
                            name: 'x',
                            start: 40,
                            end: 41,
                            loc: {
                              start: {
                                line: 1,
                                column: 40
                              },
                              end: {
                                line: 1,
                                column: 41
                              }
                            }
                          },
                          params: [],
                          async: false,
                          expression: true,
                          start: 34,
                          end: 41,
                          loc: {
                            start: {
                              line: 1,
                              column: 34
                            },
                            end: {
                              line: 1,
                              column: 41
                            }
                          }
                        },
                        id: {
                          type: 'Identifier',
                          name: 'g',
                          start: 30,
                          end: 31,
                          loc: {
                            start: {
                              line: 1,
                              column: 30
                            },
                            end: {
                              line: 1,
                              column: 31
                            }
                          }
                        },
                        start: 30,
                        end: 41,
                        loc: {
                          start: {
                            line: 1,
                            column: 30
                          },
                          end: {
                            line: 1,
                            column: 41
                          }
                        }
                      }
                    ],
                    start: 26,
                    end: 42,
                    loc: {
                      start: {
                        line: 1,
                        column: 26
                      },
                      end: {
                        line: 1,
                        column: 42
                      }
                    }
                  },
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: {
                          type: 'Literal',
                          value: 2,
                          start: 51,
                          end: 52,
                          loc: {
                            start: {
                              line: 1,
                              column: 51
                            },
                            end: {
                              line: 1,
                              column: 52
                            }
                          }
                        },
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 47,
                          end: 48,
                          loc: {
                            start: {
                              line: 1,
                              column: 47
                            },
                            end: {
                              line: 1,
                              column: 48
                            }
                          }
                        },
                        start: 47,
                        end: 52,
                        loc: {
                          start: {
                            line: 1,
                            column: 47
                          },
                          end: {
                            line: 1,
                            column: 52
                          }
                        }
                      }
                    ],
                    start: 43,
                    end: 53,
                    loc: {
                      start: {
                        line: 1,
                        column: 43
                      },
                      end: {
                        line: 1,
                        column: 53
                      }
                    }
                  }
                ],
                start: 24,
                end: 55,
                loc: {
                  start: {
                    line: 1,
                    column: 24
                  },
                  end: {
                    line: 1,
                    column: 55
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 63,
                    end: 64,
                    loc: {
                      start: {
                        line: 1,
                        column: 63
                      },
                      end: {
                        line: 1,
                        column: 64
                      }
                    }
                  },
                  arguments: [],
                  start: 63,
                  end: 66,
                  loc: {
                    start: {
                      line: 1,
                      column: 63
                    },
                    end: {
                      line: 1,
                      column: 66
                    }
                  }
                },
                start: 56,
                end: 67,
                loc: {
                  start: {
                    line: 1,
                    column: 56
                  },
                  end: {
                    line: 1,
                    column: 67
                  }
                }
              }
            ],
            start: 22,
            end: 69,
            loc: {
              start: {
                line: 1,
                column: 22
              },
              end: {
                line: 1,
                column: 69
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'x',
            start: 15,
            end: 16,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 16
              }
            }
          },
          start: 0,
          end: 69,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 69
            }
          }
        }
      ],
      start: 0,
      end: 69,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 69
        }
      }
    }
  ],
  [
    `async function f() { for await ([a] of []); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ForOfStatement',
                body: {
                  type: 'EmptyStatement',
                  start: 42,
                  end: 43,
                  loc: {
                    start: {
                      line: 1,
                      column: 42
                    },
                    end: {
                      line: 1,
                      column: 43
                    }
                  }
                },
                left: {
                  type: 'ArrayPattern',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'a',
                      start: 33,
                      end: 34,
                      loc: {
                        start: {
                          line: 1,
                          column: 33
                        },
                        end: {
                          line: 1,
                          column: 34
                        }
                      }
                    }
                  ],
                  start: 32,
                  end: 35,
                  loc: {
                    start: {
                      line: 1,
                      column: 32
                    },
                    end: {
                      line: 1,
                      column: 35
                    }
                  }
                },
                right: {
                  type: 'ArrayExpression',
                  elements: [],
                  start: 39,
                  end: 41,
                  loc: {
                    start: {
                      line: 1,
                      column: 39
                    },
                    end: {
                      line: 1,
                      column: 41
                    }
                  }
                },
                await: true,
                start: 21,
                end: 43,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 43
                  }
                }
              }
            ],
            start: 19,
            end: 45,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 45
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 15,
            end: 16,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 16
              }
            }
          },
          start: 0,
          end: 45,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 45
            }
          }
        }
      ],
      start: 0,
      end: 45,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 45
        }
      }
    }
  ],
  [
    `async function f() { 'use strict'; for await ({a} of []); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'Literal',
                  value: 'use strict',
                  start: 21,
                  end: 33,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 33
                    }
                  }
                },
                start: 21,
                end: 34,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 34
                  }
                }
              },
              {
                type: 'ForOfStatement',
                body: {
                  type: 'EmptyStatement',
                  start: 56,
                  end: 57,
                  loc: {
                    start: {
                      line: 1,
                      column: 56
                    },
                    end: {
                      line: 1,
                      column: 57
                    }
                  }
                },
                left: {
                  type: 'ObjectPattern',
                  properties: [
                    {
                      type: 'Property',
                      key: {
                        type: 'Identifier',
                        name: 'a',
                        start: 47,
                        end: 48,
                        loc: {
                          start: {
                            line: 1,
                            column: 47
                          },
                          end: {
                            line: 1,
                            column: 48
                          }
                        }
                      },
                      value: {
                        type: 'Identifier',
                        name: 'a',
                        start: 47,
                        end: 48,
                        loc: {
                          start: {
                            line: 1,
                            column: 47
                          },
                          end: {
                            line: 1,
                            column: 48
                          }
                        }
                      },
                      kind: 'init',
                      computed: false,
                      method: false,
                      shorthand: true,
                      start: 47,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 47
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    }
                  ],
                  start: 46,
                  end: 49,
                  loc: {
                    start: {
                      line: 1,
                      column: 46
                    },
                    end: {
                      line: 1,
                      column: 49
                    }
                  }
                },
                right: {
                  type: 'ArrayExpression',
                  elements: [],
                  start: 53,
                  end: 55,
                  loc: {
                    start: {
                      line: 1,
                      column: 53
                    },
                    end: {
                      line: 1,
                      column: 55
                    }
                  }
                },
                await: true,
                start: 35,
                end: 57,
                loc: {
                  start: {
                    line: 1,
                    column: 35
                  },
                  end: {
                    line: 1,
                    column: 57
                  }
                }
              }
            ],
            start: 19,
            end: 59,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 59
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 15,
            end: 16,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 16
              }
            }
          },
          start: 0,
          end: 59,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 59
            }
          }
        }
      ],
      start: 0,
      end: 59,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 59
        }
      }
    }
  ],
  [
    `async function foo() { await + 1 }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AwaitExpression',
                  argument: {
                    type: 'UnaryExpression',
                    operator: '+',
                    argument: {
                      type: 'Literal',
                      value: 1,
                      start: 31,
                      end: 32,
                      loc: {
                        start: {
                          line: 1,
                          column: 31
                        },
                        end: {
                          line: 1,
                          column: 32
                        }
                      }
                    },
                    prefix: true,
                    start: 29,
                    end: 32,
                    loc: {
                      start: {
                        line: 1,
                        column: 29
                      },
                      end: {
                        line: 1,
                        column: 32
                      }
                    }
                  },
                  start: 23,
                  end: 32,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 32
                    }
                  }
                },
                start: 23,
                end: 32,
                loc: {
                  start: {
                    line: 1,
                    column: 23
                  },
                  end: {
                    line: 1,
                    column: 32
                  }
                }
              }
            ],
            start: 21,
            end: 34,
            loc: {
              start: {
                line: 1,
                column: 21
              },
              end: {
                line: 1,
                column: 34
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'foo',
            start: 15,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 34,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 34
            }
          }
        }
      ],
      start: 0,
      end: 34,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 34
        }
      }
    }
  ],
  [
    `function f() { class x { foo(x=await){} }   }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ClassDeclaration',
                id: {
                  type: 'Identifier',
                  name: 'x',
                  start: 21,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                },
                superClass: null,
                body: {
                  type: 'ClassBody',
                  body: [
                    {
                      type: 'MethodDefinition',
                      kind: 'method',
                      static: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        name: 'foo',
                        start: 25,
                        end: 28,
                        loc: {
                          start: {
                            line: 1,
                            column: 25
                          },
                          end: {
                            line: 1,
                            column: 28
                          }
                        }
                      },
                      value: {
                        type: 'FunctionExpression',
                        params: [
                          {
                            type: 'AssignmentPattern',
                            left: {
                              type: 'Identifier',
                              name: 'x',
                              start: 29,
                              end: 30,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 29
                                },
                                end: {
                                  line: 1,
                                  column: 30
                                }
                              }
                            },
                            right: {
                              type: 'Identifier',
                              name: 'await',
                              start: 31,
                              end: 36,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 31
                                },
                                end: {
                                  line: 1,
                                  column: 36
                                }
                              }
                            },
                            start: 29,
                            end: 36,
                            loc: {
                              start: {
                                line: 1,
                                column: 29
                              },
                              end: {
                                line: 1,
                                column: 36
                              }
                            }
                          }
                        ],
                        body: {
                          type: 'BlockStatement',
                          body: [],
                          start: 37,
                          end: 39,
                          loc: {
                            start: {
                              line: 1,
                              column: 37
                            },
                            end: {
                              line: 1,
                              column: 39
                            }
                          }
                        },
                        async: false,
                        generator: false,
                        id: null,
                        start: 28,
                        end: 39,
                        loc: {
                          start: {
                            line: 1,
                            column: 28
                          },
                          end: {
                            line: 1,
                            column: 39
                          }
                        }
                      },
                      start: 25,
                      end: 39,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 39
                        }
                      }
                    }
                  ],
                  start: 23,
                  end: 41,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 41
                    }
                  }
                },
                start: 15,
                end: 41,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 41
                  }
                }
              }
            ],
            start: 13,
            end: 45,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 45
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 45,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 45
            }
          }
        }
      ],
      start: 0,
      end: 45,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 45
        }
      }
    }
  ],
  [
    `function f([foo=a,bar]){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  right: {
                    type: 'Identifier',
                    name: 'a',
                    start: 16,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  start: 12,
                  end: 17,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 17
                    }
                  }
                },
                {
                  type: 'Identifier',
                  name: 'bar',
                  start: 18,
                  end: 21,
                  loc: {
                    start: {
                      line: 1,
                      column: 18
                    },
                    end: {
                      line: 1,
                      column: 21
                    }
                  }
                }
              ],
              start: 11,
              end: 22,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 22
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 23,
            end: 25,
            loc: {
              start: {
                line: 1,
                column: 23
              },
              end: {
                line: 1,
                column: 25
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 25,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 25
            }
          }
        }
      ],
      start: 0,
      end: 25,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 25
        }
      }
    }
  ],

  [
    `function f(arg) {g(arg); arg = 42; g(arg)}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'arg',
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 19,
                      end: 22,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 22
                        }
                      }
                    }
                  ],
                  start: 17,
                  end: 23,
                  loc: {
                    start: {
                      line: 1,
                      column: 17
                    },
                    end: {
                      line: 1,
                      column: 23
                    }
                  }
                },
                start: 17,
                end: 24,
                loc: {
                  start: {
                    line: 1,
                    column: 17
                  },
                  end: {
                    line: 1,
                    column: 24
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'Identifier',
                    name: 'arg',
                    start: 25,
                    end: 28,
                    loc: {
                      start: {
                        line: 1,
                        column: 25
                      },
                      end: {
                        line: 1,
                        column: 28
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Literal',
                    value: 42,
                    start: 31,
                    end: 33,
                    loc: {
                      start: {
                        line: 1,
                        column: 31
                      },
                      end: {
                        line: 1,
                        column: 33
                      }
                    }
                  },
                  start: 25,
                  end: 33,
                  loc: {
                    start: {
                      line: 1,
                      column: 25
                    },
                    end: {
                      line: 1,
                      column: 33
                    }
                  }
                },
                start: 25,
                end: 34,
                loc: {
                  start: {
                    line: 1,
                    column: 25
                  },
                  end: {
                    line: 1,
                    column: 34
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 35,
                    end: 36,
                    loc: {
                      start: {
                        line: 1,
                        column: 35
                      },
                      end: {
                        line: 1,
                        column: 36
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 37,
                      end: 40,
                      loc: {
                        start: {
                          line: 1,
                          column: 37
                        },
                        end: {
                          line: 1,
                          column: 40
                        }
                      }
                    }
                  ],
                  start: 35,
                  end: 41,
                  loc: {
                    start: {
                      line: 1,
                      column: 35
                    },
                    end: {
                      line: 1,
                      column: 41
                    }
                  }
                },
                start: 35,
                end: 41,
                loc: {
                  start: {
                    line: 1,
                    column: 35
                  },
                  end: {
                    line: 1,
                    column: 41
                  }
                }
              }
            ],
            start: 16,
            end: 42,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 42
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 42,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 42
            }
          }
        }
      ],
      start: 0,
      end: 42,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 42
        }
      }
    }
  ],
  [
    `function f(arg, x=1) {g(arg); arguments[0] = 42; g(arg)}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'arg',
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'x',
                start: 16,
                end: 17,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 17
                  }
                }
              },
              right: {
                type: 'Literal',
                value: 1,
                start: 18,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              start: 16,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 16
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 22,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 24,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 24
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    }
                  ],
                  start: 22,
                  end: 28,
                  loc: {
                    start: {
                      line: 1,
                      column: 22
                    },
                    end: {
                      line: 1,
                      column: 28
                    }
                  }
                },
                start: 22,
                end: 29,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 29
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'Identifier',
                      name: 'arguments',
                      start: 30,
                      end: 39,
                      loc: {
                        start: {
                          line: 1,
                          column: 30
                        },
                        end: {
                          line: 1,
                          column: 39
                        }
                      }
                    },
                    computed: true,
                    property: {
                      type: 'Literal',
                      value: 0,
                      start: 40,
                      end: 41,
                      loc: {
                        start: {
                          line: 1,
                          column: 40
                        },
                        end: {
                          line: 1,
                          column: 41
                        }
                      }
                    },
                    start: 30,
                    end: 42,
                    loc: {
                      start: {
                        line: 1,
                        column: 30
                      },
                      end: {
                        line: 1,
                        column: 42
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Literal',
                    value: 42,
                    start: 45,
                    end: 47,
                    loc: {
                      start: {
                        line: 1,
                        column: 45
                      },
                      end: {
                        line: 1,
                        column: 47
                      }
                    }
                  },
                  start: 30,
                  end: 47,
                  loc: {
                    start: {
                      line: 1,
                      column: 30
                    },
                    end: {
                      line: 1,
                      column: 47
                    }
                  }
                },
                start: 30,
                end: 48,
                loc: {
                  start: {
                    line: 1,
                    column: 30
                  },
                  end: {
                    line: 1,
                    column: 48
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 49,
                    end: 50,
                    loc: {
                      start: {
                        line: 1,
                        column: 49
                      },
                      end: {
                        line: 1,
                        column: 50
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 51,
                      end: 54,
                      loc: {
                        start: {
                          line: 1,
                          column: 51
                        },
                        end: {
                          line: 1,
                          column: 54
                        }
                      }
                    }
                  ],
                  start: 49,
                  end: 55,
                  loc: {
                    start: {
                      line: 1,
                      column: 49
                    },
                    end: {
                      line: 1,
                      column: 55
                    }
                  }
                },
                start: 49,
                end: 55,
                loc: {
                  start: {
                    line: 1,
                    column: 49
                  },
                  end: {
                    line: 1,
                    column: 55
                  }
                }
              }
            ],
            start: 21,
            end: 56,
            loc: {
              start: {
                line: 1,
                column: 21
              },
              end: {
                line: 1,
                column: 56
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 56,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 56
            }
          }
        }
      ],
      start: 0,
      end: 56,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 56
        }
      }
    }
  ],
  [
    `function eval() { }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 16,
            end: 19,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 19
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'eval',
            start: 9,
            end: 13,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 13
              }
            }
          },
          start: 0,
          end: 19,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 19
            }
          }
        }
      ],
      start: 0,
      end: 19,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 19
        }
      }
    }
  ],
  [
    `function yield() { }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 17,
            end: 20,
            loc: {
              start: {
                line: 1,
                column: 17
              },
              end: {
                line: 1,
                column: 20
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'yield',
            start: 9,
            end: 14,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 14
              }
            }
          },
          start: 0,
          end: 20,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 20
            }
          }
        }
      ],
      start: 0,
      end: 20,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 20
        }
      }
    }
  ],
  [
    `function f(arg, args=arguments) {g(arg); args[0] = 42; g(arg)}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'arg',
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'args',
                start: 16,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'arguments',
                start: 21,
                end: 30,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 30
                  }
                }
              },
              start: 16,
              end: 30,
              loc: {
                start: {
                  line: 1,
                  column: 16
                },
                end: {
                  line: 1,
                  column: 30
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 33,
                    end: 34,
                    loc: {
                      start: {
                        line: 1,
                        column: 33
                      },
                      end: {
                        line: 1,
                        column: 34
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 35,
                      end: 38,
                      loc: {
                        start: {
                          line: 1,
                          column: 35
                        },
                        end: {
                          line: 1,
                          column: 38
                        }
                      }
                    }
                  ],
                  start: 33,
                  end: 39,
                  loc: {
                    start: {
                      line: 1,
                      column: 33
                    },
                    end: {
                      line: 1,
                      column: 39
                    }
                  }
                },
                start: 33,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 33
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'Identifier',
                      name: 'args',
                      start: 41,
                      end: 45,
                      loc: {
                        start: {
                          line: 1,
                          column: 41
                        },
                        end: {
                          line: 1,
                          column: 45
                        }
                      }
                    },
                    computed: true,
                    property: {
                      type: 'Literal',
                      value: 0,
                      start: 46,
                      end: 47,
                      loc: {
                        start: {
                          line: 1,
                          column: 46
                        },
                        end: {
                          line: 1,
                          column: 47
                        }
                      }
                    },
                    start: 41,
                    end: 48,
                    loc: {
                      start: {
                        line: 1,
                        column: 41
                      },
                      end: {
                        line: 1,
                        column: 48
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Literal',
                    value: 42,
                    start: 51,
                    end: 53,
                    loc: {
                      start: {
                        line: 1,
                        column: 51
                      },
                      end: {
                        line: 1,
                        column: 53
                      }
                    }
                  },
                  start: 41,
                  end: 53,
                  loc: {
                    start: {
                      line: 1,
                      column: 41
                    },
                    end: {
                      line: 1,
                      column: 53
                    }
                  }
                },
                start: 41,
                end: 54,
                loc: {
                  start: {
                    line: 1,
                    column: 41
                  },
                  end: {
                    line: 1,
                    column: 54
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 55,
                    end: 56,
                    loc: {
                      start: {
                        line: 1,
                        column: 55
                      },
                      end: {
                        line: 1,
                        column: 56
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 57,
                      end: 60,
                      loc: {
                        start: {
                          line: 1,
                          column: 57
                        },
                        end: {
                          line: 1,
                          column: 60
                        }
                      }
                    }
                  ],
                  start: 55,
                  end: 61,
                  loc: {
                    start: {
                      line: 1,
                      column: 55
                    },
                    end: {
                      line: 1,
                      column: 61
                    }
                  }
                },
                start: 55,
                end: 61,
                loc: {
                  start: {
                    line: 1,
                    column: 55
                  },
                  end: {
                    line: 1,
                    column: 61
                  }
                }
              }
            ],
            start: 32,
            end: 62,
            loc: {
              start: {
                line: 1,
                column: 32
              },
              end: {
                line: 1,
                column: 62
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 62,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 62
            }
          }
        }
      ],
      start: 0,
      end: 62,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 62
        }
      }
    }
  ],
  [
    `function w(casecase){y:j:function casecase(){}}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'casecase',
              start: 11,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'LabeledStatement',
                label: {
                  type: 'Identifier',
                  name: 'y',
                  start: 21,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                },
                body: {
                  type: 'LabeledStatement',
                  label: {
                    type: 'Identifier',
                    name: 'j',
                    start: 23,
                    end: 24,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 24
                      }
                    }
                  },
                  body: {
                    type: 'FunctionDeclaration',
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      body: [],
                      start: 44,
                      end: 46,
                      loc: {
                        start: {
                          line: 1,
                          column: 44
                        },
                        end: {
                          line: 1,
                          column: 46
                        }
                      }
                    },
                    async: false,
                    generator: false,
                    id: {
                      type: 'Identifier',
                      name: 'casecase',
                      start: 34,
                      end: 42,
                      loc: {
                        start: {
                          line: 1,
                          column: 34
                        },
                        end: {
                          line: 1,
                          column: 42
                        }
                      }
                    },
                    start: 25,
                    end: 46,
                    loc: {
                      start: {
                        line: 1,
                        column: 25
                      },
                      end: {
                        line: 1,
                        column: 46
                      }
                    }
                  },
                  start: 23,
                  end: 46,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 46
                    }
                  }
                },
                start: 21,
                end: 46,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 46
                  }
                }
              }
            ],
            start: 20,
            end: 47,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 47
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'w',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 47,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 47
            }
          }
        }
      ],
      start: 0,
      end: 47,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 47
        }
      }
    }
  ],
  [
    `function* x() { for (const [j = yield] in (x) => {}) {} }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ForInStatement',
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 53,
                  end: 55,
                  loc: {
                    start: {
                      line: 1,
                      column: 53
                    },
                    end: {
                      line: 1,
                      column: 55
                    }
                  }
                },
                left: {
                  type: 'VariableDeclaration',
                  kind: 'const',
                  declarations: [
                    {
                      type: 'VariableDeclarator',
                      init: null,
                      id: {
                        type: 'ArrayPattern',
                        elements: [
                          {
                            type: 'AssignmentPattern',
                            left: {
                              type: 'Identifier',
                              name: 'j',
                              start: 28,
                              end: 29,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 28
                                },
                                end: {
                                  line: 1,
                                  column: 29
                                }
                              }
                            },
                            right: {
                              type: 'YieldExpression',
                              argument: null,
                              delegate: false,
                              start: 32,
                              end: 37,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 32
                                },
                                end: {
                                  line: 1,
                                  column: 37
                                }
                              }
                            },
                            start: 28,
                            end: 37,
                            loc: {
                              start: {
                                line: 1,
                                column: 28
                              },
                              end: {
                                line: 1,
                                column: 37
                              }
                            }
                          }
                        ],
                        start: 27,
                        end: 38,
                        loc: {
                          start: {
                            line: 1,
                            column: 27
                          },
                          end: {
                            line: 1,
                            column: 38
                          }
                        }
                      },
                      start: 27,
                      end: 38,
                      loc: {
                        start: {
                          line: 1,
                          column: 27
                        },
                        end: {
                          line: 1,
                          column: 38
                        }
                      }
                    }
                  ],
                  start: 21,
                  end: 38,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 38
                    }
                  }
                },
                right: {
                  type: 'ArrowFunctionExpression',
                  body: {
                    type: 'BlockStatement',
                    body: [],
                    start: 49,
                    end: 51,
                    loc: {
                      start: {
                        line: 1,
                        column: 49
                      },
                      end: {
                        line: 1,
                        column: 51
                      }
                    }
                  },
                  params: [
                    {
                      type: 'Identifier',
                      name: 'x',
                      start: 43,
                      end: 44,
                      loc: {
                        start: {
                          line: 1,
                          column: 43
                        },
                        end: {
                          line: 1,
                          column: 44
                        }
                      }
                    }
                  ],
                  async: false,
                  expression: false,
                  start: 42,
                  end: 51,
                  loc: {
                    start: {
                      line: 1,
                      column: 42
                    },
                    end: {
                      line: 1,
                      column: 51
                    }
                  }
                },
                start: 16,
                end: 55,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 55
                  }
                }
              }
            ],
            start: 14,
            end: 57,
            loc: {
              start: {
                line: 1,
                column: 14
              },
              end: {
                line: 1,
                column: 57
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'x',
            start: 10,
            end: 11,
            loc: {
              start: {
                line: 1,
                column: 10
              },
              end: {
                line: 1,
                column: 11
              }
            }
          },
          start: 0,
          end: 57,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 57
            }
          }
        }
      ],
      start: 0,
      end: 57,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 57
        }
      }
    }
  ],
  [
    `"use strict"; function* g() { yield; }; f = ([...[,]] = g()) => {};`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'Literal',
            value: 'use strict',
            start: 0,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 0
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 13,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 13
            }
          }
        },
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'YieldExpression',
                  argument: null,
                  delegate: false,
                  start: 30,
                  end: 35,
                  loc: {
                    start: {
                      line: 1,
                      column: 30
                    },
                    end: {
                      line: 1,
                      column: 35
                    }
                  }
                },
                start: 30,
                end: 36,
                loc: {
                  start: {
                    line: 1,
                    column: 30
                  },
                  end: {
                    line: 1,
                    column: 36
                  }
                }
              }
            ],
            start: 28,
            end: 38,
            loc: {
              start: {
                line: 1,
                column: 28
              },
              end: {
                line: 1,
                column: 38
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'g',
            start: 24,
            end: 25,
            loc: {
              start: {
                line: 1,
                column: 24
              },
              end: {
                line: 1,
                column: 25
              }
            }
          },
          start: 14,
          end: 38,
          loc: {
            start: {
              line: 1,
              column: 14
            },
            end: {
              line: 1,
              column: 38
            }
          }
        },
        {
          type: 'EmptyStatement',
          start: 38,
          end: 39,
          loc: {
            start: {
              line: 1,
              column: 38
            },
            end: {
              line: 1,
              column: 39
            }
          }
        },
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'AssignmentExpression',
            left: {
              type: 'Identifier',
              name: 'f',
              start: 40,
              end: 41,
              loc: {
                start: {
                  line: 1,
                  column: 40
                },
                end: {
                  line: 1,
                  column: 41
                }
              }
            },
            operator: '=',
            right: {
              type: 'ArrowFunctionExpression',
              body: {
                type: 'BlockStatement',
                body: [],
                start: 64,
                end: 66,
                loc: {
                  start: {
                    line: 1,
                    column: 64
                  },
                  end: {
                    line: 1,
                    column: 66
                  }
                }
              },
              params: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'ArrayPattern',
                    elements: [
                      {
                        type: 'RestElement',
                        argument: {
                          type: 'ArrayPattern',
                          elements: [null],
                          start: 49,
                          end: 52,
                          loc: {
                            start: {
                              line: 1,
                              column: 49
                            },
                            end: {
                              line: 1,
                              column: 52
                            }
                          }
                        },
                        start: 46,
                        end: 52,
                        loc: {
                          start: {
                            line: 1,
                            column: 46
                          },
                          end: {
                            line: 1,
                            column: 52
                          }
                        }
                      }
                    ],
                    start: 45,
                    end: 53,
                    loc: {
                      start: {
                        line: 1,
                        column: 45
                      },
                      end: {
                        line: 1,
                        column: 53
                      }
                    }
                  },
                  right: {
                    type: 'CallExpression',
                    callee: {
                      type: 'Identifier',
                      name: 'g',
                      start: 56,
                      end: 57,
                      loc: {
                        start: {
                          line: 1,
                          column: 56
                        },
                        end: {
                          line: 1,
                          column: 57
                        }
                      }
                    },
                    arguments: [],
                    start: 56,
                    end: 59,
                    loc: {
                      start: {
                        line: 1,
                        column: 56
                      },
                      end: {
                        line: 1,
                        column: 59
                      }
                    }
                  },
                  start: 45,
                  end: 59,
                  loc: {
                    start: {
                      line: 1,
                      column: 45
                    },
                    end: {
                      line: 1,
                      column: 59
                    }
                  }
                }
              ],
              async: false,
              expression: false,
              start: 44,
              end: 66,
              loc: {
                start: {
                  line: 1,
                  column: 44
                },
                end: {
                  line: 1,
                  column: 66
                }
              }
            },
            start: 40,
            end: 66,
            loc: {
              start: {
                line: 1,
                column: 40
              },
              end: {
                line: 1,
                column: 66
              }
            }
          },
          start: 40,
          end: 67,
          loc: {
            start: {
              line: 1,
              column: 40
            },
            end: {
              line: 1,
              column: 67
            }
          }
        }
      ],
      start: 0,
      end: 67,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 67
        }
      }
    }
  ],
  [
    `function foo(package) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'package',
              start: 13,
              end: 20,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 20
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 22,
            end: 24,
            loc: {
              start: {
                line: 1,
                column: 22
              },
              end: {
                line: 1,
                column: 24
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'foo',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 24,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 24
            }
          }
        }
      ],
      start: 0,
      end: 24,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 24
        }
      }
    }
  ],
  [
    `function f([foo,,bar] = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  null,
                  {
                    type: 'Identifier',
                    name: 'bar',
                    start: 17,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  }
                ],
                start: 11,
                end: 21,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 21
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 24,
                end: 25,
                loc: {
                  start: {
                    line: 1,
                    column: 24
                  },
                  end: {
                    line: 1,
                    column: 25
                  }
                }
              },
              start: 11,
              end: 25,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 25
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 26,
            end: 28,
            loc: {
              start: {
                line: 1,
                column: 26
              },
              end: {
                line: 1,
                column: 28
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 28,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 28
            }
          }
        }
      ],
      start: 0,
      end: 28,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 28
        }
      }
    }
  ],
  [
    `function f(){ foo: bar: function f(){} }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'LabeledStatement',
                label: {
                  type: 'Identifier',
                  name: 'foo',
                  start: 14,
                  end: 17,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 17
                    }
                  }
                },
                body: {
                  type: 'LabeledStatement',
                  label: {
                    type: 'Identifier',
                    name: 'bar',
                    start: 19,
                    end: 22,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 22
                      }
                    }
                  },
                  body: {
                    type: 'FunctionDeclaration',
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      body: [],
                      start: 36,
                      end: 38,
                      loc: {
                        start: {
                          line: 1,
                          column: 36
                        },
                        end: {
                          line: 1,
                          column: 38
                        }
                      }
                    },
                    async: false,
                    generator: false,
                    id: {
                      type: 'Identifier',
                      name: 'f',
                      start: 33,
                      end: 34,
                      loc: {
                        start: {
                          line: 1,
                          column: 33
                        },
                        end: {
                          line: 1,
                          column: 34
                        }
                      }
                    },
                    start: 24,
                    end: 38,
                    loc: {
                      start: {
                        line: 1,
                        column: 24
                      },
                      end: {
                        line: 1,
                        column: 38
                      }
                    }
                  },
                  start: 19,
                  end: 38,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 38
                    }
                  }
                },
                start: 14,
                end: 38,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 38
                  }
                }
              }
            ],
            start: 12,
            end: 40,
            loc: {
              start: {
                line: 1,
                column: 12
              },
              end: {
                line: 1,
                column: 40
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 40,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 40
            }
          }
        }
      ],
      start: 0,
      end: 40,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 40
        }
      }
    }
  ],
  [
    `function f(){ let f; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'let',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'f',
                      start: 18,
                      end: 19,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 19
                        }
                      }
                    },
                    start: 18,
                    end: 19,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 19
                      }
                    }
                  }
                ],
                start: 14,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              }
            ],
            start: 12,
            end: 22,
            loc: {
              start: {
                line: 1,
                column: 12
              },
              end: {
                line: 1,
                column: 22
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 22,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 22
            }
          }
        }
      ],
      start: 0,
      end: 22,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 22
        }
      }
    }
  ],
  [
    `function* a( [ {  x  =  y  }  =  a ] )  { }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'ObjectPattern',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'x',
                          start: 18,
                          end: 19,
                          loc: {
                            start: {
                              line: 1,
                              column: 18
                            },
                            end: {
                              line: 1,
                              column: 19
                            }
                          }
                        },
                        value: {
                          type: 'AssignmentPattern',
                          left: {
                            type: 'Identifier',
                            name: 'x',
                            start: 18,
                            end: 19,
                            loc: {
                              start: {
                                line: 1,
                                column: 18
                              },
                              end: {
                                line: 1,
                                column: 19
                              }
                            }
                          },
                          right: {
                            type: 'Identifier',
                            name: 'y',
                            start: 24,
                            end: 25,
                            loc: {
                              start: {
                                line: 1,
                                column: 24
                              },
                              end: {
                                line: 1,
                                column: 25
                              }
                            }
                          },
                          start: 18,
                          end: 25,
                          loc: {
                            start: {
                              line: 1,
                              column: 18
                            },
                            end: {
                              line: 1,
                              column: 25
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 18,
                        end: 25,
                        loc: {
                          start: {
                            line: 1,
                            column: 18
                          },
                          end: {
                            line: 1,
                            column: 25
                          }
                        }
                      }
                    ],
                    start: 15,
                    end: 28,
                    loc: {
                      start: {
                        line: 1,
                        column: 15
                      },
                      end: {
                        line: 1,
                        column: 28
                      }
                    }
                  },
                  right: {
                    type: 'Identifier',
                    name: 'a',
                    start: 33,
                    end: 34,
                    loc: {
                      start: {
                        line: 1,
                        column: 33
                      },
                      end: {
                        line: 1,
                        column: 34
                      }
                    }
                  },
                  start: 15,
                  end: 34,
                  loc: {
                    start: {
                      line: 1,
                      column: 15
                    },
                    end: {
                      line: 1,
                      column: 34
                    }
                  }
                }
              ],
              start: 13,
              end: 36,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 36
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 40,
            end: 43,
            loc: {
              start: {
                line: 1,
                column: 40
              },
              end: {
                line: 1,
                column: 43
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'a',
            start: 10,
            end: 11,
            loc: {
              start: {
                line: 1,
                column: 10
              },
              end: {
                line: 1,
                column: 11
              }
            }
          },
          start: 0,
          end: 43,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 43
            }
          }
        }
      ],
      start: 0,
      end: 43,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 43
        }
      }
    }
  ],
  [
    `function a( a = b  ) {} n => {  "use strict"; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'a',
                start: 12,
                end: 13,
                loc: {
                  start: {
                    line: 1,
                    column: 12
                  },
                  end: {
                    line: 1,
                    column: 13
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'b',
                start: 16,
                end: 17,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 17
                  }
                }
              },
              start: 12,
              end: 17,
              loc: {
                start: {
                  line: 1,
                  column: 12
                },
                end: {
                  line: 1,
                  column: 17
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 21,
            end: 23,
            loc: {
              start: {
                line: 1,
                column: 21
              },
              end: {
                line: 1,
                column: 23
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'a',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 23,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 23
            }
          }
        },
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'ArrowFunctionExpression',
            body: {
              type: 'BlockStatement',
              body: [
                {
                  type: 'ExpressionStatement',
                  expression: {
                    type: 'Literal',
                    value: 'use strict',
                    start: 32,
                    end: 44,
                    loc: {
                      start: {
                        line: 1,
                        column: 32
                      },
                      end: {
                        line: 1,
                        column: 44
                      }
                    }
                  },
                  start: 32,
                  end: 45,
                  loc: {
                    start: {
                      line: 1,
                      column: 32
                    },
                    end: {
                      line: 1,
                      column: 45
                    }
                  }
                }
              ],
              start: 29,
              end: 47,
              loc: {
                start: {
                  line: 1,
                  column: 29
                },
                end: {
                  line: 1,
                  column: 47
                }
              }
            },
            params: [
              {
                type: 'Identifier',
                name: 'n',
                start: 24,
                end: 25,
                loc: {
                  start: {
                    line: 1,
                    column: 24
                  },
                  end: {
                    line: 1,
                    column: 25
                  }
                }
              }
            ],
            async: false,
            expression: false,
            start: 24,
            end: 47,
            loc: {
              start: {
                line: 1,
                column: 24
              },
              end: {
                line: 1,
                column: 47
              }
            }
          },
          start: 24,
          end: 47,
          loc: {
            start: {
              line: 1,
              column: 24
            },
            end: {
              line: 1,
              column: 47
            }
          }
        }
      ],
      start: 0,
      end: 47,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 47
        }
      }
    }
  ],
  [
    `function f() {var f}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'f',
                      start: 18,
                      end: 19,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 19
                        }
                      }
                    },
                    start: 18,
                    end: 19,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 19
                      }
                    }
                  }
                ],
                start: 14,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              }
            ],
            start: 13,
            end: 20,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 20
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 20,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 20
            }
          }
        }
      ],
      start: 0,
      end: 20,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 20
        }
      }
    }
  ],
  [
    `function a([ { a = x }, {} = b]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'ObjectPattern',
                  properties: [
                    {
                      type: 'Property',
                      key: {
                        type: 'Identifier',
                        name: 'a',
                        start: 15,
                        end: 16,
                        loc: {
                          start: {
                            line: 1,
                            column: 15
                          },
                          end: {
                            line: 1,
                            column: 16
                          }
                        }
                      },
                      value: {
                        type: 'AssignmentPattern',
                        left: {
                          type: 'Identifier',
                          name: 'a',
                          start: 15,
                          end: 16,
                          loc: {
                            start: {
                              line: 1,
                              column: 15
                            },
                            end: {
                              line: 1,
                              column: 16
                            }
                          }
                        },
                        right: {
                          type: 'Identifier',
                          name: 'x',
                          start: 19,
                          end: 20,
                          loc: {
                            start: {
                              line: 1,
                              column: 19
                            },
                            end: {
                              line: 1,
                              column: 20
                            }
                          }
                        },
                        start: 15,
                        end: 20,
                        loc: {
                          start: {
                            line: 1,
                            column: 15
                          },
                          end: {
                            line: 1,
                            column: 20
                          }
                        }
                      },
                      kind: 'init',
                      computed: false,
                      method: false,
                      shorthand: true,
                      start: 15,
                      end: 20,
                      loc: {
                        start: {
                          line: 1,
                          column: 15
                        },
                        end: {
                          line: 1,
                          column: 20
                        }
                      }
                    }
                  ],
                  start: 13,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 13
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                },
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'ObjectPattern',
                    properties: [],
                    start: 24,
                    end: 26,
                    loc: {
                      start: {
                        line: 1,
                        column: 24
                      },
                      end: {
                        line: 1,
                        column: 26
                      }
                    }
                  },
                  right: {
                    type: 'Identifier',
                    name: 'b',
                    start: 29,
                    end: 30,
                    loc: {
                      start: {
                        line: 1,
                        column: 29
                      },
                      end: {
                        line: 1,
                        column: 30
                      }
                    }
                  },
                  start: 24,
                  end: 30,
                  loc: {
                    start: {
                      line: 1,
                      column: 24
                    },
                    end: {
                      line: 1,
                      column: 30
                    }
                  }
                }
              ],
              start: 11,
              end: 31,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 31
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 33,
            end: 35,
            loc: {
              start: {
                line: 1,
                column: 33
              },
              end: {
                line: 1,
                column: 35
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'a',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 35,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 35
            }
          }
        }
      ],
      start: 0,
      end: 35,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 35
        }
      }
    }
  ],
  [
    `function f(){} function f(){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 12,
            end: 14,
            loc: {
              start: {
                line: 1,
                column: 12
              },
              end: {
                line: 1,
                column: 14
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 14,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 14
            }
          }
        },
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 27,
            end: 29,
            loc: {
              start: {
                line: 1,
                column: 27
              },
              end: {
                line: 1,
                column: 29
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 24,
            end: 25,
            loc: {
              start: {
                line: 1,
                column: 24
              },
              end: {
                line: 1,
                column: 25
              }
            }
          },
          start: 15,
          end: 29,
          loc: {
            start: {
              line: 1,
              column: 15
            },
            end: {
              line: 1,
              column: 29
            }
          }
        }
      ],
      start: 0,
      end: 29,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 29
        }
      }
    }
  ],
  [
    `function g() {  function f(){} function f(){} }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 28,
                  end: 30,
                  loc: {
                    start: {
                      line: 1,
                      column: 28
                    },
                    end: {
                      line: 1,
                      column: 30
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'f',
                  start: 25,
                  end: 26,
                  loc: {
                    start: {
                      line: 1,
                      column: 25
                    },
                    end: {
                      line: 1,
                      column: 26
                    }
                  }
                },
                start: 16,
                end: 30,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 30
                  }
                }
              },
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 43,
                  end: 45,
                  loc: {
                    start: {
                      line: 1,
                      column: 43
                    },
                    end: {
                      line: 1,
                      column: 45
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'f',
                  start: 40,
                  end: 41,
                  loc: {
                    start: {
                      line: 1,
                      column: 40
                    },
                    end: {
                      line: 1,
                      column: 41
                    }
                  }
                },
                start: 31,
                end: 45,
                loc: {
                  start: {
                    line: 1,
                    column: 31
                  },
                  end: {
                    line: 1,
                    column: 45
                  }
                }
              }
            ],
            start: 13,
            end: 47,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 47
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'g',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 47,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 47
            }
          }
        }
      ],
      start: 0,
      end: 47,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 47
        }
      }
    }
  ],
  [
    `function f(x) { { const x = y } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'x',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'const',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: {
                          type: 'Identifier',
                          name: 'y',
                          start: 28,
                          end: 29,
                          loc: {
                            start: {
                              line: 1,
                              column: 28
                            },
                            end: {
                              line: 1,
                              column: 29
                            }
                          }
                        },
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 24,
                          end: 25,
                          loc: {
                            start: {
                              line: 1,
                              column: 24
                            },
                            end: {
                              line: 1,
                              column: 25
                            }
                          }
                        },
                        start: 24,
                        end: 29,
                        loc: {
                          start: {
                            line: 1,
                            column: 24
                          },
                          end: {
                            line: 1,
                            column: 29
                          }
                        }
                      }
                    ],
                    start: 18,
                    end: 29,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 29
                      }
                    }
                  }
                ],
                start: 16,
                end: 31,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 31
                  }
                }
              }
            ],
            start: 14,
            end: 33,
            loc: {
              start: {
                line: 1,
                column: 14
              },
              end: {
                line: 1,
                column: 33
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 33,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 33
            }
          }
        }
      ],
      start: 0,
      end: 33,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 33
        }
      }
    }
  ],
  [
    `function f(){ foo = new.target }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'Identifier',
                    name: 'foo',
                    start: 14,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'MetaProperty',
                    meta: {
                      type: 'Identifier',
                      name: 'new',
                      start: 20,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 20
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    },
                    property: {
                      type: 'Identifier',
                      name: 'target',
                      start: 24,
                      end: 30,
                      loc: {
                        start: {
                          line: 1,
                          column: 24
                        },
                        end: {
                          line: 1,
                          column: 30
                        }
                      }
                    },
                    start: 20,
                    end: 30,
                    loc: {
                      start: {
                        line: 1,
                        column: 20
                      },
                      end: {
                        line: 1,
                        column: 30
                      }
                    }
                  },
                  start: 14,
                  end: 30,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 30
                    }
                  }
                },
                start: 14,
                end: 30,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 30
                  }
                }
              }
            ],
            start: 12,
            end: 32,
            loc: {
              start: {
                line: 1,
                column: 12
              },
              end: {
                line: 1,
                column: 32
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 32,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 32
            }
          }
        }
      ],
      start: 0,
      end: 32,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 32
        }
      }
    }
  ],
  [
    `function f(x) {{var x}}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'x',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: null,
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 20,
                          end: 21,
                          loc: {
                            start: {
                              line: 1,
                              column: 20
                            },
                            end: {
                              line: 1,
                              column: 21
                            }
                          }
                        },
                        start: 20,
                        end: 21,
                        loc: {
                          start: {
                            line: 1,
                            column: 20
                          },
                          end: {
                            line: 1,
                            column: 21
                          }
                        }
                      }
                    ],
                    start: 16,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  }
                ],
                start: 15,
                end: 22,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 22
                  }
                }
              }
            ],
            start: 14,
            end: 23,
            loc: {
              start: {
                line: 1,
                column: 14
              },
              end: {
                line: 1,
                column: 23
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 23,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 23
            }
          }
        }
      ],
      start: 0,
      end: 23,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 23
        }
      }
    }
  ],
  [
    `function f({...x}) {{var x}}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'RestElement',
                  argument: {
                    type: 'Identifier',
                    name: 'x',
                    start: 15,
                    end: 16,
                    loc: {
                      start: {
                        line: 1,
                        column: 15
                      },
                      end: {
                        line: 1,
                        column: 16
                      }
                    }
                  },
                  start: 12,
                  end: 16,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 16
                    }
                  }
                }
              ],
              start: 11,
              end: 17,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 17
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: null,
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 25,
                          end: 26,
                          loc: {
                            start: {
                              line: 1,
                              column: 25
                            },
                            end: {
                              line: 1,
                              column: 26
                            }
                          }
                        },
                        start: 25,
                        end: 26,
                        loc: {
                          start: {
                            line: 1,
                            column: 25
                          },
                          end: {
                            line: 1,
                            column: 26
                          }
                        }
                      }
                    ],
                    start: 21,
                    end: 26,
                    loc: {
                      start: {
                        line: 1,
                        column: 21
                      },
                      end: {
                        line: 1,
                        column: 26
                      }
                    }
                  }
                ],
                start: 20,
                end: 27,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 27
                  }
                }
              }
            ],
            start: 19,
            end: 28,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 28
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 28,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 28
            }
          }
        }
      ],
      start: 0,
      end: 28,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 28
        }
      }
    }
  ],
  [
    `function __func__3(){1};`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'Literal',
                  value: 1,
                  start: 21,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                },
                start: 21,
                end: 22,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 22
                  }
                }
              }
            ],
            start: 20,
            end: 23,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 23
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: '__func__3',
            start: 9,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 23,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 23
            }
          }
        },
        {
          type: 'EmptyStatement',
          start: 23,
          end: 24,
          loc: {
            start: {
              line: 1,
              column: 23
            },
            end: {
              line: 1,
              column: 24
            }
          }
        }
      ],
      start: 0,
      end: 24,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 24
        }
      }
    }
  ],
  [
    `function __func__5(){inc(d)};`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'inc',
                    start: 21,
                    end: 24,
                    loc: {
                      start: {
                        line: 1,
                        column: 21
                      },
                      end: {
                        line: 1,
                        column: 24
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'd',
                      start: 25,
                      end: 26,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 26
                        }
                      }
                    }
                  ],
                  start: 21,
                  end: 27,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 27
                    }
                  }
                },
                start: 21,
                end: 27,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 27
                  }
                }
              }
            ],
            start: 20,
            end: 28,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 28
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: '__func__5',
            start: 9,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 28,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 28
            }
          }
        },
        {
          type: 'EmptyStatement',
          start: 28,
          end: 29,
          loc: {
            start: {
              line: 1,
              column: 28
            },
            end: {
              line: 1,
              column: 29
            }
          }
        }
      ],
      start: 0,
      end: 29,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 29
        }
      }
    }
  ],
  [
    `function f([x] = []) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'Identifier',
                    name: 'x',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  }
                ],
                start: 11,
                end: 14,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 14
                  }
                }
              },
              right: {
                type: 'ArrayExpression',
                elements: [],
                start: 17,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 17
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              start: 11,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 21,
            end: 23,
            loc: {
              start: {
                line: 1,
                column: 21
              },
              end: {
                line: 1,
                column: 23
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 23,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 23
            }
          }
        }
      ],
      start: 0,
      end: 23,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 23
        }
      }
    }
  ],
  [
    `function f({ w: [x, y, z] = [4, 5, 6] } = { w: [7, undefined, ] }) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'w',
                      start: 13,
                      end: 14,
                      loc: {
                        start: {
                          line: 1,
                          column: 13
                        },
                        end: {
                          line: 1,
                          column: 14
                        }
                      }
                    },
                    value: {
                      type: 'AssignmentPattern',
                      left: {
                        type: 'ArrayPattern',
                        elements: [
                          {
                            type: 'Identifier',
                            name: 'x',
                            start: 17,
                            end: 18,
                            loc: {
                              start: {
                                line: 1,
                                column: 17
                              },
                              end: {
                                line: 1,
                                column: 18
                              }
                            }
                          },
                          {
                            type: 'Identifier',
                            name: 'y',
                            start: 20,
                            end: 21,
                            loc: {
                              start: {
                                line: 1,
                                column: 20
                              },
                              end: {
                                line: 1,
                                column: 21
                              }
                            }
                          },
                          {
                            type: 'Identifier',
                            name: 'z',
                            start: 23,
                            end: 24,
                            loc: {
                              start: {
                                line: 1,
                                column: 23
                              },
                              end: {
                                line: 1,
                                column: 24
                              }
                            }
                          }
                        ],
                        start: 16,
                        end: 25,
                        loc: {
                          start: {
                            line: 1,
                            column: 16
                          },
                          end: {
                            line: 1,
                            column: 25
                          }
                        }
                      },
                      right: {
                        type: 'ArrayExpression',
                        elements: [
                          {
                            type: 'Literal',
                            value: 4,
                            start: 29,
                            end: 30,
                            loc: {
                              start: {
                                line: 1,
                                column: 29
                              },
                              end: {
                                line: 1,
                                column: 30
                              }
                            }
                          },
                          {
                            type: 'Literal',
                            value: 5,
                            start: 32,
                            end: 33,
                            loc: {
                              start: {
                                line: 1,
                                column: 32
                              },
                              end: {
                                line: 1,
                                column: 33
                              }
                            }
                          },
                          {
                            type: 'Literal',
                            value: 6,
                            start: 35,
                            end: 36,
                            loc: {
                              start: {
                                line: 1,
                                column: 35
                              },
                              end: {
                                line: 1,
                                column: 36
                              }
                            }
                          }
                        ],
                        start: 28,
                        end: 37,
                        loc: {
                          start: {
                            line: 1,
                            column: 28
                          },
                          end: {
                            line: 1,
                            column: 37
                          }
                        }
                      },
                      start: 16,
                      end: 37,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 37
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 13,
                    end: 37,
                    loc: {
                      start: {
                        line: 1,
                        column: 13
                      },
                      end: {
                        line: 1,
                        column: 37
                      }
                    }
                  }
                ],
                start: 11,
                end: 39,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 39
                  }
                }
              },
              right: {
                type: 'ObjectExpression',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'w',
                      start: 44,
                      end: 45,
                      loc: {
                        start: {
                          line: 1,
                          column: 44
                        },
                        end: {
                          line: 1,
                          column: 45
                        }
                      }
                    },
                    value: {
                      type: 'ArrayExpression',
                      elements: [
                        {
                          type: 'Literal',
                          value: 7,
                          start: 48,
                          end: 49,
                          loc: {
                            start: {
                              line: 1,
                              column: 48
                            },
                            end: {
                              line: 1,
                              column: 49
                            }
                          }
                        },
                        {
                          type: 'Identifier',
                          name: 'undefined',
                          start: 51,
                          end: 60,
                          loc: {
                            start: {
                              line: 1,
                              column: 51
                            },
                            end: {
                              line: 1,
                              column: 60
                            }
                          }
                        }
                      ],
                      start: 47,
                      end: 63,
                      loc: {
                        start: {
                          line: 1,
                          column: 47
                        },
                        end: {
                          line: 1,
                          column: 63
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 44,
                    end: 63,
                    loc: {
                      start: {
                        line: 1,
                        column: 44
                      },
                      end: {
                        line: 1,
                        column: 63
                      }
                    }
                  }
                ],
                start: 42,
                end: 65,
                loc: {
                  start: {
                    line: 1,
                    column: 42
                  },
                  end: {
                    line: 1,
                    column: 65
                  }
                }
              },
              start: 11,
              end: 65,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 65
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 67,
            end: 69,
            loc: {
              start: {
                line: 1,
                column: 67
              },
              end: {
                line: 1,
                column: 69
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 69,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 69
            }
          }
        }
      ],
      start: 0,
      end: 69,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 69
        }
      }
    }
  ],
  [
    `var m = function (a = 1, b, c) {};`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {
              type: 'VariableDeclarator',
              init: {
                type: 'FunctionExpression',
                params: [
                  {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'a',
                      start: 18,
                      end: 19,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 19
                        }
                      }
                    },
                    right: {
                      type: 'Literal',
                      value: 1,
                      start: 22,
                      end: 23,
                      loc: {
                        start: {
                          line: 1,
                          column: 22
                        },
                        end: {
                          line: 1,
                          column: 23
                        }
                      }
                    },
                    start: 18,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  },
                  {
                    type: 'Identifier',
                    name: 'b',
                    start: 25,
                    end: 26,
                    loc: {
                      start: {
                        line: 1,
                        column: 25
                      },
                      end: {
                        line: 1,
                        column: 26
                      }
                    }
                  },
                  {
                    type: 'Identifier',
                    name: 'c',
                    start: 28,
                    end: 29,
                    loc: {
                      start: {
                        line: 1,
                        column: 28
                      },
                      end: {
                        line: 1,
                        column: 29
                      }
                    }
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 31,
                  end: 33,
                  loc: {
                    start: {
                      line: 1,
                      column: 31
                    },
                    end: {
                      line: 1,
                      column: 33
                    }
                  }
                },
                async: false,
                generator: false,
                id: null,
                start: 8,
                end: 33,
                loc: {
                  start: {
                    line: 1,
                    column: 8
                  },
                  end: {
                    line: 1,
                    column: 33
                  }
                }
              },
              id: {
                type: 'Identifier',
                name: 'm',
                start: 4,
                end: 5,
                loc: {
                  start: {
                    line: 1,
                    column: 4
                  },
                  end: {
                    line: 1,
                    column: 5
                  }
                }
              },
              start: 4,
              end: 33,
              loc: {
                start: {
                  line: 1,
                  column: 4
                },
                end: {
                  line: 1,
                  column: 33
                }
              }
            }
          ],
          start: 0,
          end: 34,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 34
            }
          }
        }
      ],
      start: 0,
      end: 34,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 34
        }
      }
    }
  ],
  [
    `function f([{ x, y, z } = { x: 44, y: 55, z: 66 }]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'ObjectPattern',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'x',
                          start: 14,
                          end: 15,
                          loc: {
                            start: {
                              line: 1,
                              column: 14
                            },
                            end: {
                              line: 1,
                              column: 15
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'x',
                          start: 14,
                          end: 15,
                          loc: {
                            start: {
                              line: 1,
                              column: 14
                            },
                            end: {
                              line: 1,
                              column: 15
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 14,
                        end: 15,
                        loc: {
                          start: {
                            line: 1,
                            column: 14
                          },
                          end: {
                            line: 1,
                            column: 15
                          }
                        }
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'y',
                          start: 17,
                          end: 18,
                          loc: {
                            start: {
                              line: 1,
                              column: 17
                            },
                            end: {
                              line: 1,
                              column: 18
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'y',
                          start: 17,
                          end: 18,
                          loc: {
                            start: {
                              line: 1,
                              column: 17
                            },
                            end: {
                              line: 1,
                              column: 18
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 17,
                        end: 18,
                        loc: {
                          start: {
                            line: 1,
                            column: 17
                          },
                          end: {
                            line: 1,
                            column: 18
                          }
                        }
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'z',
                          start: 20,
                          end: 21,
                          loc: {
                            start: {
                              line: 1,
                              column: 20
                            },
                            end: {
                              line: 1,
                              column: 21
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'z',
                          start: 20,
                          end: 21,
                          loc: {
                            start: {
                              line: 1,
                              column: 20
                            },
                            end: {
                              line: 1,
                              column: 21
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 20,
                        end: 21,
                        loc: {
                          start: {
                            line: 1,
                            column: 20
                          },
                          end: {
                            line: 1,
                            column: 21
                          }
                        }
                      }
                    ],
                    start: 12,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  },
                  right: {
                    type: 'ObjectExpression',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'x',
                          start: 28,
                          end: 29,
                          loc: {
                            start: {
                              line: 1,
                              column: 28
                            },
                            end: {
                              line: 1,
                              column: 29
                            }
                          }
                        },
                        value: {
                          type: 'Literal',
                          value: 44,
                          start: 31,
                          end: 33,
                          loc: {
                            start: {
                              line: 1,
                              column: 31
                            },
                            end: {
                              line: 1,
                              column: 33
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 28,
                        end: 33,
                        loc: {
                          start: {
                            line: 1,
                            column: 28
                          },
                          end: {
                            line: 1,
                            column: 33
                          }
                        }
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'y',
                          start: 35,
                          end: 36,
                          loc: {
                            start: {
                              line: 1,
                              column: 35
                            },
                            end: {
                              line: 1,
                              column: 36
                            }
                          }
                        },
                        value: {
                          type: 'Literal',
                          value: 55,
                          start: 38,
                          end: 40,
                          loc: {
                            start: {
                              line: 1,
                              column: 38
                            },
                            end: {
                              line: 1,
                              column: 40
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 35,
                        end: 40,
                        loc: {
                          start: {
                            line: 1,
                            column: 35
                          },
                          end: {
                            line: 1,
                            column: 40
                          }
                        }
                      },
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'z',
                          start: 42,
                          end: 43,
                          loc: {
                            start: {
                              line: 1,
                              column: 42
                            },
                            end: {
                              line: 1,
                              column: 43
                            }
                          }
                        },
                        value: {
                          type: 'Literal',
                          value: 66,
                          start: 45,
                          end: 47,
                          loc: {
                            start: {
                              line: 1,
                              column: 45
                            },
                            end: {
                              line: 1,
                              column: 47
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 42,
                        end: 47,
                        loc: {
                          start: {
                            line: 1,
                            column: 42
                          },
                          end: {
                            line: 1,
                            column: 47
                          }
                        }
                      }
                    ],
                    start: 26,
                    end: 49,
                    loc: {
                      start: {
                        line: 1,
                        column: 26
                      },
                      end: {
                        line: 1,
                        column: 49
                      }
                    }
                  },
                  start: 12,
                  end: 49,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 49
                    }
                  }
                }
              ],
              start: 11,
              end: 50,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 50
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 52,
            end: 54,
            loc: {
              start: {
                line: 1,
                column: 52
              },
              end: {
                line: 1,
                column: 54
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 54,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 54
            }
          }
        }
      ],
      start: 0,
      end: 54,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 54
        }
      }
    }
  ],
  [
    `function arguments() { function foo() { "use strict"; } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ExpressionStatement',
                      expression: {
                        type: 'Literal',
                        value: 'use strict',
                        start: 40,
                        end: 52,
                        loc: {
                          start: {
                            line: 1,
                            column: 40
                          },
                          end: {
                            line: 1,
                            column: 52
                          }
                        }
                      },
                      start: 40,
                      end: 53,
                      loc: {
                        start: {
                          line: 1,
                          column: 40
                        },
                        end: {
                          line: 1,
                          column: 53
                        }
                      }
                    }
                  ],
                  start: 38,
                  end: 55,
                  loc: {
                    start: {
                      line: 1,
                      column: 38
                    },
                    end: {
                      line: 1,
                      column: 55
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'foo',
                  start: 32,
                  end: 35,
                  loc: {
                    start: {
                      line: 1,
                      column: 32
                    },
                    end: {
                      line: 1,
                      column: 35
                    }
                  }
                },
                start: 23,
                end: 55,
                loc: {
                  start: {
                    line: 1,
                    column: 23
                  },
                  end: {
                    line: 1,
                    column: 55
                  }
                }
              }
            ],
            start: 21,
            end: 57,
            loc: {
              start: {
                line: 1,
                column: 21
              },
              end: {
                line: 1,
                column: 57
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'arguments',
            start: 9,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 57,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 57
            }
          }
        }
      ],
      start: 0,
      end: 57,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 57
        }
      }
    }
  ],
  [
    `function eval() { function inner() { "use strict" } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ExpressionStatement',
                      expression: {
                        type: 'Literal',
                        value: 'use strict',
                        start: 37,
                        end: 49,
                        loc: {
                          start: {
                            line: 1,
                            column: 37
                          },
                          end: {
                            line: 1,
                            column: 49
                          }
                        }
                      },
                      start: 37,
                      end: 49,
                      loc: {
                        start: {
                          line: 1,
                          column: 37
                        },
                        end: {
                          line: 1,
                          column: 49
                        }
                      }
                    }
                  ],
                  start: 35,
                  end: 51,
                  loc: {
                    start: {
                      line: 1,
                      column: 35
                    },
                    end: {
                      line: 1,
                      column: 51
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'inner',
                  start: 27,
                  end: 32,
                  loc: {
                    start: {
                      line: 1,
                      column: 27
                    },
                    end: {
                      line: 1,
                      column: 32
                    }
                  }
                },
                start: 18,
                end: 51,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 51
                  }
                }
              }
            ],
            start: 16,
            end: 53,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 53
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'eval',
            start: 9,
            end: 13,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 13
              }
            }
          },
          start: 0,
          end: 53,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 53
            }
          }
        }
      ],
      start: 0,
      end: 53,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 53
        }
      }
    }
  ],
  [
    `"use strict"; (function(){}).hasOwnProperty("icefapper");`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'Literal',
            value: 'use strict',
            start: 0,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 0
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 13,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 13
            }
          }
        },
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'CallExpression',
            callee: {
              type: 'MemberExpression',
              object: {
                type: 'FunctionExpression',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 25,
                  end: 27,
                  loc: {
                    start: {
                      line: 1,
                      column: 25
                    },
                    end: {
                      line: 1,
                      column: 27
                    }
                  }
                },
                async: false,
                generator: false,
                id: null,
                start: 15,
                end: 27,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 27
                  }
                }
              },
              computed: false,
              property: {
                type: 'Identifier',
                name: 'hasOwnProperty',
                start: 29,
                end: 43,
                loc: {
                  start: {
                    line: 1,
                    column: 29
                  },
                  end: {
                    line: 1,
                    column: 43
                  }
                }
              },
              start: 14,
              end: 43,
              loc: {
                start: {
                  line: 1,
                  column: 14
                },
                end: {
                  line: 1,
                  column: 43
                }
              }
            },
            arguments: [
              {
                type: 'Literal',
                value: 'icefapper',
                start: 44,
                end: 55,
                loc: {
                  start: {
                    line: 1,
                    column: 44
                  },
                  end: {
                    line: 1,
                    column: 55
                  }
                }
              }
            ],
            start: 14,
            end: 56,
            loc: {
              start: {
                line: 1,
                column: 14
              },
              end: {
                line: 1,
                column: 56
              }
            }
          },
          start: 14,
          end: 57,
          loc: {
            start: {
              line: 1,
              column: 14
            },
            end: {
              line: 1,
              column: 57
            }
          }
        }
      ],
      start: 0,
      end: 57,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 57
        }
      }
    }
  ],
  [
    `function f() { var await = 10; var o = { await }; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'Literal',
                      value: 10,
                      start: 27,
                      end: 29,
                      loc: {
                        start: {
                          line: 1,
                          column: 27
                        },
                        end: {
                          line: 1,
                          column: 29
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'await',
                      start: 19,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    },
                    start: 19,
                    end: 29,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 29
                      }
                    }
                  }
                ],
                start: 15,
                end: 30,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 30
                  }
                }
              },
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'ObjectExpression',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'await',
                            start: 41,
                            end: 46,
                            loc: {
                              start: {
                                line: 1,
                                column: 41
                              },
                              end: {
                                line: 1,
                                column: 46
                              }
                            }
                          },
                          value: {
                            type: 'Identifier',
                            name: 'await',
                            start: 41,
                            end: 46,
                            loc: {
                              start: {
                                line: 1,
                                column: 41
                              },
                              end: {
                                line: 1,
                                column: 46
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: true,
                          start: 41,
                          end: 46,
                          loc: {
                            start: {
                              line: 1,
                              column: 41
                            },
                            end: {
                              line: 1,
                              column: 46
                            }
                          }
                        }
                      ],
                      start: 39,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 39
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'o',
                      start: 35,
                      end: 36,
                      loc: {
                        start: {
                          line: 1,
                          column: 35
                        },
                        end: {
                          line: 1,
                          column: 36
                        }
                      }
                    },
                    start: 35,
                    end: 48,
                    loc: {
                      start: {
                        line: 1,
                        column: 35
                      },
                      end: {
                        line: 1,
                        column: 48
                      }
                    }
                  }
                ],
                start: 31,
                end: 49,
                loc: {
                  start: {
                    line: 1,
                    column: 31
                  },
                  end: {
                    line: 1,
                    column: 49
                  }
                }
              }
            ],
            start: 13,
            end: 51,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 51
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 51,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 51
            }
          }
        }
      ],
      start: 0,
      end: 51,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 51
        }
      }
    }
  ],
  [
    `function x(...{ a }){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'RestElement',
              argument: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'a',
                      start: 16,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'a',
                      start: 16,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: true,
                    start: 16,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  }
                ],
                start: 14,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              start: 11,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 20,
            end: 22,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 22
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'x',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 22,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 22
            }
          }
        }
      ],
      start: 0,
      end: 22,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 22
        }
      }
    }
  ],
  [
    `function f([foo=a,bar]){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  right: {
                    type: 'Identifier',
                    name: 'a',
                    start: 16,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  start: 12,
                  end: 17,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 17
                    }
                  }
                },
                {
                  type: 'Identifier',
                  name: 'bar',
                  start: 18,
                  end: 21,
                  loc: {
                    start: {
                      line: 1,
                      column: 18
                    },
                    end: {
                      line: 1,
                      column: 21
                    }
                  }
                }
              ],
              start: 11,
              end: 22,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 22
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 23,
            end: 25,
            loc: {
              start: {
                line: 1,
                column: 23
              },
              end: {
                line: 1,
                column: 25
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 25,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 25
            }
          }
        }
      ],
      start: 0,
      end: 25,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 25
        }
      }
    }
  ],
  [
    `function f(x = y, [foo] = z){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'x',
                start: 11,
                end: 12,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 12
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'y',
                start: 15,
                end: 16,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 16
                  }
                }
              },
              start: 11,
              end: 16,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 16
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'Identifier',
                    name: 'foo',
                    start: 19,
                    end: 22,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 22
                      }
                    }
                  }
                ],
                start: 18,
                end: 23,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 23
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'z',
                start: 26,
                end: 27,
                loc: {
                  start: {
                    line: 1,
                    column: 26
                  },
                  end: {
                    line: 1,
                    column: 27
                  }
                }
              },
              start: 18,
              end: 27,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 27
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 28,
            end: 30,
            loc: {
              start: {
                line: 1,
                column: 28
              },
              end: {
                line: 1,
                column: 30
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 30,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 30
            }
          }
        }
      ],
      start: 0,
      end: 30,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 30
        }
      }
    }
  ],
  [
    `function f([,,foo] = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  null,
                  null,
                  {
                    type: 'Identifier',
                    name: 'foo',
                    start: 14,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  }
                ],
                start: 11,
                end: 18,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 18
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 21,
                end: 22,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 22
                  }
                }
              },
              start: 11,
              end: 22,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 22
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 23,
            end: 25,
            loc: {
              start: {
                line: 1,
                column: 23
              },
              end: {
                line: 1,
                column: 25
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 25,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 25
            }
          }
        }
      ],
      start: 0,
      end: 25,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 25
        }
      }
    }
  ],
  [
    `function fn4([], [[]], [[[[[[[[[x]]]]]]]]]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [],
              start: 13,
              end: 15,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 15
                }
              }
            },
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'ArrayPattern',
                  elements: [],
                  start: 18,
                  end: 20,
                  loc: {
                    start: {
                      line: 1,
                      column: 18
                    },
                    end: {
                      line: 1,
                      column: 20
                    }
                  }
                }
              ],
              start: 17,
              end: 21,
              loc: {
                start: {
                  line: 1,
                  column: 17
                },
                end: {
                  line: 1,
                  column: 21
                }
              }
            },
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'ArrayPattern',
                  elements: [
                    {
                      type: 'ArrayPattern',
                      elements: [
                        {
                          type: 'ArrayPattern',
                          elements: [
                            {
                              type: 'ArrayPattern',
                              elements: [
                                {
                                  type: 'ArrayPattern',
                                  elements: [
                                    {
                                      type: 'ArrayPattern',
                                      elements: [
                                        {
                                          type: 'ArrayPattern',
                                          elements: [
                                            {
                                              type: 'ArrayPattern',
                                              elements: [
                                                {
                                                  type: 'Identifier',
                                                  name: 'x',
                                                  start: 32,
                                                  end: 33,
                                                  loc: {
                                                    start: {
                                                      line: 1,
                                                      column: 32
                                                    },
                                                    end: {
                                                      line: 1,
                                                      column: 33
                                                    }
                                                  }
                                                }
                                              ],
                                              start: 31,
                                              end: 34,
                                              loc: {
                                                start: {
                                                  line: 1,
                                                  column: 31
                                                },
                                                end: {
                                                  line: 1,
                                                  column: 34
                                                }
                                              }
                                            }
                                          ],
                                          start: 30,
                                          end: 35,
                                          loc: {
                                            start: {
                                              line: 1,
                                              column: 30
                                            },
                                            end: {
                                              line: 1,
                                              column: 35
                                            }
                                          }
                                        }
                                      ],
                                      start: 29,
                                      end: 36,
                                      loc: {
                                        start: {
                                          line: 1,
                                          column: 29
                                        },
                                        end: {
                                          line: 1,
                                          column: 36
                                        }
                                      }
                                    }
                                  ],
                                  start: 28,
                                  end: 37,
                                  loc: {
                                    start: {
                                      line: 1,
                                      column: 28
                                    },
                                    end: {
                                      line: 1,
                                      column: 37
                                    }
                                  }
                                }
                              ],
                              start: 27,
                              end: 38,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 27
                                },
                                end: {
                                  line: 1,
                                  column: 38
                                }
                              }
                            }
                          ],
                          start: 26,
                          end: 39,
                          loc: {
                            start: {
                              line: 1,
                              column: 26
                            },
                            end: {
                              line: 1,
                              column: 39
                            }
                          }
                        }
                      ],
                      start: 25,
                      end: 40,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 40
                        }
                      }
                    }
                  ],
                  start: 24,
                  end: 41,
                  loc: {
                    start: {
                      line: 1,
                      column: 24
                    },
                    end: {
                      line: 1,
                      column: 41
                    }
                  }
                }
              ],
              start: 23,
              end: 42,
              loc: {
                start: {
                  line: 1,
                  column: 23
                },
                end: {
                  line: 1,
                  column: 42
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 44,
            end: 46,
            loc: {
              start: {
                line: 1,
                column: 44
              },
              end: {
                line: 1,
                column: 46
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn4',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 46,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 46
            }
          }
        }
      ],
      start: 0,
      end: 46,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 46
        }
      }
    }
  ],
  [
    `function fn1({a: {p: q}, b: {r}, c: {s = 0}, d: {}}) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'a',
                    start: 14,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  value: {
                    type: 'ObjectPattern',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'p',
                          start: 18,
                          end: 19,
                          loc: {
                            start: {
                              line: 1,
                              column: 18
                            },
                            end: {
                              line: 1,
                              column: 19
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'q',
                          start: 21,
                          end: 22,
                          loc: {
                            start: {
                              line: 1,
                              column: 21
                            },
                            end: {
                              line: 1,
                              column: 22
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 18,
                        end: 22,
                        loc: {
                          start: {
                            line: 1,
                            column: 18
                          },
                          end: {
                            line: 1,
                            column: 22
                          }
                        }
                      }
                    ],
                    start: 17,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 14,
                  end: 23,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 23
                    }
                  }
                },
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'b',
                    start: 25,
                    end: 26,
                    loc: {
                      start: {
                        line: 1,
                        column: 25
                      },
                      end: {
                        line: 1,
                        column: 26
                      }
                    }
                  },
                  value: {
                    type: 'ObjectPattern',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'r',
                          start: 29,
                          end: 30,
                          loc: {
                            start: {
                              line: 1,
                              column: 29
                            },
                            end: {
                              line: 1,
                              column: 30
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'r',
                          start: 29,
                          end: 30,
                          loc: {
                            start: {
                              line: 1,
                              column: 29
                            },
                            end: {
                              line: 1,
                              column: 30
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 29,
                        end: 30,
                        loc: {
                          start: {
                            line: 1,
                            column: 29
                          },
                          end: {
                            line: 1,
                            column: 30
                          }
                        }
                      }
                    ],
                    start: 28,
                    end: 31,
                    loc: {
                      start: {
                        line: 1,
                        column: 28
                      },
                      end: {
                        line: 1,
                        column: 31
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 25,
                  end: 31,
                  loc: {
                    start: {
                      line: 1,
                      column: 25
                    },
                    end: {
                      line: 1,
                      column: 31
                    }
                  }
                },
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'c',
                    start: 33,
                    end: 34,
                    loc: {
                      start: {
                        line: 1,
                        column: 33
                      },
                      end: {
                        line: 1,
                        column: 34
                      }
                    }
                  },
                  value: {
                    type: 'ObjectPattern',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 's',
                          start: 37,
                          end: 38,
                          loc: {
                            start: {
                              line: 1,
                              column: 37
                            },
                            end: {
                              line: 1,
                              column: 38
                            }
                          }
                        },
                        value: {
                          type: 'AssignmentPattern',
                          left: {
                            type: 'Identifier',
                            name: 's',
                            start: 37,
                            end: 38,
                            loc: {
                              start: {
                                line: 1,
                                column: 37
                              },
                              end: {
                                line: 1,
                                column: 38
                              }
                            }
                          },
                          right: {
                            type: 'Literal',
                            value: 0,
                            start: 41,
                            end: 42,
                            loc: {
                              start: {
                                line: 1,
                                column: 41
                              },
                              end: {
                                line: 1,
                                column: 42
                              }
                            }
                          },
                          start: 37,
                          end: 42,
                          loc: {
                            start: {
                              line: 1,
                              column: 37
                            },
                            end: {
                              line: 1,
                              column: 42
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 37,
                        end: 42,
                        loc: {
                          start: {
                            line: 1,
                            column: 37
                          },
                          end: {
                            line: 1,
                            column: 42
                          }
                        }
                      }
                    ],
                    start: 36,
                    end: 43,
                    loc: {
                      start: {
                        line: 1,
                        column: 36
                      },
                      end: {
                        line: 1,
                        column: 43
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 33,
                  end: 43,
                  loc: {
                    start: {
                      line: 1,
                      column: 33
                    },
                    end: {
                      line: 1,
                      column: 43
                    }
                  }
                },
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'd',
                    start: 45,
                    end: 46,
                    loc: {
                      start: {
                        line: 1,
                        column: 45
                      },
                      end: {
                        line: 1,
                        column: 46
                      }
                    }
                  },
                  value: {
                    type: 'ObjectPattern',
                    properties: [],
                    start: 48,
                    end: 50,
                    loc: {
                      start: {
                        line: 1,
                        column: 48
                      },
                      end: {
                        line: 1,
                        column: 50
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 45,
                  end: 50,
                  loc: {
                    start: {
                      line: 1,
                      column: 45
                    },
                    end: {
                      line: 1,
                      column: 50
                    }
                  }
                }
              ],
              start: 13,
              end: 51,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 51
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 53,
            end: 55,
            loc: {
              start: {
                line: 1,
                column: 53
              },
              end: {
                line: 1,
                column: 55
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn1',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 55,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 55
            }
          }
        }
      ],
      start: 0,
      end: 55,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 55
        }
      }
    }
  ],
  [
    `function f([foo,,bar]){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'Identifier',
                  name: 'foo',
                  start: 12,
                  end: 15,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 15
                    }
                  }
                },
                null,
                {
                  type: 'Identifier',
                  name: 'bar',
                  start: 17,
                  end: 20,
                  loc: {
                    start: {
                      line: 1,
                      column: 17
                    },
                    end: {
                      line: 1,
                      column: 20
                    }
                  }
                }
              ],
              start: 11,
              end: 21,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 21
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 22,
            end: 24,
            loc: {
              start: {
                line: 1,
                column: 22
              },
              end: {
                line: 1,
                column: 24
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 24,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 24
            }
          }
        }
      ],
      start: 0,
      end: 24,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 24
        }
      }
    }
  ],
  [
    `function f() {function* foo(await) { return await; }}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [
                  {
                    type: 'Identifier',
                    name: 'await',
                    start: 28,
                    end: 33,
                    loc: {
                      start: {
                        line: 1,
                        column: 28
                      },
                      end: {
                        line: 1,
                        column: 33
                      }
                    }
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ReturnStatement',
                      argument: {
                        type: 'Identifier',
                        name: 'await',
                        start: 44,
                        end: 49,
                        loc: {
                          start: {
                            line: 1,
                            column: 44
                          },
                          end: {
                            line: 1,
                            column: 49
                          }
                        }
                      },
                      start: 37,
                      end: 50,
                      loc: {
                        start: {
                          line: 1,
                          column: 37
                        },
                        end: {
                          line: 1,
                          column: 50
                        }
                      }
                    }
                  ],
                  start: 35,
                  end: 52,
                  loc: {
                    start: {
                      line: 1,
                      column: 35
                    },
                    end: {
                      line: 1,
                      column: 52
                    }
                  }
                },
                async: false,
                generator: true,
                id: {
                  type: 'Identifier',
                  name: 'foo',
                  start: 24,
                  end: 27,
                  loc: {
                    start: {
                      line: 1,
                      column: 24
                    },
                    end: {
                      line: 1,
                      column: 27
                    }
                  }
                },
                start: 14,
                end: 52,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 52
                  }
                }
              }
            ],
            start: 13,
            end: 53,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 53
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 53,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 53
            }
          }
        }
      ],
      start: 0,
      end: 53,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 53
        }
      }
    }
  ],
  [
    `function f(arg=1) {g(arg); arg = 42; g(arg)}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'arg',
                start: 11,
                end: 14,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 14
                  }
                }
              },
              right: {
                type: 'Literal',
                value: 1,
                start: 15,
                end: 16,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 16
                  }
                }
              },
              start: 11,
              end: 16,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 16
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 19,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 21,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 21
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    }
                  ],
                  start: 19,
                  end: 25,
                  loc: {
                    start: {
                      line: 1,
                      column: 19
                    },
                    end: {
                      line: 1,
                      column: 25
                    }
                  }
                },
                start: 19,
                end: 26,
                loc: {
                  start: {
                    line: 1,
                    column: 19
                  },
                  end: {
                    line: 1,
                    column: 26
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'Identifier',
                    name: 'arg',
                    start: 27,
                    end: 30,
                    loc: {
                      start: {
                        line: 1,
                        column: 27
                      },
                      end: {
                        line: 1,
                        column: 30
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Literal',
                    value: 42,
                    start: 33,
                    end: 35,
                    loc: {
                      start: {
                        line: 1,
                        column: 33
                      },
                      end: {
                        line: 1,
                        column: 35
                      }
                    }
                  },
                  start: 27,
                  end: 35,
                  loc: {
                    start: {
                      line: 1,
                      column: 27
                    },
                    end: {
                      line: 1,
                      column: 35
                    }
                  }
                },
                start: 27,
                end: 36,
                loc: {
                  start: {
                    line: 1,
                    column: 27
                  },
                  end: {
                    line: 1,
                    column: 36
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 37,
                    end: 38,
                    loc: {
                      start: {
                        line: 1,
                        column: 37
                      },
                      end: {
                        line: 1,
                        column: 38
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 39,
                      end: 42,
                      loc: {
                        start: {
                          line: 1,
                          column: 39
                        },
                        end: {
                          line: 1,
                          column: 42
                        }
                      }
                    }
                  ],
                  start: 37,
                  end: 43,
                  loc: {
                    start: {
                      line: 1,
                      column: 37
                    },
                    end: {
                      line: 1,
                      column: 43
                    }
                  }
                },
                start: 37,
                end: 43,
                loc: {
                  start: {
                    line: 1,
                    column: 37
                  },
                  end: {
                    line: 1,
                    column: 43
                  }
                }
              }
            ],
            start: 18,
            end: 44,
            loc: {
              start: {
                line: 1,
                column: 18
              },
              end: {
                line: 1,
                column: 44
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 44,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 44
            }
          }
        }
      ],
      start: 0,
      end: 44,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 44
        }
      }
    }
  ],
  [
    `function f([[...x] = function() {}()]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'ArrayPattern',
                    elements: [
                      {
                        type: 'RestElement',
                        argument: {
                          type: 'Identifier',
                          name: 'x',
                          start: 16,
                          end: 17,
                          loc: {
                            start: {
                              line: 1,
                              column: 16
                            },
                            end: {
                              line: 1,
                              column: 17
                            }
                          }
                        },
                        start: 13,
                        end: 17,
                        loc: {
                          start: {
                            line: 1,
                            column: 13
                          },
                          end: {
                            line: 1,
                            column: 17
                          }
                        }
                      }
                    ],
                    start: 12,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  },
                  right: {
                    type: 'CallExpression',
                    callee: {
                      type: 'FunctionExpression',
                      params: [],
                      body: {
                        type: 'BlockStatement',
                        body: [],
                        start: 32,
                        end: 34,
                        loc: {
                          start: {
                            line: 1,
                            column: 32
                          },
                          end: {
                            line: 1,
                            column: 34
                          }
                        }
                      },
                      async: false,
                      generator: false,
                      id: null,
                      start: 21,
                      end: 34,
                      loc: {
                        start: {
                          line: 1,
                          column: 21
                        },
                        end: {
                          line: 1,
                          column: 34
                        }
                      }
                    },
                    arguments: [],
                    start: 21,
                    end: 36,
                    loc: {
                      start: {
                        line: 1,
                        column: 21
                      },
                      end: {
                        line: 1,
                        column: 36
                      }
                    }
                  },
                  start: 12,
                  end: 36,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 36
                    }
                  }
                }
              ],
              start: 11,
              end: 37,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 37
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 39,
            end: 41,
            loc: {
              start: {
                line: 1,
                column: 39
              },
              end: {
                line: 1,
                column: 41
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 41,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 41
            }
          }
        }
      ],
      start: 0,
      end: 41,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 41
        }
      }
    }
  ],
  [
    `function f([...x]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'RestElement',
                  argument: {
                    type: 'Identifier',
                    name: 'x',
                    start: 15,
                    end: 16,
                    loc: {
                      start: {
                        line: 1,
                        column: 15
                      },
                      end: {
                        line: 1,
                        column: 16
                      }
                    }
                  },
                  start: 12,
                  end: 16,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 16
                    }
                  }
                }
              ],
              start: 11,
              end: 17,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 17
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 19,
            end: 21,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 21
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 21,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 21
            }
          }
        }
      ],
      start: 0,
      end: 21,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 21
        }
      }
    }
  ],
  [
    `function f(arg) {'use strict'; g(arg); arguments[0] = 42; g(arg)}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'arg',
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'Literal',
                  value: 'use strict',
                  start: 17,
                  end: 29,
                  loc: {
                    start: {
                      line: 1,
                      column: 17
                    },
                    end: {
                      line: 1,
                      column: 29
                    }
                  }
                },
                start: 17,
                end: 30,
                loc: {
                  start: {
                    line: 1,
                    column: 17
                  },
                  end: {
                    line: 1,
                    column: 30
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 31,
                    end: 32,
                    loc: {
                      start: {
                        line: 1,
                        column: 31
                      },
                      end: {
                        line: 1,
                        column: 32
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 33,
                      end: 36,
                      loc: {
                        start: {
                          line: 1,
                          column: 33
                        },
                        end: {
                          line: 1,
                          column: 36
                        }
                      }
                    }
                  ],
                  start: 31,
                  end: 37,
                  loc: {
                    start: {
                      line: 1,
                      column: 31
                    },
                    end: {
                      line: 1,
                      column: 37
                    }
                  }
                },
                start: 31,
                end: 38,
                loc: {
                  start: {
                    line: 1,
                    column: 31
                  },
                  end: {
                    line: 1,
                    column: 38
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'Identifier',
                      name: 'arguments',
                      start: 39,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 39
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    },
                    computed: true,
                    property: {
                      type: 'Literal',
                      value: 0,
                      start: 49,
                      end: 50,
                      loc: {
                        start: {
                          line: 1,
                          column: 49
                        },
                        end: {
                          line: 1,
                          column: 50
                        }
                      }
                    },
                    start: 39,
                    end: 51,
                    loc: {
                      start: {
                        line: 1,
                        column: 39
                      },
                      end: {
                        line: 1,
                        column: 51
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Literal',
                    value: 42,
                    start: 54,
                    end: 56,
                    loc: {
                      start: {
                        line: 1,
                        column: 54
                      },
                      end: {
                        line: 1,
                        column: 56
                      }
                    }
                  },
                  start: 39,
                  end: 56,
                  loc: {
                    start: {
                      line: 1,
                      column: 39
                    },
                    end: {
                      line: 1,
                      column: 56
                    }
                  }
                },
                start: 39,
                end: 57,
                loc: {
                  start: {
                    line: 1,
                    column: 39
                  },
                  end: {
                    line: 1,
                    column: 57
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 58,
                    end: 59,
                    loc: {
                      start: {
                        line: 1,
                        column: 58
                      },
                      end: {
                        line: 1,
                        column: 59
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 60,
                      end: 63,
                      loc: {
                        start: {
                          line: 1,
                          column: 60
                        },
                        end: {
                          line: 1,
                          column: 63
                        }
                      }
                    }
                  ],
                  start: 58,
                  end: 64,
                  loc: {
                    start: {
                      line: 1,
                      column: 58
                    },
                    end: {
                      line: 1,
                      column: 64
                    }
                  }
                },
                start: 58,
                end: 64,
                loc: {
                  start: {
                    line: 1,
                    column: 58
                  },
                  end: {
                    line: 1,
                    column: 64
                  }
                }
              }
            ],
            start: 16,
            end: 65,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 65
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 65,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 65
            }
          }
        }
      ],
      start: 0,
      end: 65,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 65
        }
      }
    }
  ],
  [
    `function f([foo=a]){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  right: {
                    type: 'Identifier',
                    name: 'a',
                    start: 16,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  start: 12,
                  end: 17,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 17
                    }
                  }
                }
              ],
              start: 11,
              end: 18,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 18
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 19,
            end: 21,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 21
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 21,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 21
            }
          }
        }
      ],
      start: 0,
      end: 21,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 21
        }
      }
    }
  ],
  [
    `function f() { class x { foo(x=await){} }   }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ClassDeclaration',
                id: {
                  type: 'Identifier',
                  name: 'x',
                  start: 21,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                },
                superClass: null,
                body: {
                  type: 'ClassBody',
                  body: [
                    {
                      type: 'MethodDefinition',
                      kind: 'method',
                      static: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        name: 'foo',
                        start: 25,
                        end: 28,
                        loc: {
                          start: {
                            line: 1,
                            column: 25
                          },
                          end: {
                            line: 1,
                            column: 28
                          }
                        }
                      },
                      value: {
                        type: 'FunctionExpression',
                        params: [
                          {
                            type: 'AssignmentPattern',
                            left: {
                              type: 'Identifier',
                              name: 'x',
                              start: 29,
                              end: 30,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 29
                                },
                                end: {
                                  line: 1,
                                  column: 30
                                }
                              }
                            },
                            right: {
                              type: 'Identifier',
                              name: 'await',
                              start: 31,
                              end: 36,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 31
                                },
                                end: {
                                  line: 1,
                                  column: 36
                                }
                              }
                            },
                            start: 29,
                            end: 36,
                            loc: {
                              start: {
                                line: 1,
                                column: 29
                              },
                              end: {
                                line: 1,
                                column: 36
                              }
                            }
                          }
                        ],
                        body: {
                          type: 'BlockStatement',
                          body: [],
                          start: 37,
                          end: 39,
                          loc: {
                            start: {
                              line: 1,
                              column: 37
                            },
                            end: {
                              line: 1,
                              column: 39
                            }
                          }
                        },
                        async: false,
                        generator: false,
                        id: null,
                        start: 28,
                        end: 39,
                        loc: {
                          start: {
                            line: 1,
                            column: 28
                          },
                          end: {
                            line: 1,
                            column: 39
                          }
                        }
                      },
                      start: 25,
                      end: 39,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 39
                        }
                      }
                    }
                  ],
                  start: 23,
                  end: 41,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 41
                    }
                  }
                },
                start: 15,
                end: 41,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 41
                  }
                }
              }
            ],
            start: 13,
            end: 45,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 45
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 45,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 45
            }
          }
        }
      ],
      start: 0,
      end: 45,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 45
        }
      }
    }
  ],
  [
    `function *f(){ class x { [yield y](){} }  }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ClassDeclaration',
                id: {
                  type: 'Identifier',
                  name: 'x',
                  start: 21,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                },
                superClass: null,
                body: {
                  type: 'ClassBody',
                  body: [
                    {
                      type: 'MethodDefinition',
                      kind: 'method',
                      static: false,
                      computed: true,
                      key: {
                        type: 'YieldExpression',
                        argument: {
                          type: 'Identifier',
                          name: 'y',
                          start: 32,
                          end: 33,
                          loc: {
                            start: {
                              line: 1,
                              column: 32
                            },
                            end: {
                              line: 1,
                              column: 33
                            }
                          }
                        },
                        delegate: false,
                        start: 26,
                        end: 33,
                        loc: {
                          start: {
                            line: 1,
                            column: 26
                          },
                          end: {
                            line: 1,
                            column: 33
                          }
                        }
                      },
                      value: {
                        type: 'FunctionExpression',
                        params: [],
                        body: {
                          type: 'BlockStatement',
                          body: [],
                          start: 36,
                          end: 38,
                          loc: {
                            start: {
                              line: 1,
                              column: 36
                            },
                            end: {
                              line: 1,
                              column: 38
                            }
                          }
                        },
                        async: false,
                        generator: false,
                        id: null,
                        start: 34,
                        end: 38,
                        loc: {
                          start: {
                            line: 1,
                            column: 34
                          },
                          end: {
                            line: 1,
                            column: 38
                          }
                        }
                      },
                      start: 25,
                      end: 38,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 38
                        }
                      }
                    }
                  ],
                  start: 23,
                  end: 40,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 40
                    }
                  }
                },
                start: 15,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              }
            ],
            start: 13,
            end: 43,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 43
              }
            }
          },
          async: false,
          generator: true,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 10,
            end: 11,
            loc: {
              start: {
                line: 1,
                column: 10
              },
              end: {
                line: 1,
                column: 11
              }
            }
          },
          start: 0,
          end: 43,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 43
            }
          }
        }
      ],
      start: 0,
      end: 43,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 43
        }
      }
    }
  ],
  [
    `function fn2([,,,,,,,...args]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                {
                  type: 'RestElement',
                  argument: {
                    type: 'Identifier',
                    name: 'args',
                    start: 24,
                    end: 28,
                    loc: {
                      start: {
                        line: 1,
                        column: 24
                      },
                      end: {
                        line: 1,
                        column: 28
                      }
                    }
                  },
                  start: 21,
                  end: 28,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 28
                    }
                  }
                }
              ],
              start: 13,
              end: 29,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 29
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 31,
            end: 33,
            loc: {
              start: {
                line: 1,
                column: 31
              },
              end: {
                line: 1,
                column: 33
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn2',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 33,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 33
            }
          }
        }
      ],
      start: 0,
      end: 33,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 33
        }
      }
    }
  ],
  [
    `function f([foo] = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  }
                ],
                start: 11,
                end: 16,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 16
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 19,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 19
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              },
              start: 11,
              end: 20,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 20
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 21,
            end: 23,
            loc: {
              start: {
                line: 1,
                column: 21
              },
              end: {
                line: 1,
                column: 23
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 23,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 23
            }
          }
        }
      ],
      start: 0,
      end: 23,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 23
        }
      }
    }
  ],
  [
    `function f([] = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [],
                start: 11,
                end: 13,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 13
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 16,
                end: 17,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 17
                  }
                }
              },
              start: 11,
              end: 17,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 17
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 18,
            end: 20,
            loc: {
              start: {
                line: 1,
                column: 18
              },
              end: {
                line: 1,
                column: 20
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 20,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 20
            }
          }
        }
      ],
      start: 0,
      end: 20,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 20
        }
      }
    }
  ],
  [
    `function f([foo,bar] = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  {
                    type: 'Identifier',
                    name: 'bar',
                    start: 16,
                    end: 19,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 19
                      }
                    }
                  }
                ],
                start: 11,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 23,
                end: 24,
                loc: {
                  start: {
                    line: 1,
                    column: 23
                  },
                  end: {
                    line: 1,
                    column: 24
                  }
                }
              },
              start: 11,
              end: 24,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 24
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 25,
            end: 27,
            loc: {
              start: {
                line: 1,
                column: 25
              },
              end: {
                line: 1,
                column: 27
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 27,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 27
            }
          }
        }
      ],
      start: 0,
      end: 27,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      }
    }
  ],
  [
    `function h({a}, {b} = {b: 2}, c) { return [a, b, c] }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'a',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'a',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 12,
                  end: 13,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 13
                    }
                  }
                }
              ],
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'b',
                      start: 17,
                      end: 18,
                      loc: {
                        start: {
                          line: 1,
                          column: 17
                        },
                        end: {
                          line: 1,
                          column: 18
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'b',
                      start: 17,
                      end: 18,
                      loc: {
                        start: {
                          line: 1,
                          column: 17
                        },
                        end: {
                          line: 1,
                          column: 18
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: true,
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  }
                ],
                start: 16,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              right: {
                type: 'ObjectExpression',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'b',
                      start: 23,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    },
                    value: {
                      type: 'Literal',
                      value: 2,
                      start: 26,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 23,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  }
                ],
                start: 22,
                end: 28,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 28
                  }
                }
              },
              start: 16,
              end: 28,
              loc: {
                start: {
                  line: 1,
                  column: 16
                },
                end: {
                  line: 1,
                  column: 28
                }
              }
            },
            {
              type: 'Identifier',
              name: 'c',
              start: 30,
              end: 31,
              loc: {
                start: {
                  line: 1,
                  column: 30
                },
                end: {
                  line: 1,
                  column: 31
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'ArrayExpression',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'a',
                      start: 43,
                      end: 44,
                      loc: {
                        start: {
                          line: 1,
                          column: 43
                        },
                        end: {
                          line: 1,
                          column: 44
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'b',
                      start: 46,
                      end: 47,
                      loc: {
                        start: {
                          line: 1,
                          column: 46
                        },
                        end: {
                          line: 1,
                          column: 47
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'c',
                      start: 49,
                      end: 50,
                      loc: {
                        start: {
                          line: 1,
                          column: 49
                        },
                        end: {
                          line: 1,
                          column: 50
                        }
                      }
                    }
                  ],
                  start: 42,
                  end: 51,
                  loc: {
                    start: {
                      line: 1,
                      column: 42
                    },
                    end: {
                      line: 1,
                      column: 51
                    }
                  }
                },
                start: 35,
                end: 51,
                loc: {
                  start: {
                    line: 1,
                    column: 35
                  },
                  end: {
                    line: 1,
                    column: 51
                  }
                }
              }
            ],
            start: 33,
            end: 53,
            loc: {
              start: {
                line: 1,
                column: 33
              },
              end: {
                line: 1,
                column: 53
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'h',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 53,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 53
            }
          }
        }
      ],
      start: 0,
      end: 53,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 53
        }
      }
    }
  ],
  [
    `function f({foo=a,bar} = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'foo',
                      start: 12,
                      end: 15,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 15
                        }
                      }
                    },
                    value: {
                      type: 'AssignmentPattern',
                      left: {
                        type: 'Identifier',
                        name: 'foo',
                        start: 12,
                        end: 15,
                        loc: {
                          start: {
                            line: 1,
                            column: 12
                          },
                          end: {
                            line: 1,
                            column: 15
                          }
                        }
                      },
                      right: {
                        type: 'Identifier',
                        name: 'a',
                        start: 16,
                        end: 17,
                        loc: {
                          start: {
                            line: 1,
                            column: 16
                          },
                          end: {
                            line: 1,
                            column: 17
                          }
                        }
                      },
                      start: 12,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: true,
                    start: 12,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'bar',
                      start: 18,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'bar',
                      start: 18,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: true,
                    start: 18,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  }
                ],
                start: 11,
                end: 22,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 22
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 25,
                end: 26,
                loc: {
                  start: {
                    line: 1,
                    column: 25
                  },
                  end: {
                    line: 1,
                    column: 26
                  }
                }
              },
              start: 11,
              end: 26,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 26
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 27,
            end: 29,
            loc: {
              start: {
                line: 1,
                column: 27
              },
              end: {
                line: 1,
                column: 29
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 29,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 29
            }
          }
        }
      ],
      start: 0,
      end: 29,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 29
        }
      }
    }
  ],
  [
    `function f({foo:a} = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'foo',
                      start: 12,
                      end: 15,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 15
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'a',
                      start: 16,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 12,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  }
                ],
                start: 11,
                end: 18,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 18
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 21,
                end: 22,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 22
                  }
                }
              },
              start: 11,
              end: 22,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 22
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 23,
            end: 25,
            loc: {
              start: {
                line: 1,
                column: 23
              },
              end: {
                line: 1,
                column: 25
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 25,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 25
            }
          }
        }
      ],
      start: 0,
      end: 25,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 25
        }
      }
    }
  ],
  [
    `function f(x, [foo]){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'x',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            },
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'Identifier',
                  name: 'foo',
                  start: 15,
                  end: 18,
                  loc: {
                    start: {
                      line: 1,
                      column: 15
                    },
                    end: {
                      line: 1,
                      column: 18
                    }
                  }
                }
              ],
              start: 14,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 14
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 20,
            end: 22,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 22
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 22,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 22
            }
          }
        }
      ],
      start: 0,
      end: 22,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 22
        }
      }
    }
  ],
  [
    `function f(arg, arguments=[]) {g(arg); arguments[0] = 42; g(arg)}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'arg',
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'arguments',
                start: 16,
                end: 25,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 25
                  }
                }
              },
              right: {
                type: 'ArrayExpression',
                elements: [],
                start: 26,
                end: 28,
                loc: {
                  start: {
                    line: 1,
                    column: 26
                  },
                  end: {
                    line: 1,
                    column: 28
                  }
                }
              },
              start: 16,
              end: 28,
              loc: {
                start: {
                  line: 1,
                  column: 16
                },
                end: {
                  line: 1,
                  column: 28
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 31,
                    end: 32,
                    loc: {
                      start: {
                        line: 1,
                        column: 31
                      },
                      end: {
                        line: 1,
                        column: 32
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 33,
                      end: 36,
                      loc: {
                        start: {
                          line: 1,
                          column: 33
                        },
                        end: {
                          line: 1,
                          column: 36
                        }
                      }
                    }
                  ],
                  start: 31,
                  end: 37,
                  loc: {
                    start: {
                      line: 1,
                      column: 31
                    },
                    end: {
                      line: 1,
                      column: 37
                    }
                  }
                },
                start: 31,
                end: 38,
                loc: {
                  start: {
                    line: 1,
                    column: 31
                  },
                  end: {
                    line: 1,
                    column: 38
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'Identifier',
                      name: 'arguments',
                      start: 39,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 39
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    },
                    computed: true,
                    property: {
                      type: 'Literal',
                      value: 0,
                      start: 49,
                      end: 50,
                      loc: {
                        start: {
                          line: 1,
                          column: 49
                        },
                        end: {
                          line: 1,
                          column: 50
                        }
                      }
                    },
                    start: 39,
                    end: 51,
                    loc: {
                      start: {
                        line: 1,
                        column: 39
                      },
                      end: {
                        line: 1,
                        column: 51
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Literal',
                    value: 42,
                    start: 54,
                    end: 56,
                    loc: {
                      start: {
                        line: 1,
                        column: 54
                      },
                      end: {
                        line: 1,
                        column: 56
                      }
                    }
                  },
                  start: 39,
                  end: 56,
                  loc: {
                    start: {
                      line: 1,
                      column: 39
                    },
                    end: {
                      line: 1,
                      column: 56
                    }
                  }
                },
                start: 39,
                end: 57,
                loc: {
                  start: {
                    line: 1,
                    column: 39
                  },
                  end: {
                    line: 1,
                    column: 57
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 58,
                    end: 59,
                    loc: {
                      start: {
                        line: 1,
                        column: 58
                      },
                      end: {
                        line: 1,
                        column: 59
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 60,
                      end: 63,
                      loc: {
                        start: {
                          line: 1,
                          column: 60
                        },
                        end: {
                          line: 1,
                          column: 63
                        }
                      }
                    }
                  ],
                  start: 58,
                  end: 64,
                  loc: {
                    start: {
                      line: 1,
                      column: 58
                    },
                    end: {
                      line: 1,
                      column: 64
                    }
                  }
                },
                start: 58,
                end: 64,
                loc: {
                  start: {
                    line: 1,
                    column: 58
                  },
                  end: {
                    line: 1,
                    column: 64
                  }
                }
              }
            ],
            start: 30,
            end: 65,
            loc: {
              start: {
                line: 1,
                column: 30
              },
              end: {
                line: 1,
                column: 65
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 65,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 65
            }
          }
        }
      ],
      start: 0,
      end: 65,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 65
        }
      }
    }
  ],
  [
    `function f(arg) {g(arg); g(function() {eval('arg = 42')}); g(arg)}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'arg',
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 19,
                      end: 22,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 22
                        }
                      }
                    }
                  ],
                  start: 17,
                  end: 23,
                  loc: {
                    start: {
                      line: 1,
                      column: 17
                    },
                    end: {
                      line: 1,
                      column: 23
                    }
                  }
                },
                start: 17,
                end: 24,
                loc: {
                  start: {
                    line: 1,
                    column: 17
                  },
                  end: {
                    line: 1,
                    column: 24
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 25,
                    end: 26,
                    loc: {
                      start: {
                        line: 1,
                        column: 25
                      },
                      end: {
                        line: 1,
                        column: 26
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'FunctionExpression',
                      params: [],
                      body: {
                        type: 'BlockStatement',
                        body: [
                          {
                            type: 'ExpressionStatement',
                            expression: {
                              type: 'CallExpression',
                              callee: {
                                type: 'Identifier',
                                name: 'eval',
                                start: 39,
                                end: 43,
                                loc: {
                                  start: {
                                    line: 1,
                                    column: 39
                                  },
                                  end: {
                                    line: 1,
                                    column: 43
                                  }
                                }
                              },
                              arguments: [
                                {
                                  type: 'Literal',
                                  value: 'arg = 42',
                                  start: 44,
                                  end: 54,
                                  loc: {
                                    start: {
                                      line: 1,
                                      column: 44
                                    },
                                    end: {
                                      line: 1,
                                      column: 54
                                    }
                                  }
                                }
                              ],
                              start: 39,
                              end: 55,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 39
                                },
                                end: {
                                  line: 1,
                                  column: 55
                                }
                              }
                            },
                            start: 39,
                            end: 55,
                            loc: {
                              start: {
                                line: 1,
                                column: 39
                              },
                              end: {
                                line: 1,
                                column: 55
                              }
                            }
                          }
                        ],
                        start: 38,
                        end: 56,
                        loc: {
                          start: {
                            line: 1,
                            column: 38
                          },
                          end: {
                            line: 1,
                            column: 56
                          }
                        }
                      },
                      async: false,
                      generator: false,
                      id: null,
                      start: 27,
                      end: 56,
                      loc: {
                        start: {
                          line: 1,
                          column: 27
                        },
                        end: {
                          line: 1,
                          column: 56
                        }
                      }
                    }
                  ],
                  start: 25,
                  end: 57,
                  loc: {
                    start: {
                      line: 1,
                      column: 25
                    },
                    end: {
                      line: 1,
                      column: 57
                    }
                  }
                },
                start: 25,
                end: 58,
                loc: {
                  start: {
                    line: 1,
                    column: 25
                  },
                  end: {
                    line: 1,
                    column: 58
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 59,
                    end: 60,
                    loc: {
                      start: {
                        line: 1,
                        column: 59
                      },
                      end: {
                        line: 1,
                        column: 60
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 61,
                      end: 64,
                      loc: {
                        start: {
                          line: 1,
                          column: 61
                        },
                        end: {
                          line: 1,
                          column: 64
                        }
                      }
                    }
                  ],
                  start: 59,
                  end: 65,
                  loc: {
                    start: {
                      line: 1,
                      column: 59
                    },
                    end: {
                      line: 1,
                      column: 65
                    }
                  }
                },
                start: 59,
                end: 65,
                loc: {
                  start: {
                    line: 1,
                    column: 59
                  },
                  end: {
                    line: 1,
                    column: 65
                  }
                }
              }
            ],
            start: 16,
            end: 66,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 66
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 66,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 66
            }
          }
        }
      ],
      start: 0,
      end: 66,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 66
        }
      }
    }
  ],
  [
    `function f([foo], b = y){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'Identifier',
                  name: 'foo',
                  start: 12,
                  end: 15,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 15
                    }
                  }
                }
              ],
              start: 11,
              end: 16,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 16
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'b',
                start: 18,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'y',
                start: 22,
                end: 23,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 23
                  }
                }
              },
              start: 18,
              end: 23,
              loc: {
                start: {
                  line: 1,
                  column: 18
                },
                end: {
                  line: 1,
                  column: 23
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 24,
            end: 26,
            loc: {
              start: {
                line: 1,
                column: 24
              },
              end: {
                line: 1,
                column: 26
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 26,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 26
            }
          }
        }
      ],
      start: 0,
      end: 26,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 26
        }
      }
    }
  ],
  [
    `function f({foo} = x, b = y){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'foo',
                      start: 12,
                      end: 15,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 15
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'foo',
                      start: 12,
                      end: 15,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 15
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: true,
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  }
                ],
                start: 11,
                end: 16,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 16
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 19,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 19
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              },
              start: 11,
              end: 20,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 20
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'b',
                start: 22,
                end: 23,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 23
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'y',
                start: 26,
                end: 27,
                loc: {
                  start: {
                    line: 1,
                    column: 26
                  },
                  end: {
                    line: 1,
                    column: 27
                  }
                }
              },
              start: 22,
              end: 27,
              loc: {
                start: {
                  line: 1,
                  column: 22
                },
                end: {
                  line: 1,
                  column: 27
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 28,
            end: 30,
            loc: {
              start: {
                line: 1,
                column: 28
              },
              end: {
                line: 1,
                column: 30
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 30,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 30
            }
          }
        }
      ],
      start: 0,
      end: 30,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 30
        }
      }
    }
  ],
  [
    `function f({foo:a,bar} = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'foo',
                      start: 12,
                      end: 15,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 15
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'a',
                      start: 16,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 12,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'bar',
                      start: 18,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'bar',
                      start: 18,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: true,
                    start: 18,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  }
                ],
                start: 11,
                end: 22,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 22
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 25,
                end: 26,
                loc: {
                  start: {
                    line: 1,
                    column: 25
                  },
                  end: {
                    line: 1,
                    column: 26
                  }
                }
              },
              start: 11,
              end: 26,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 26
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 27,
            end: 29,
            loc: {
              start: {
                line: 1,
                column: 27
              },
              end: {
                line: 1,
                column: 29
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 29,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 29
            }
          }
        }
      ],
      start: 0,
      end: 29,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 29
        }
      }
    }
  ],
  [
    `function f({a}, {b}, {c = ""}) { return [a, b, c] }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'a',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'a',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 12,
                  end: 13,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 13
                    }
                  }
                }
              ],
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            },
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'b',
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'b',
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 17,
                  end: 18,
                  loc: {
                    start: {
                      line: 1,
                      column: 17
                    },
                    end: {
                      line: 1,
                      column: 18
                    }
                  }
                }
              ],
              start: 16,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 16
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            },
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'c',
                    start: 22,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  },
                  value: {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'c',
                      start: 22,
                      end: 23,
                      loc: {
                        start: {
                          line: 1,
                          column: 22
                        },
                        end: {
                          line: 1,
                          column: 23
                        }
                      }
                    },
                    right: {
                      type: 'Literal',
                      value: '',
                      start: 26,
                      end: 28,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 28
                        }
                      }
                    },
                    start: 22,
                    end: 28,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 28
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 22,
                  end: 28,
                  loc: {
                    start: {
                      line: 1,
                      column: 22
                    },
                    end: {
                      line: 1,
                      column: 28
                    }
                  }
                }
              ],
              start: 21,
              end: 29,
              loc: {
                start: {
                  line: 1,
                  column: 21
                },
                end: {
                  line: 1,
                  column: 29
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'ArrayExpression',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'a',
                      start: 41,
                      end: 42,
                      loc: {
                        start: {
                          line: 1,
                          column: 41
                        },
                        end: {
                          line: 1,
                          column: 42
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'b',
                      start: 44,
                      end: 45,
                      loc: {
                        start: {
                          line: 1,
                          column: 44
                        },
                        end: {
                          line: 1,
                          column: 45
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'c',
                      start: 47,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 47
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    }
                  ],
                  start: 40,
                  end: 49,
                  loc: {
                    start: {
                      line: 1,
                      column: 40
                    },
                    end: {
                      line: 1,
                      column: 49
                    }
                  }
                },
                start: 33,
                end: 49,
                loc: {
                  start: {
                    line: 1,
                    column: 33
                  },
                  end: {
                    line: 1,
                    column: 49
                  }
                }
              }
            ],
            start: 31,
            end: 51,
            loc: {
              start: {
                line: 1,
                column: 31
              },
              end: {
                line: 1,
                column: 51
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 51,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 51
            }
          }
        }
      ],
      start: 0,
      end: 51,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 51
        }
      }
    }
  ],
  [
    `function h({a}, {b} = {b: 2}, c) { return [a, b, c] }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'a',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'a',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 12,
                  end: 13,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 13
                    }
                  }
                }
              ],
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'b',
                      start: 17,
                      end: 18,
                      loc: {
                        start: {
                          line: 1,
                          column: 17
                        },
                        end: {
                          line: 1,
                          column: 18
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'b',
                      start: 17,
                      end: 18,
                      loc: {
                        start: {
                          line: 1,
                          column: 17
                        },
                        end: {
                          line: 1,
                          column: 18
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: true,
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  }
                ],
                start: 16,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              right: {
                type: 'ObjectExpression',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'b',
                      start: 23,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    },
                    value: {
                      type: 'Literal',
                      value: 2,
                      start: 26,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 23,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  }
                ],
                start: 22,
                end: 28,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 28
                  }
                }
              },
              start: 16,
              end: 28,
              loc: {
                start: {
                  line: 1,
                  column: 16
                },
                end: {
                  line: 1,
                  column: 28
                }
              }
            },
            {
              type: 'Identifier',
              name: 'c',
              start: 30,
              end: 31,
              loc: {
                start: {
                  line: 1,
                  column: 30
                },
                end: {
                  line: 1,
                  column: 31
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'ArrayExpression',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'a',
                      start: 43,
                      end: 44,
                      loc: {
                        start: {
                          line: 1,
                          column: 43
                        },
                        end: {
                          line: 1,
                          column: 44
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'b',
                      start: 46,
                      end: 47,
                      loc: {
                        start: {
                          line: 1,
                          column: 46
                        },
                        end: {
                          line: 1,
                          column: 47
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'c',
                      start: 49,
                      end: 50,
                      loc: {
                        start: {
                          line: 1,
                          column: 49
                        },
                        end: {
                          line: 1,
                          column: 50
                        }
                      }
                    }
                  ],
                  start: 42,
                  end: 51,
                  loc: {
                    start: {
                      line: 1,
                      column: 42
                    },
                    end: {
                      line: 1,
                      column: 51
                    }
                  }
                },
                start: 35,
                end: 51,
                loc: {
                  start: {
                    line: 1,
                    column: 35
                  },
                  end: {
                    line: 1,
                    column: 51
                  }
                }
              }
            ],
            start: 33,
            end: 53,
            loc: {
              start: {
                line: 1,
                column: 33
              },
              end: {
                line: 1,
                column: 53
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'h',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 53,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 53
            }
          }
        }
      ],
      start: 0,
      end: 53,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 53
        }
      }
    }
  ],
  [
    `function i({a}, {b}, c, ...rest) { return [a, b, c, rest] }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'a',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'a',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 12,
                  end: 13,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 13
                    }
                  }
                }
              ],
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            },
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'b',
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'b',
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 17,
                  end: 18,
                  loc: {
                    start: {
                      line: 1,
                      column: 17
                    },
                    end: {
                      line: 1,
                      column: 18
                    }
                  }
                }
              ],
              start: 16,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 16
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            },
            {
              type: 'Identifier',
              name: 'c',
              start: 21,
              end: 22,
              loc: {
                start: {
                  line: 1,
                  column: 21
                },
                end: {
                  line: 1,
                  column: 22
                }
              }
            },
            {
              type: 'RestElement',
              argument: {
                type: 'Identifier',
                name: 'rest',
                start: 27,
                end: 31,
                loc: {
                  start: {
                    line: 1,
                    column: 27
                  },
                  end: {
                    line: 1,
                    column: 31
                  }
                }
              },
              start: 24,
              end: 31,
              loc: {
                start: {
                  line: 1,
                  column: 24
                },
                end: {
                  line: 1,
                  column: 31
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'ArrayExpression',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'a',
                      start: 43,
                      end: 44,
                      loc: {
                        start: {
                          line: 1,
                          column: 43
                        },
                        end: {
                          line: 1,
                          column: 44
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'b',
                      start: 46,
                      end: 47,
                      loc: {
                        start: {
                          line: 1,
                          column: 46
                        },
                        end: {
                          line: 1,
                          column: 47
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'c',
                      start: 49,
                      end: 50,
                      loc: {
                        start: {
                          line: 1,
                          column: 49
                        },
                        end: {
                          line: 1,
                          column: 50
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'rest',
                      start: 52,
                      end: 56,
                      loc: {
                        start: {
                          line: 1,
                          column: 52
                        },
                        end: {
                          line: 1,
                          column: 56
                        }
                      }
                    }
                  ],
                  start: 42,
                  end: 57,
                  loc: {
                    start: {
                      line: 1,
                      column: 42
                    },
                    end: {
                      line: 1,
                      column: 57
                    }
                  }
                },
                start: 35,
                end: 57,
                loc: {
                  start: {
                    line: 1,
                    column: 35
                  },
                  end: {
                    line: 1,
                    column: 57
                  }
                }
              }
            ],
            start: 33,
            end: 59,
            loc: {
              start: {
                line: 1,
                column: 33
              },
              end: {
                line: 1,
                column: 59
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'i',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 59,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 59
            }
          }
        }
      ],
      start: 0,
      end: 59,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 59
        }
      }
    }
  ],
  [
    `function f({a}, {b}, {c = ""}) { return [a, b, c] }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'a',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'a',
                    start: 12,
                    end: 13,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 13
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 12,
                  end: 13,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 13
                    }
                  }
                }
              ],
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            },
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'b',
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'b',
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 17,
                  end: 18,
                  loc: {
                    start: {
                      line: 1,
                      column: 17
                    },
                    end: {
                      line: 1,
                      column: 18
                    }
                  }
                }
              ],
              start: 16,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 16
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            },
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'c',
                    start: 22,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  },
                  value: {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'c',
                      start: 22,
                      end: 23,
                      loc: {
                        start: {
                          line: 1,
                          column: 22
                        },
                        end: {
                          line: 1,
                          column: 23
                        }
                      }
                    },
                    right: {
                      type: 'Literal',
                      value: '',
                      start: 26,
                      end: 28,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 28
                        }
                      }
                    },
                    start: 22,
                    end: 28,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 28
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 22,
                  end: 28,
                  loc: {
                    start: {
                      line: 1,
                      column: 22
                    },
                    end: {
                      line: 1,
                      column: 28
                    }
                  }
                }
              ],
              start: 21,
              end: 29,
              loc: {
                start: {
                  line: 1,
                  column: 21
                },
                end: {
                  line: 1,
                  column: 29
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'ArrayExpression',
                  elements: [
                    {
                      type: 'Identifier',
                      name: 'a',
                      start: 41,
                      end: 42,
                      loc: {
                        start: {
                          line: 1,
                          column: 41
                        },
                        end: {
                          line: 1,
                          column: 42
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'b',
                      start: 44,
                      end: 45,
                      loc: {
                        start: {
                          line: 1,
                          column: 44
                        },
                        end: {
                          line: 1,
                          column: 45
                        }
                      }
                    },
                    {
                      type: 'Identifier',
                      name: 'c',
                      start: 47,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 47
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    }
                  ],
                  start: 40,
                  end: 49,
                  loc: {
                    start: {
                      line: 1,
                      column: 40
                    },
                    end: {
                      line: 1,
                      column: 49
                    }
                  }
                },
                start: 33,
                end: 49,
                loc: {
                  start: {
                    line: 1,
                    column: 33
                  },
                  end: {
                    line: 1,
                    column: 49
                  }
                }
              }
            ],
            start: 31,
            end: 51,
            loc: {
              start: {
                line: 1,
                column: 31
              },
              end: {
                line: 1,
                column: 51
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 51,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 51
            }
          }
        }
      ],
      start: 0,
      end: 51,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 51
        }
      }
    }
  ],
  [
    `function f({foo:a}){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'a',
                    start: 16,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 12,
                  end: 17,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 17
                    }
                  }
                }
              ],
              start: 11,
              end: 18,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 18
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 19,
            end: 21,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 21
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 21,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 21
            }
          }
        }
      ],
      start: 0,
      end: 21,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 21
        }
      }
    }
  ],
  [
    `function f({foo:a=b}){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  value: {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'a',
                      start: 16,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    right: {
                      type: 'Identifier',
                      name: 'b',
                      start: 18,
                      end: 19,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 19
                        }
                      }
                    },
                    start: 16,
                    end: 19,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 19
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 12,
                  end: 19,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 19
                    }
                  }
                }
              ],
              start: 11,
              end: 20,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 20
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 21,
            end: 23,
            loc: {
              start: {
                line: 1,
                column: 21
              },
              end: {
                line: 1,
                column: 23
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 23,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 23
            }
          }
        }
      ],
      start: 0,
      end: 23,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 23
        }
      }
    }
  ],
  [
    `function f(foo, {bar}){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'foo',
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            },
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'bar',
                    start: 17,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'bar',
                    start: 17,
                    end: 20,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 20
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: true,
                  start: 17,
                  end: 20,
                  loc: {
                    start: {
                      line: 1,
                      column: 17
                    },
                    end: {
                      line: 1,
                      column: 20
                    }
                  }
                }
              ],
              start: 16,
              end: 21,
              loc: {
                start: {
                  line: 1,
                  column: 16
                },
                end: {
                  line: 1,
                  column: 21
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 22,
            end: 24,
            loc: {
              start: {
                line: 1,
                column: 22
              },
              end: {
                line: 1,
                column: 24
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 24,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 24
            }
          }
        }
      ],
      start: 0,
      end: 24,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 24
        }
      }
    }
  ],
  [
    `function f({foo:a=b, bar:c=d} = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'foo',
                      start: 12,
                      end: 15,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 15
                        }
                      }
                    },
                    value: {
                      type: 'AssignmentPattern',
                      left: {
                        type: 'Identifier',
                        name: 'a',
                        start: 16,
                        end: 17,
                        loc: {
                          start: {
                            line: 1,
                            column: 16
                          },
                          end: {
                            line: 1,
                            column: 17
                          }
                        }
                      },
                      right: {
                        type: 'Identifier',
                        name: 'b',
                        start: 18,
                        end: 19,
                        loc: {
                          start: {
                            line: 1,
                            column: 18
                          },
                          end: {
                            line: 1,
                            column: 19
                          }
                        }
                      },
                      start: 16,
                      end: 19,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 19
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 12,
                    end: 19,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 19
                      }
                    }
                  },
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'bar',
                      start: 21,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 21
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    },
                    value: {
                      type: 'AssignmentPattern',
                      left: {
                        type: 'Identifier',
                        name: 'c',
                        start: 25,
                        end: 26,
                        loc: {
                          start: {
                            line: 1,
                            column: 25
                          },
                          end: {
                            line: 1,
                            column: 26
                          }
                        }
                      },
                      right: {
                        type: 'Identifier',
                        name: 'd',
                        start: 27,
                        end: 28,
                        loc: {
                          start: {
                            line: 1,
                            column: 27
                          },
                          end: {
                            line: 1,
                            column: 28
                          }
                        }
                      },
                      start: 25,
                      end: 28,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 28
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 21,
                    end: 28,
                    loc: {
                      start: {
                        line: 1,
                        column: 21
                      },
                      end: {
                        line: 1,
                        column: 28
                      }
                    }
                  }
                ],
                start: 11,
                end: 29,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 29
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 32,
                end: 33,
                loc: {
                  start: {
                    line: 1,
                    column: 32
                  },
                  end: {
                    line: 1,
                    column: 33
                  }
                }
              },
              start: 11,
              end: 33,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 33
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 34,
            end: 36,
            loc: {
              start: {
                line: 1,
                column: 34
              },
              end: {
                line: 1,
                column: 36
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 36,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 36
            }
          }
        }
      ],
      start: 0,
      end: 36,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 36
        }
      }
    }
  ],
  [
    `function f() {   class x { foo(x=new (await)()){} }   }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ClassDeclaration',
                id: {
                  type: 'Identifier',
                  name: 'x',
                  start: 23,
                  end: 24,
                  loc: {
                    start: {
                      line: 1,
                      column: 23
                    },
                    end: {
                      line: 1,
                      column: 24
                    }
                  }
                },
                superClass: null,
                body: {
                  type: 'ClassBody',
                  body: [
                    {
                      type: 'MethodDefinition',
                      kind: 'method',
                      static: false,
                      computed: false,
                      key: {
                        type: 'Identifier',
                        name: 'foo',
                        start: 27,
                        end: 30,
                        loc: {
                          start: {
                            line: 1,
                            column: 27
                          },
                          end: {
                            line: 1,
                            column: 30
                          }
                        }
                      },
                      value: {
                        type: 'FunctionExpression',
                        params: [
                          {
                            type: 'AssignmentPattern',
                            left: {
                              type: 'Identifier',
                              name: 'x',
                              start: 31,
                              end: 32,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 31
                                },
                                end: {
                                  line: 1,
                                  column: 32
                                }
                              }
                            },
                            right: {
                              type: 'NewExpression',
                              callee: {
                                type: 'Identifier',
                                name: 'await',
                                start: 38,
                                end: 43,
                                loc: {
                                  start: {
                                    line: 1,
                                    column: 38
                                  },
                                  end: {
                                    line: 1,
                                    column: 43
                                  }
                                }
                              },
                              arguments: [],
                              start: 33,
                              end: 46,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 33
                                },
                                end: {
                                  line: 1,
                                  column: 46
                                }
                              }
                            },
                            start: 31,
                            end: 46,
                            loc: {
                              start: {
                                line: 1,
                                column: 31
                              },
                              end: {
                                line: 1,
                                column: 46
                              }
                            }
                          }
                        ],
                        body: {
                          type: 'BlockStatement',
                          body: [],
                          start: 47,
                          end: 49,
                          loc: {
                            start: {
                              line: 1,
                              column: 47
                            },
                            end: {
                              line: 1,
                              column: 49
                            }
                          }
                        },
                        async: false,
                        generator: false,
                        id: null,
                        start: 30,
                        end: 49,
                        loc: {
                          start: {
                            line: 1,
                            column: 30
                          },
                          end: {
                            line: 1,
                            column: 49
                          }
                        }
                      },
                      start: 27,
                      end: 49,
                      loc: {
                        start: {
                          line: 1,
                          column: 27
                        },
                        end: {
                          line: 1,
                          column: 49
                        }
                      }
                    }
                  ],
                  start: 25,
                  end: 51,
                  loc: {
                    start: {
                      line: 1,
                      column: 25
                    },
                    end: {
                      line: 1,
                      column: 51
                    }
                  }
                },
                start: 17,
                end: 51,
                loc: {
                  start: {
                    line: 1,
                    column: 17
                  },
                  end: {
                    line: 1,
                    column: 51
                  }
                }
              }
            ],
            start: 13,
            end: 55,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 55
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 55,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 55
            }
          }
        }
      ],
      start: 0,
      end: 55,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 55
        }
      }
    }
  ],
  [
    `function f(arg=1) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'arg',
                start: 11,
                end: 14,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 14
                  }
                }
              },
              right: {
                type: 'Literal',
                value: 1,
                start: 15,
                end: 16,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 16
                  }
                }
              },
              start: 11,
              end: 16,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 16
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 18,
            end: 20,
            loc: {
              start: {
                line: 1,
                column: 18
              },
              end: {
                line: 1,
                column: 20
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 20,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 20
            }
          }
        }
      ],
      start: 0,
      end: 20,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 20
        }
      }
    }
  ],
  [
    `function f(arg, ...arguments) {g(arg); arguments[0] = 42; g(arg)}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'arg',
              start: 11,
              end: 14,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 14
                }
              }
            },
            {
              type: 'RestElement',
              argument: {
                type: 'Identifier',
                name: 'arguments',
                start: 19,
                end: 28,
                loc: {
                  start: {
                    line: 1,
                    column: 19
                  },
                  end: {
                    line: 1,
                    column: 28
                  }
                }
              },
              start: 16,
              end: 28,
              loc: {
                start: {
                  line: 1,
                  column: 16
                },
                end: {
                  line: 1,
                  column: 28
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 31,
                    end: 32,
                    loc: {
                      start: {
                        line: 1,
                        column: 31
                      },
                      end: {
                        line: 1,
                        column: 32
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 33,
                      end: 36,
                      loc: {
                        start: {
                          line: 1,
                          column: 33
                        },
                        end: {
                          line: 1,
                          column: 36
                        }
                      }
                    }
                  ],
                  start: 31,
                  end: 37,
                  loc: {
                    start: {
                      line: 1,
                      column: 31
                    },
                    end: {
                      line: 1,
                      column: 37
                    }
                  }
                },
                start: 31,
                end: 38,
                loc: {
                  start: {
                    line: 1,
                    column: 31
                  },
                  end: {
                    line: 1,
                    column: 38
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'AssignmentExpression',
                  left: {
                    type: 'MemberExpression',
                    object: {
                      type: 'Identifier',
                      name: 'arguments',
                      start: 39,
                      end: 48,
                      loc: {
                        start: {
                          line: 1,
                          column: 39
                        },
                        end: {
                          line: 1,
                          column: 48
                        }
                      }
                    },
                    computed: true,
                    property: {
                      type: 'Literal',
                      value: 0,
                      start: 49,
                      end: 50,
                      loc: {
                        start: {
                          line: 1,
                          column: 49
                        },
                        end: {
                          line: 1,
                          column: 50
                        }
                      }
                    },
                    start: 39,
                    end: 51,
                    loc: {
                      start: {
                        line: 1,
                        column: 39
                      },
                      end: {
                        line: 1,
                        column: 51
                      }
                    }
                  },
                  operator: '=',
                  right: {
                    type: 'Literal',
                    value: 42,
                    start: 54,
                    end: 56,
                    loc: {
                      start: {
                        line: 1,
                        column: 54
                      },
                      end: {
                        line: 1,
                        column: 56
                      }
                    }
                  },
                  start: 39,
                  end: 56,
                  loc: {
                    start: {
                      line: 1,
                      column: 39
                    },
                    end: {
                      line: 1,
                      column: 56
                    }
                  }
                },
                start: 39,
                end: 57,
                loc: {
                  start: {
                    line: 1,
                    column: 39
                  },
                  end: {
                    line: 1,
                    column: 57
                  }
                }
              },
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'g',
                    start: 58,
                    end: 59,
                    loc: {
                      start: {
                        line: 1,
                        column: 58
                      },
                      end: {
                        line: 1,
                        column: 59
                      }
                    }
                  },
                  arguments: [
                    {
                      type: 'Identifier',
                      name: 'arg',
                      start: 60,
                      end: 63,
                      loc: {
                        start: {
                          line: 1,
                          column: 60
                        },
                        end: {
                          line: 1,
                          column: 63
                        }
                      }
                    }
                  ],
                  start: 58,
                  end: 64,
                  loc: {
                    start: {
                      line: 1,
                      column: 58
                    },
                    end: {
                      line: 1,
                      column: 64
                    }
                  }
                },
                start: 58,
                end: 64,
                loc: {
                  start: {
                    line: 1,
                    column: 58
                  },
                  end: {
                    line: 1,
                    column: 64
                  }
                }
              }
            ],
            start: 30,
            end: 65,
            loc: {
              start: {
                line: 1,
                column: 30
              },
              end: {
                line: 1,
                column: 65
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 65,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 65
            }
          }
        }
      ],
      start: 0,
      end: 65,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 65
        }
      }
    }
  ],
  [
    `function fn1([{}]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'ObjectPattern',
                  properties: [],
                  start: 14,
                  end: 16,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 16
                    }
                  }
                }
              ],
              start: 13,
              end: 17,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 17
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 19,
            end: 21,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 21
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn1',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 21,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 21
            }
          }
        }
      ],
      start: 0,
      end: 21,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 21
        }
      }
    }
  ],
  [
    `function f([foo=a,bar=b]){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  right: {
                    type: 'Identifier',
                    name: 'a',
                    start: 16,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  start: 12,
                  end: 17,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 17
                    }
                  }
                },
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'bar',
                    start: 18,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  },
                  right: {
                    type: 'Identifier',
                    name: 'b',
                    start: 22,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  },
                  start: 18,
                  end: 23,
                  loc: {
                    start: {
                      line: 1,
                      column: 18
                    },
                    end: {
                      line: 1,
                      column: 23
                    }
                  }
                }
              ],
              start: 11,
              end: 24,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 24
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 25,
            end: 27,
            loc: {
              start: {
                line: 1,
                column: 25
              },
              end: {
                line: 1,
                column: 27
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 27,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 27
            }
          }
        }
      ],
      start: 0,
      end: 27,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      }
    }
  ],
  [
    `function santa() { function package() {} function evdal() { "use strict"; }}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 38,
                  end: 40,
                  loc: {
                    start: {
                      line: 1,
                      column: 38
                    },
                    end: {
                      line: 1,
                      column: 40
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'package',
                  start: 28,
                  end: 35,
                  loc: {
                    start: {
                      line: 1,
                      column: 28
                    },
                    end: {
                      line: 1,
                      column: 35
                    }
                  }
                },
                start: 19,
                end: 40,
                loc: {
                  start: {
                    line: 1,
                    column: 19
                  },
                  end: {
                    line: 1,
                    column: 40
                  }
                }
              },
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ExpressionStatement',
                      expression: {
                        type: 'Literal',
                        value: 'use strict',
                        start: 60,
                        end: 72,
                        loc: {
                          start: {
                            line: 1,
                            column: 60
                          },
                          end: {
                            line: 1,
                            column: 72
                          }
                        }
                      },
                      start: 60,
                      end: 73,
                      loc: {
                        start: {
                          line: 1,
                          column: 60
                        },
                        end: {
                          line: 1,
                          column: 73
                        }
                      }
                    }
                  ],
                  start: 58,
                  end: 75,
                  loc: {
                    start: {
                      line: 1,
                      column: 58
                    },
                    end: {
                      line: 1,
                      column: 75
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'evdal',
                  start: 50,
                  end: 55,
                  loc: {
                    start: {
                      line: 1,
                      column: 50
                    },
                    end: {
                      line: 1,
                      column: 55
                    }
                  }
                },
                start: 41,
                end: 75,
                loc: {
                  start: {
                    line: 1,
                    column: 41
                  },
                  end: {
                    line: 1,
                    column: 75
                  }
                }
              }
            ],
            start: 17,
            end: 76,
            loc: {
              start: {
                line: 1,
                column: 17
              },
              end: {
                line: 1,
                column: 76
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'santa',
            start: 9,
            end: 14,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 14
              }
            }
          },
          start: 0,
          end: 76,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 76
            }
          }
        }
      ],
      start: 0,
      end: 76,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 76
        }
      }
    }
  ],
  [
    `function test() { "use strict" + 42; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'BinaryExpression',
                  left: {
                    type: 'Literal',
                    value: 'use strict',
                    start: 18,
                    end: 30,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 30
                      }
                    }
                  },
                  right: {
                    type: 'Literal',
                    value: 42,
                    start: 33,
                    end: 35,
                    loc: {
                      start: {
                        line: 1,
                        column: 33
                      },
                      end: {
                        line: 1,
                        column: 35
                      }
                    }
                  },
                  operator: '+',
                  start: 18,
                  end: 35,
                  loc: {
                    start: {
                      line: 1,
                      column: 18
                    },
                    end: {
                      line: 1,
                      column: 35
                    }
                  }
                },
                start: 18,
                end: 36,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 36
                  }
                }
              }
            ],
            start: 16,
            end: 38,
            loc: {
              start: {
                line: 1,
                column: 16
              },
              end: {
                line: 1,
                column: 38
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'test',
            start: 9,
            end: 13,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 13
              }
            }
          },
          start: 0,
          end: 38,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 38
            }
          }
        }
      ],
      start: 0,
      end: 38,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 38
        }
      }
    }
  ],
  [
    `function f() { var o = { get await() { } } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'ObjectExpression',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'await',
                            start: 29,
                            end: 34,
                            loc: {
                              start: {
                                line: 1,
                                column: 29
                              },
                              end: {
                                line: 1,
                                column: 34
                              }
                            }
                          },
                          value: {
                            type: 'FunctionExpression',
                            params: [],
                            body: {
                              type: 'BlockStatement',
                              body: [],
                              start: 37,
                              end: 40,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 37
                                },
                                end: {
                                  line: 1,
                                  column: 40
                                }
                              }
                            },
                            async: false,
                            generator: false,
                            id: null,
                            start: 34,
                            end: 40,
                            loc: {
                              start: {
                                line: 1,
                                column: 34
                              },
                              end: {
                                line: 1,
                                column: 40
                              }
                            }
                          },
                          kind: 'get',
                          computed: false,
                          method: false,
                          shorthand: false,
                          start: 25,
                          end: 40,
                          loc: {
                            start: {
                              line: 1,
                              column: 25
                            },
                            end: {
                              line: 1,
                              column: 40
                            }
                          }
                        }
                      ],
                      start: 23,
                      end: 42,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 42
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'o',
                      start: 19,
                      end: 20,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 20
                        }
                      }
                    },
                    start: 19,
                    end: 42,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 42
                      }
                    }
                  }
                ],
                start: 15,
                end: 42,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 42
                  }
                }
              }
            ],
            start: 13,
            end: 44,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 44
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 44,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 44
            }
          }
        }
      ],
      start: 0,
      end: 44,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 44
        }
      }
    }
  ],
  [
    `function f() {var async = async => async; return async();}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'ArrowFunctionExpression',
                      body: {
                        type: 'Identifier',
                        name: 'async',
                        start: 35,
                        end: 40,
                        loc: {
                          start: {
                            line: 1,
                            column: 35
                          },
                          end: {
                            line: 1,
                            column: 40
                          }
                        }
                      },
                      params: [
                        {
                          type: 'Identifier',
                          name: 'async',
                          start: 26,
                          end: 31,
                          loc: {
                            start: {
                              line: 1,
                              column: 26
                            },
                            end: {
                              line: 1,
                              column: 31
                            }
                          }
                        }
                      ],
                      async: false,
                      expression: true,
                      start: 26,
                      end: 40,
                      loc: {
                        start: {
                          line: 1,
                          column: 26
                        },
                        end: {
                          line: 1,
                          column: 40
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'async',
                      start: 18,
                      end: 23,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 23
                        }
                      }
                    },
                    start: 18,
                    end: 40,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 40
                      }
                    }
                  }
                ],
                start: 14,
                end: 41,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 41
                  }
                }
              },
              {
                type: 'ReturnStatement',
                argument: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'async',
                    start: 49,
                    end: 54,
                    loc: {
                      start: {
                        line: 1,
                        column: 49
                      },
                      end: {
                        line: 1,
                        column: 54
                      }
                    }
                  },
                  arguments: [],
                  start: 49,
                  end: 56,
                  loc: {
                    start: {
                      line: 1,
                      column: 49
                    },
                    end: {
                      line: 1,
                      column: 56
                    }
                  }
                },
                start: 42,
                end: 57,
                loc: {
                  start: {
                    line: 1,
                    column: 42
                  },
                  end: {
                    line: 1,
                    column: 57
                  }
                }
              }
            ],
            start: 13,
            end: 58,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 58
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 58,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 58
            }
          }
        }
      ],
      start: 0,
      end: 58,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 58
        }
      }
    }
  ],
  [
    `function f([x = 23] = []) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'x',
                      start: 12,
                      end: 13,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 13
                        }
                      }
                    },
                    right: {
                      type: 'Literal',
                      value: 23,
                      start: 16,
                      end: 18,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 18
                        }
                      }
                    },
                    start: 12,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  }
                ],
                start: 11,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              right: {
                type: 'ArrayExpression',
                elements: [],
                start: 22,
                end: 24,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 24
                  }
                }
              },
              start: 11,
              end: 24,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 24
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 26,
            end: 28,
            loc: {
              start: {
                line: 1,
                column: 26
              },
              end: {
                line: 1,
                column: 28
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 28,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 28
            }
          }
        }
      ],
      start: 0,
      end: 28,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 28
        }
      }
    }
  ],
  [
    `function f([...[]] = function*() {}) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'RestElement',
                    argument: {
                      type: 'ArrayPattern',
                      elements: [],
                      start: 15,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 15
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    start: 12,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  }
                ],
                start: 11,
                end: 18,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 18
                  }
                }
              },
              right: {
                type: 'FunctionExpression',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 33,
                  end: 35,
                  loc: {
                    start: {
                      line: 1,
                      column: 33
                    },
                    end: {
                      line: 1,
                      column: 35
                    }
                  }
                },
                async: false,
                generator: true,
                id: null,
                start: 21,
                end: 35,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 35
                  }
                }
              },
              start: 11,
              end: 35,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 35
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 37,
            end: 39,
            loc: {
              start: {
                line: 1,
                column: 37
              },
              end: {
                line: 1,
                column: 39
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 39,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 39
            }
          }
        }
      ],
      start: 0,
      end: 39,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 39
        }
      }
    }
  ],
  [
    `function f({ x, } = { x: 23 }) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'x',
                      start: 13,
                      end: 14,
                      loc: {
                        start: {
                          line: 1,
                          column: 13
                        },
                        end: {
                          line: 1,
                          column: 14
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'x',
                      start: 13,
                      end: 14,
                      loc: {
                        start: {
                          line: 1,
                          column: 13
                        },
                        end: {
                          line: 1,
                          column: 14
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: true,
                    start: 13,
                    end: 14,
                    loc: {
                      start: {
                        line: 1,
                        column: 13
                      },
                      end: {
                        line: 1,
                        column: 14
                      }
                    }
                  }
                ],
                start: 11,
                end: 17,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 17
                  }
                }
              },
              right: {
                type: 'ObjectExpression',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'x',
                      start: 22,
                      end: 23,
                      loc: {
                        start: {
                          line: 1,
                          column: 22
                        },
                        end: {
                          line: 1,
                          column: 23
                        }
                      }
                    },
                    value: {
                      type: 'Literal',
                      value: 23,
                      start: 25,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: false,
                    start: 22,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  }
                ],
                start: 20,
                end: 29,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 29
                  }
                }
              },
              start: 11,
              end: 29,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 29
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 31,
            end: 33,
            loc: {
              start: {
                line: 1,
                column: 31
              },
              end: {
                line: 1,
                column: 33
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 33,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 33
            }
          }
        }
      ],
      start: 0,
      end: 33,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 33
        }
      }
    }
  ],
  [
    `function f([{ x }] = [null]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'ObjectPattern',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'x',
                          start: 14,
                          end: 15,
                          loc: {
                            start: {
                              line: 1,
                              column: 14
                            },
                            end: {
                              line: 1,
                              column: 15
                            }
                          }
                        },
                        value: {
                          type: 'Identifier',
                          name: 'x',
                          start: 14,
                          end: 15,
                          loc: {
                            start: {
                              line: 1,
                              column: 14
                            },
                            end: {
                              line: 1,
                              column: 15
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: true,
                        start: 14,
                        end: 15,
                        loc: {
                          start: {
                            line: 1,
                            column: 14
                          },
                          end: {
                            line: 1,
                            column: 15
                          }
                        }
                      }
                    ],
                    start: 12,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  }
                ],
                start: 11,
                end: 18,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 18
                  }
                }
              },
              right: {
                type: 'ArrayExpression',
                elements: [
                  {
                    type: 'Literal',
                    value: null,
                    start: 22,
                    end: 26,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 26
                      }
                    }
                  }
                ],
                start: 21,
                end: 27,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 27
                  }
                }
              },
              start: 11,
              end: 27,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 27
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 29,
            end: 31,
            loc: {
              start: {
                line: 1,
                column: 29
              },
              end: {
                line: 1,
                column: 31
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 31,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 31
            }
          }
        }
      ],
      start: 0,
      end: 31,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 31
        }
      }
    }
  ],
  [
    `function a() { function a() {} function a() {} }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 28,
                  end: 30,
                  loc: {
                    start: {
                      line: 1,
                      column: 28
                    },
                    end: {
                      line: 1,
                      column: 30
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'a',
                  start: 24,
                  end: 25,
                  loc: {
                    start: {
                      line: 1,
                      column: 24
                    },
                    end: {
                      line: 1,
                      column: 25
                    }
                  }
                },
                start: 15,
                end: 30,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 30
                  }
                }
              },
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 44,
                  end: 46,
                  loc: {
                    start: {
                      line: 1,
                      column: 44
                    },
                    end: {
                      line: 1,
                      column: 46
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'a',
                  start: 40,
                  end: 41,
                  loc: {
                    start: {
                      line: 1,
                      column: 40
                    },
                    end: {
                      line: 1,
                      column: 41
                    }
                  }
                },
                start: 31,
                end: 46,
                loc: {
                  start: {
                    line: 1,
                    column: 31
                  },
                  end: {
                    line: 1,
                    column: 46
                  }
                }
              }
            ],
            start: 13,
            end: 48,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 48
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'a',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 48,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 48
            }
          }
        }
      ],
      start: 0,
      end: 48,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 48
        }
      }
    }
  ],
  [
    `function                                                    y                                   (                                          )                                              {};
  y();`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 186,
            end: 188,
            loc: {
              start: {
                line: 1,
                column: 186
              },
              end: {
                line: 1,
                column: 188
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'y',
            start: 60,
            end: 61,
            loc: {
              start: {
                line: 1,
                column: 60
              },
              end: {
                line: 1,
                column: 61
              }
            }
          },
          start: 0,
          end: 188,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 188
            }
          }
        },
        {
          type: 'EmptyStatement',
          start: 188,
          end: 189,
          loc: {
            start: {
              line: 1,
              column: 188
            },
            end: {
              line: 1,
              column: 189
            }
          }
        },
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'CallExpression',
            callee: {
              type: 'Identifier',
              name: 'y',
              start: 192,
              end: 193,
              loc: {
                start: {
                  line: 2,
                  column: 2
                },
                end: {
                  line: 2,
                  column: 3
                }
              }
            },
            arguments: [],
            start: 192,
            end: 195,
            loc: {
              start: {
                line: 2,
                column: 2
              },
              end: {
                line: 2,
                column: 5
              }
            }
          },
          start: 192,
          end: 196,
          loc: {
            start: {
              line: 2,
              column: 2
            },
            end: {
              line: 2,
              column: 6
            }
          }
        }
      ],
      start: 0,
      end: 196,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 2,
          column: 6
        }
      }
    }
  ],
  [
    `function f(a = async function (x) { await x; }) { a(); } f();`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'Identifier',
                name: 'a',
                start: 11,
                end: 12,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 12
                  }
                }
              },
              right: {
                type: 'FunctionExpression',
                params: [
                  {
                    type: 'Identifier',
                    name: 'x',
                    start: 31,
                    end: 32,
                    loc: {
                      start: {
                        line: 1,
                        column: 31
                      },
                      end: {
                        line: 1,
                        column: 32
                      }
                    }
                  }
                ],
                body: {
                  type: 'BlockStatement',
                  body: [
                    {
                      type: 'ExpressionStatement',
                      expression: {
                        type: 'AwaitExpression',
                        argument: {
                          type: 'Identifier',
                          name: 'x',
                          start: 42,
                          end: 43,
                          loc: {
                            start: {
                              line: 1,
                              column: 42
                            },
                            end: {
                              line: 1,
                              column: 43
                            }
                          }
                        },
                        start: 36,
                        end: 43,
                        loc: {
                          start: {
                            line: 1,
                            column: 36
                          },
                          end: {
                            line: 1,
                            column: 43
                          }
                        }
                      },
                      start: 36,
                      end: 44,
                      loc: {
                        start: {
                          line: 1,
                          column: 36
                        },
                        end: {
                          line: 1,
                          column: 44
                        }
                      }
                    }
                  ],
                  start: 34,
                  end: 46,
                  loc: {
                    start: {
                      line: 1,
                      column: 34
                    },
                    end: {
                      line: 1,
                      column: 46
                    }
                  }
                },
                async: true,
                generator: false,
                id: null,
                start: 15,
                end: 46,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 46
                  }
                }
              },
              start: 11,
              end: 46,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 46
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'CallExpression',
                  callee: {
                    type: 'Identifier',
                    name: 'a',
                    start: 50,
                    end: 51,
                    loc: {
                      start: {
                        line: 1,
                        column: 50
                      },
                      end: {
                        line: 1,
                        column: 51
                      }
                    }
                  },
                  arguments: [],
                  start: 50,
                  end: 53,
                  loc: {
                    start: {
                      line: 1,
                      column: 50
                    },
                    end: {
                      line: 1,
                      column: 53
                    }
                  }
                },
                start: 50,
                end: 54,
                loc: {
                  start: {
                    line: 1,
                    column: 50
                  },
                  end: {
                    line: 1,
                    column: 54
                  }
                }
              }
            ],
            start: 48,
            end: 56,
            loc: {
              start: {
                line: 1,
                column: 48
              },
              end: {
                line: 1,
                column: 56
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 56,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 56
            }
          }
        },
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'CallExpression',
            callee: {
              type: 'Identifier',
              name: 'f',
              start: 57,
              end: 58,
              loc: {
                start: {
                  line: 1,
                  column: 57
                },
                end: {
                  line: 1,
                  column: 58
                }
              }
            },
            arguments: [],
            start: 57,
            end: 60,
            loc: {
              start: {
                line: 1,
                column: 57
              },
              end: {
                line: 1,
                column: 60
              }
            }
          },
          start: 57,
          end: 61,
          loc: {
            start: {
              line: 1,
              column: 57
            },
            end: {
              line: 1,
              column: 61
            }
          }
        }
      ],
      start: 0,
      end: 61,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 61
        }
      }
    }
  ],
  [
    `function __func__2(){b};`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'Identifier',
                  name: 'b',
                  start: 21,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                },
                start: 21,
                end: 22,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 22
                  }
                }
              }
            ],
            start: 20,
            end: 23,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 23
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: '__func__2',
            start: 9,
            end: 18,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 18
              }
            }
          },
          start: 0,
          end: 23,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 23
            }
          }
        },
        {
          type: 'EmptyStatement',
          start: 23,
          end: 24,
          loc: {
            start: {
              line: 1,
              column: 23
            },
            end: {
              line: 1,
              column: 24
            }
          }
        }
      ],
      start: 0,
      end: 24,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 24
        }
      }
    }
  ],
  [
    `function x(...{ a }){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'RestElement',
              argument: {
                type: 'ObjectPattern',
                properties: [
                  {
                    type: 'Property',
                    key: {
                      type: 'Identifier',
                      name: 'a',
                      start: 16,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    value: {
                      type: 'Identifier',
                      name: 'a',
                      start: 16,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    kind: 'init',
                    computed: false,
                    method: false,
                    shorthand: true,
                    start: 16,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  }
                ],
                start: 14,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              start: 11,
              end: 19,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 19
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 20,
            end: 22,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 22
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'x',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 22,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 22
            }
          }
        }
      ],
      start: 0,
      end: 22,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 22
        }
      }
    }
  ],
  [
    `function fn2([{a: [{}]}]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'ObjectPattern',
                  properties: [
                    {
                      type: 'Property',
                      key: {
                        type: 'Identifier',
                        name: 'a',
                        start: 15,
                        end: 16,
                        loc: {
                          start: {
                            line: 1,
                            column: 15
                          },
                          end: {
                            line: 1,
                            column: 16
                          }
                        }
                      },
                      value: {
                        type: 'ArrayPattern',
                        elements: [
                          {
                            type: 'ObjectPattern',
                            properties: [],
                            start: 19,
                            end: 21,
                            loc: {
                              start: {
                                line: 1,
                                column: 19
                              },
                              end: {
                                line: 1,
                                column: 21
                              }
                            }
                          }
                        ],
                        start: 18,
                        end: 22,
                        loc: {
                          start: {
                            line: 1,
                            column: 18
                          },
                          end: {
                            line: 1,
                            column: 22
                          }
                        }
                      },
                      kind: 'init',
                      computed: false,
                      method: false,
                      shorthand: false,
                      start: 15,
                      end: 22,
                      loc: {
                        start: {
                          line: 1,
                          column: 15
                        },
                        end: {
                          line: 1,
                          column: 22
                        }
                      }
                    }
                  ],
                  start: 14,
                  end: 23,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 23
                    }
                  }
                }
              ],
              start: 13,
              end: 24,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 24
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 26,
            end: 28,
            loc: {
              start: {
                line: 1,
                column: 26
              },
              end: {
                line: 1,
                column: 28
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn2',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 28,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 28
            }
          }
        }
      ],
      start: 0,
      end: 28,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 28
        }
      }
    }
  ],
  [
    `function fnf({x: {y} = 42}) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 14,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  value: {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'ObjectPattern',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'y',
                            start: 18,
                            end: 19,
                            loc: {
                              start: {
                                line: 1,
                                column: 18
                              },
                              end: {
                                line: 1,
                                column: 19
                              }
                            }
                          },
                          value: {
                            type: 'Identifier',
                            name: 'y',
                            start: 18,
                            end: 19,
                            loc: {
                              start: {
                                line: 1,
                                column: 18
                              },
                              end: {
                                line: 1,
                                column: 19
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: true,
                          start: 18,
                          end: 19,
                          loc: {
                            start: {
                              line: 1,
                              column: 18
                            },
                            end: {
                              line: 1,
                              column: 19
                            }
                          }
                        }
                      ],
                      start: 17,
                      end: 20,
                      loc: {
                        start: {
                          line: 1,
                          column: 17
                        },
                        end: {
                          line: 1,
                          column: 20
                        }
                      }
                    },
                    right: {
                      type: 'Literal',
                      value: 42,
                      start: 23,
                      end: 25,
                      loc: {
                        start: {
                          line: 1,
                          column: 23
                        },
                        end: {
                          line: 1,
                          column: 25
                        }
                      }
                    },
                    start: 17,
                    end: 25,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 25
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 14,
                  end: 25,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 25
                    }
                  }
                }
              ],
              start: 13,
              end: 26,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 26
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 28,
            end: 30,
            loc: {
              start: {
                line: 1,
                column: 28
              },
              end: {
                line: 1,
                column: 30
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fnf',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 30,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 30
            }
          }
        }
      ],
      start: 0,
      end: 30,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 30
        }
      }
    }
  ],
  [
    `function fnf({"x": {y} = 42}) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Literal',
                    value: 'x',
                    start: 14,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  value: {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'ObjectPattern',
                      properties: [
                        {
                          type: 'Property',
                          key: {
                            type: 'Identifier',
                            name: 'y',
                            start: 20,
                            end: 21,
                            loc: {
                              start: {
                                line: 1,
                                column: 20
                              },
                              end: {
                                line: 1,
                                column: 21
                              }
                            }
                          },
                          value: {
                            type: 'Identifier',
                            name: 'y',
                            start: 20,
                            end: 21,
                            loc: {
                              start: {
                                line: 1,
                                column: 20
                              },
                              end: {
                                line: 1,
                                column: 21
                              }
                            }
                          },
                          kind: 'init',
                          computed: false,
                          method: false,
                          shorthand: true,
                          start: 20,
                          end: 21,
                          loc: {
                            start: {
                              line: 1,
                              column: 20
                            },
                            end: {
                              line: 1,
                              column: 21
                            }
                          }
                        }
                      ],
                      start: 19,
                      end: 22,
                      loc: {
                        start: {
                          line: 1,
                          column: 19
                        },
                        end: {
                          line: 1,
                          column: 22
                        }
                      }
                    },
                    right: {
                      type: 'Literal',
                      value: 42,
                      start: 25,
                      end: 27,
                      loc: {
                        start: {
                          line: 1,
                          column: 25
                        },
                        end: {
                          line: 1,
                          column: 27
                        }
                      }
                    },
                    start: 19,
                    end: 27,
                    loc: {
                      start: {
                        line: 1,
                        column: 19
                      },
                      end: {
                        line: 1,
                        column: 27
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 14,
                  end: 27,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 27
                    }
                  }
                }
              ],
              start: 13,
              end: 28,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 28
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 30,
            end: 32,
            loc: {
              start: {
                line: 1,
                column: 30
              },
              end: {
                line: 1,
                column: 32
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fnf',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 32,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 32
            }
          }
        }
      ],
      start: 0,
      end: 32,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 32
        }
      }
    }
  ],
  [
    `function fn3({x: {y: {z: {} = 42}}}) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 14,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  value: {
                    type: 'ObjectPattern',
                    properties: [
                      {
                        type: 'Property',
                        key: {
                          type: 'Identifier',
                          name: 'y',
                          start: 18,
                          end: 19,
                          loc: {
                            start: {
                              line: 1,
                              column: 18
                            },
                            end: {
                              line: 1,
                              column: 19
                            }
                          }
                        },
                        value: {
                          type: 'ObjectPattern',
                          properties: [
                            {
                              type: 'Property',
                              key: {
                                type: 'Identifier',
                                name: 'z',
                                start: 22,
                                end: 23,
                                loc: {
                                  start: {
                                    line: 1,
                                    column: 22
                                  },
                                  end: {
                                    line: 1,
                                    column: 23
                                  }
                                }
                              },
                              value: {
                                type: 'AssignmentPattern',
                                left: {
                                  type: 'ObjectPattern',
                                  properties: [],
                                  start: 25,
                                  end: 27,
                                  loc: {
                                    start: {
                                      line: 1,
                                      column: 25
                                    },
                                    end: {
                                      line: 1,
                                      column: 27
                                    }
                                  }
                                },
                                right: {
                                  type: 'Literal',
                                  value: 42,
                                  start: 30,
                                  end: 32,
                                  loc: {
                                    start: {
                                      line: 1,
                                      column: 30
                                    },
                                    end: {
                                      line: 1,
                                      column: 32
                                    }
                                  }
                                },
                                start: 25,
                                end: 32,
                                loc: {
                                  start: {
                                    line: 1,
                                    column: 25
                                  },
                                  end: {
                                    line: 1,
                                    column: 32
                                  }
                                }
                              },
                              kind: 'init',
                              computed: false,
                              method: false,
                              shorthand: false,
                              start: 22,
                              end: 32,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 22
                                },
                                end: {
                                  line: 1,
                                  column: 32
                                }
                              }
                            }
                          ],
                          start: 21,
                          end: 33,
                          loc: {
                            start: {
                              line: 1,
                              column: 21
                            },
                            end: {
                              line: 1,
                              column: 33
                            }
                          }
                        },
                        kind: 'init',
                        computed: false,
                        method: false,
                        shorthand: false,
                        start: 18,
                        end: 33,
                        loc: {
                          start: {
                            line: 1,
                            column: 18
                          },
                          end: {
                            line: 1,
                            column: 33
                          }
                        }
                      }
                    ],
                    start: 17,
                    end: 34,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 34
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 14,
                  end: 34,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 34
                    }
                  }
                }
              ],
              start: 13,
              end: 35,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 35
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 37,
            end: 39,
            loc: {
              start: {
                line: 1,
                column: 37
              },
              end: {
                line: 1,
                column: 39
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'fn3',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 39,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 39
            }
          }
        }
      ],
      start: 0,
      end: 39,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 39
        }
      }
    }
  ],
  [
    `function f([foo=a,bar=b] = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'foo',
                      start: 12,
                      end: 15,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 15
                        }
                      }
                    },
                    right: {
                      type: 'Identifier',
                      name: 'a',
                      start: 16,
                      end: 17,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 17
                        }
                      }
                    },
                    start: 12,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'bar',
                      start: 18,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 18
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    },
                    right: {
                      type: 'Identifier',
                      name: 'b',
                      start: 22,
                      end: 23,
                      loc: {
                        start: {
                          line: 1,
                          column: 22
                        },
                        end: {
                          line: 1,
                          column: 23
                        }
                      }
                    },
                    start: 18,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  }
                ],
                start: 11,
                end: 24,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 24
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 27,
                end: 28,
                loc: {
                  start: {
                    line: 1,
                    column: 27
                  },
                  end: {
                    line: 1,
                    column: 28
                  }
                }
              },
              start: 11,
              end: 28,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 28
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 29,
            end: 31,
            loc: {
              start: {
                line: 1,
                column: 29
              },
              end: {
                line: 1,
                column: 31
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 31,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 31
            }
          }
        }
      ],
      start: 0,
      end: 31,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 31
        }
      }
    }
  ],
  [
    `function f(a, a) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'a',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            },
            {
              type: 'Identifier',
              name: 'a',
              start: 14,
              end: 15,
              loc: {
                start: {
                  line: 1,
                  column: 14
                },
                end: {
                  line: 1,
                  column: 15
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 17,
            end: 19,
            loc: {
              start: {
                line: 1,
                column: 17
              },
              end: {
                line: 1,
                column: 19
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 19,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 19
            }
          }
        }
      ],
      start: 0,
      end: 19,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 19
        }
      }
    }
  ],
  [
    `function f() { ++(yield); }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'ExpressionStatement',
                expression: {
                  type: 'UpdateExpression',
                  argument: {
                    type: 'Identifier',
                    name: 'yield',
                    start: 18,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  },
                  operator: '++',
                  prefix: true,
                  start: 15,
                  end: 24,
                  loc: {
                    start: {
                      line: 1,
                      column: 15
                    },
                    end: {
                      line: 1,
                      column: 24
                    }
                  }
                },
                start: 15,
                end: 25,
                loc: {
                  start: {
                    line: 1,
                    column: 15
                  },
                  end: {
                    line: 1,
                    column: 25
                  }
                }
              }
            ],
            start: 13,
            end: 27,
            loc: {
              start: {
                line: 1,
                column: 13
              },
              end: {
                line: 1,
                column: 27
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 27,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 27
            }
          }
        }
      ],
      start: 0,
      end: 27,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      }
    }
  ],
  [
    `function f([foo] = x, b){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  }
                ],
                start: 11,
                end: 16,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 16
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 19,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 19
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              },
              start: 11,
              end: 20,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 20
                }
              }
            },
            {
              type: 'Identifier',
              name: 'b',
              start: 22,
              end: 23,
              loc: {
                start: {
                  line: 1,
                  column: 22
                },
                end: {
                  line: 1,
                  column: 23
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 24,
            end: 26,
            loc: {
              start: {
                line: 1,
                column: 24
              },
              end: {
                line: 1,
                column: 26
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 26,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 26
            }
          }
        }
      ],
      start: 0,
      end: 26,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 26
        }
      }
    }
  ],
  [
    `function f([a = b = c] = arr){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'AssignmentPattern',
                    left: {
                      type: 'Identifier',
                      name: 'a',
                      start: 12,
                      end: 13,
                      loc: {
                        start: {
                          line: 1,
                          column: 12
                        },
                        end: {
                          line: 1,
                          column: 13
                        }
                      }
                    },
                    right: {
                      type: 'AssignmentExpression',
                      left: {
                        type: 'Identifier',
                        name: 'b',
                        start: 16,
                        end: 17,
                        loc: {
                          start: {
                            line: 1,
                            column: 16
                          },
                          end: {
                            line: 1,
                            column: 17
                          }
                        }
                      },
                      operator: '=',
                      right: {
                        type: 'Identifier',
                        name: 'c',
                        start: 20,
                        end: 21,
                        loc: {
                          start: {
                            line: 1,
                            column: 20
                          },
                          end: {
                            line: 1,
                            column: 21
                          }
                        }
                      },
                      start: 16,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    },
                    start: 12,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  }
                ],
                start: 11,
                end: 22,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 22
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'arr',
                start: 25,
                end: 28,
                loc: {
                  start: {
                    line: 1,
                    column: 25
                  },
                  end: {
                    line: 1,
                    column: 28
                  }
                }
              },
              start: 11,
              end: 28,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 28
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 29,
            end: 31,
            loc: {
              start: {
                line: 1,
                column: 29
              },
              end: {
                line: 1,
                column: 31
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 31,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 31
            }
          }
        }
      ],
      start: 0,
      end: 31,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 31
        }
      }
    }
  ],
  [
    `function f(a, b, a) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'a',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            },
            {
              type: 'Identifier',
              name: 'b',
              start: 14,
              end: 15,
              loc: {
                start: {
                  line: 1,
                  column: 14
                },
                end: {
                  line: 1,
                  column: 15
                }
              }
            },
            {
              type: 'Identifier',
              name: 'a',
              start: 17,
              end: 18,
              loc: {
                start: {
                  line: 1,
                  column: 17
                },
                end: {
                  line: 1,
                  column: 18
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 20,
            end: 22,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 22
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 22,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 22
            }
          }
        }
      ],
      start: 0,
      end: 22,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 22
        }
      }
    }
  ],
  [
    `function f(b, a, a) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'b',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            },
            {
              type: 'Identifier',
              name: 'a',
              start: 14,
              end: 15,
              loc: {
                start: {
                  line: 1,
                  column: 14
                },
                end: {
                  line: 1,
                  column: 15
                }
              }
            },
            {
              type: 'Identifier',
              name: 'a',
              start: 17,
              end: 18,
              loc: {
                start: {
                  line: 1,
                  column: 17
                },
                end: {
                  line: 1,
                  column: 18
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 20,
            end: 22,
            loc: {
              start: {
                line: 1,
                column: 20
              },
              end: {
                line: 1,
                column: 22
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 22,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 22
            }
          }
        }
      ],
      start: 0,
      end: 22,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 22
        }
      }
    }
  ],
  [
    `function f(x, [foo] = y){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'x',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            },
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'Identifier',
                    name: 'foo',
                    start: 15,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 15
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  }
                ],
                start: 14,
                end: 19,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 19
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'y',
                start: 22,
                end: 23,
                loc: {
                  start: {
                    line: 1,
                    column: 22
                  },
                  end: {
                    line: 1,
                    column: 23
                  }
                }
              },
              start: 14,
              end: 23,
              loc: {
                start: {
                  line: 1,
                  column: 14
                },
                end: {
                  line: 1,
                  column: 23
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 24,
            end: 26,
            loc: {
              start: {
                line: 1,
                column: 24
              },
              end: {
                line: 1,
                column: 26
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 26,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 26
            }
          }
        }
      ],
      start: 0,
      end: 26,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 26
        }
      }
    }
  ],
  [
    `function f([foo]){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'Identifier',
                  name: 'foo',
                  start: 12,
                  end: 15,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 15
                    }
                  }
                }
              ],
              start: 11,
              end: 16,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 16
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 17,
            end: 19,
            loc: {
              start: {
                line: 1,
                column: 17
              },
              end: {
                line: 1,
                column: 19
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 19,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 19
            }
          }
        }
      ],
      start: 0,
      end: 19,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 19
        }
      }
    }
  ],
  [
    `function f([foo,] = x){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'AssignmentPattern',
              left: {
                type: 'ArrayPattern',
                elements: [
                  {
                    type: 'Identifier',
                    name: 'foo',
                    start: 12,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 12
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  }
                ],
                start: 11,
                end: 17,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 17
                  }
                }
              },
              right: {
                type: 'Identifier',
                name: 'x',
                start: 20,
                end: 21,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 21
                  }
                }
              },
              start: 11,
              end: 21,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 21
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 22,
            end: 24,
            loc: {
              start: {
                line: 1,
                column: 22
              },
              end: {
                line: 1,
                column: 24
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 24,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 24
            }
          }
        }
      ],
      start: 0,
      end: 24,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 24
        }
      }
    }
  ],
  [
    `function f([{b}]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'ObjectPattern',
                  properties: [
                    {
                      type: 'Property',
                      key: {
                        type: 'Identifier',
                        name: 'b',
                        start: 13,
                        end: 14,
                        loc: {
                          start: {
                            line: 1,
                            column: 13
                          },
                          end: {
                            line: 1,
                            column: 14
                          }
                        }
                      },
                      value: {
                        type: 'Identifier',
                        name: 'b',
                        start: 13,
                        end: 14,
                        loc: {
                          start: {
                            line: 1,
                            column: 13
                          },
                          end: {
                            line: 1,
                            column: 14
                          }
                        }
                      },
                      kind: 'init',
                      computed: false,
                      method: false,
                      shorthand: true,
                      start: 13,
                      end: 14,
                      loc: {
                        start: {
                          line: 1,
                          column: 13
                        },
                        end: {
                          line: 1,
                          column: 14
                        }
                      }
                    }
                  ],
                  start: 12,
                  end: 15,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 15
                    }
                  }
                }
              ],
              start: 11,
              end: 16,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 16
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 18,
            end: 20,
            loc: {
              start: {
                line: 1,
                column: 18
              },
              end: {
                line: 1,
                column: 20
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 20,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 20
            }
          }
        }
      ],
      start: 0,
      end: 20,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 20
        }
      }
    }
  ],
  [
    `function f([a, {b: []}]) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ArrayPattern',
              elements: [
                {
                  type: 'Identifier',
                  name: 'a',
                  start: 12,
                  end: 13,
                  loc: {
                    start: {
                      line: 1,
                      column: 12
                    },
                    end: {
                      line: 1,
                      column: 13
                    }
                  }
                },
                {
                  type: 'ObjectPattern',
                  properties: [
                    {
                      type: 'Property',
                      key: {
                        type: 'Identifier',
                        name: 'b',
                        start: 16,
                        end: 17,
                        loc: {
                          start: {
                            line: 1,
                            column: 16
                          },
                          end: {
                            line: 1,
                            column: 17
                          }
                        }
                      },
                      value: {
                        type: 'ArrayPattern',
                        elements: [],
                        start: 19,
                        end: 21,
                        loc: {
                          start: {
                            line: 1,
                            column: 19
                          },
                          end: {
                            line: 1,
                            column: 21
                          }
                        }
                      },
                      kind: 'init',
                      computed: false,
                      method: false,
                      shorthand: false,
                      start: 16,
                      end: 21,
                      loc: {
                        start: {
                          line: 1,
                          column: 16
                        },
                        end: {
                          line: 1,
                          column: 21
                        }
                      }
                    }
                  ],
                  start: 15,
                  end: 22,
                  loc: {
                    start: {
                      line: 1,
                      column: 15
                    },
                    end: {
                      line: 1,
                      column: 22
                    }
                  }
                }
              ],
              start: 11,
              end: 23,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 23
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 25,
            end: 27,
            loc: {
              start: {
                line: 1,
                column: 25
              },
              end: {
                line: 1,
                column: 27
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 27,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 27
            }
          }
        }
      ],
      start: 0,
      end: 27,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      }
    }
  ],
  [
    `function foo() { let foo = 1; }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'let',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: {
                      type: 'Literal',
                      value: 1,
                      start: 27,
                      end: 28,
                      loc: {
                        start: {
                          line: 1,
                          column: 27
                        },
                        end: {
                          line: 1,
                          column: 28
                        }
                      }
                    },
                    id: {
                      type: 'Identifier',
                      name: 'foo',
                      start: 21,
                      end: 24,
                      loc: {
                        start: {
                          line: 1,
                          column: 21
                        },
                        end: {
                          line: 1,
                          column: 24
                        }
                      }
                    },
                    start: 21,
                    end: 28,
                    loc: {
                      start: {
                        line: 1,
                        column: 21
                      },
                      end: {
                        line: 1,
                        column: 28
                      }
                    }
                  }
                ],
                start: 17,
                end: 29,
                loc: {
                  start: {
                    line: 1,
                    column: 17
                  },
                  end: {
                    line: 1,
                    column: 29
                  }
                }
              }
            ],
            start: 15,
            end: 31,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 31
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'foo',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 31,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 31
            }
          }
        }
      ],
      start: 0,
      end: 31,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 31
        }
      }
    }
  ],
  [
    `{ function* foo() {}; }; let foo;`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'BlockStatement',
          body: [
            {
              type: 'FunctionDeclaration',
              params: [],
              body: {
                type: 'BlockStatement',
                body: [],
                start: 18,
                end: 20,
                loc: {
                  start: {
                    line: 1,
                    column: 18
                  },
                  end: {
                    line: 1,
                    column: 20
                  }
                }
              },
              async: false,
              generator: true,
              id: {
                type: 'Identifier',
                name: 'foo',
                start: 12,
                end: 15,
                loc: {
                  start: {
                    line: 1,
                    column: 12
                  },
                  end: {
                    line: 1,
                    column: 15
                  }
                }
              },
              start: 2,
              end: 20,
              loc: {
                start: {
                  line: 1,
                  column: 2
                },
                end: {
                  line: 1,
                  column: 20
                }
              }
            },
            {
              type: 'EmptyStatement',
              start: 20,
              end: 21,
              loc: {
                start: {
                  line: 1,
                  column: 20
                },
                end: {
                  line: 1,
                  column: 21
                }
              }
            }
          ],
          start: 0,
          end: 23,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 23
            }
          }
        },
        {
          type: 'EmptyStatement',
          start: 23,
          end: 24,
          loc: {
            start: {
              line: 1,
              column: 23
            },
            end: {
              line: 1,
              column: 24
            }
          }
        },
        {
          type: 'VariableDeclaration',
          kind: 'let',
          declarations: [
            {
              type: 'VariableDeclarator',
              init: null,
              id: {
                type: 'Identifier',
                name: 'foo',
                start: 29,
                end: 32,
                loc: {
                  start: {
                    line: 1,
                    column: 29
                  },
                  end: {
                    line: 1,
                    column: 32
                  }
                }
              },
              start: 29,
              end: 32,
              loc: {
                start: {
                  line: 1,
                  column: 29
                },
                end: {
                  line: 1,
                  column: 32
                }
              }
            }
          ],
          start: 25,
          end: 33,
          loc: {
            start: {
              line: 1,
              column: 25
            },
            end: {
              line: 1,
              column: 33
            }
          }
        }
      ],
      start: 0,
      end: 33,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 33
        }
      }
    }
  ],
  [
    `function f(...rest){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'RestElement',
              argument: {
                type: 'Identifier',
                name: 'rest',
                start: 14,
                end: 18,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 18
                  }
                }
              },
              start: 11,
              end: 18,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 18
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 19,
            end: 21,
            loc: {
              start: {
                line: 1,
                column: 19
              },
              end: {
                line: 1,
                column: 21
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 21,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 21
            }
          }
        }
      ],
      start: 0,
      end: 21,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 21
        }
      }
    }
  ],
  [
    `function f(a, b, ...rest){}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'a',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            },
            {
              type: 'Identifier',
              name: 'b',
              start: 14,
              end: 15,
              loc: {
                start: {
                  line: 1,
                  column: 14
                },
                end: {
                  line: 1,
                  column: 15
                }
              }
            },
            {
              type: 'RestElement',
              argument: {
                type: 'Identifier',
                name: 'rest',
                start: 20,
                end: 24,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 24
                  }
                }
              },
              start: 17,
              end: 24,
              loc: {
                start: {
                  line: 1,
                  column: 17
                },
                end: {
                  line: 1,
                  column: 24
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 25,
            end: 27,
            loc: {
              start: {
                line: 1,
                column: 25
              },
              end: {
                line: 1,
                column: 27
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 27,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 27
            }
          }
        }
      ],
      start: 0,
      end: 27,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      }
    }
  ],
  [
    `function f(x) { { let x } }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'x',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'let',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: null,
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 22,
                          end: 23,
                          loc: {
                            start: {
                              line: 1,
                              column: 22
                            },
                            end: {
                              line: 1,
                              column: 23
                            }
                          }
                        },
                        start: 22,
                        end: 23,
                        loc: {
                          start: {
                            line: 1,
                            column: 22
                          },
                          end: {
                            line: 1,
                            column: 23
                          }
                        }
                      }
                    ],
                    start: 18,
                    end: 23,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 23
                      }
                    }
                  }
                ],
                start: 16,
                end: 25,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 25
                  }
                }
              }
            ],
            start: 14,
            end: 27,
            loc: {
              start: {
                line: 1,
                column: 14
              },
              end: {
                line: 1,
                column: 27
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 27,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 27
            }
          }
        }
      ],
      start: 0,
      end: 27,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      }
    }
  ],
  [
    `function f(f) { }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'f',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 14,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 14
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 17,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 17
            }
          }
        }
      ],
      start: 0,
      end: 17,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 17
        }
      }
    }
  ],
  [
    `function f(x) { function x() {} }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'Identifier',
              name: 'x',
              start: 11,
              end: 12,
              loc: {
                start: {
                  line: 1,
                  column: 11
                },
                end: {
                  line: 1,
                  column: 12
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'FunctionDeclaration',
                params: [],
                body: {
                  type: 'BlockStatement',
                  body: [],
                  start: 29,
                  end: 31,
                  loc: {
                    start: {
                      line: 1,
                      column: 29
                    },
                    end: {
                      line: 1,
                      column: 31
                    }
                  }
                },
                async: false,
                generator: false,
                id: {
                  type: 'Identifier',
                  name: 'x',
                  start: 25,
                  end: 26,
                  loc: {
                    start: {
                      line: 1,
                      column: 25
                    },
                    end: {
                      line: 1,
                      column: 26
                    }
                  }
                },
                start: 16,
                end: 31,
                loc: {
                  start: {
                    line: 1,
                    column: 16
                  },
                  end: {
                    line: 1,
                    column: 31
                  }
                }
              }
            ],
            start: 14,
            end: 33,
            loc: {
              start: {
                line: 1,
                column: 14
              },
              end: {
                line: 1,
                column: 33
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 9,
            end: 10,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 10
              }
            }
          },
          start: 0,
          end: 33,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 33
            }
          }
        }
      ],
      start: 0,
      end: 33,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 33
        }
      }
    }
  ],
  [
    `x=function f(){ var f }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'AssignmentExpression',
            left: {
              type: 'Identifier',
              name: 'x',
              start: 0,
              end: 1,
              loc: {
                start: {
                  line: 1,
                  column: 0
                },
                end: {
                  line: 1,
                  column: 1
                }
              }
            },
            operator: '=',
            right: {
              type: 'FunctionExpression',
              params: [],
              body: {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: null,
                        id: {
                          type: 'Identifier',
                          name: 'f',
                          start: 20,
                          end: 21,
                          loc: {
                            start: {
                              line: 1,
                              column: 20
                            },
                            end: {
                              line: 1,
                              column: 21
                            }
                          }
                        },
                        start: 20,
                        end: 21,
                        loc: {
                          start: {
                            line: 1,
                            column: 20
                          },
                          end: {
                            line: 1,
                            column: 21
                          }
                        }
                      }
                    ],
                    start: 16,
                    end: 21,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 21
                      }
                    }
                  }
                ],
                start: 14,
                end: 23,
                loc: {
                  start: {
                    line: 1,
                    column: 14
                  },
                  end: {
                    line: 1,
                    column: 23
                  }
                }
              },
              async: false,
              generator: false,
              id: {
                type: 'Identifier',
                name: 'f',
                start: 11,
                end: 12,
                loc: {
                  start: {
                    line: 1,
                    column: 11
                  },
                  end: {
                    line: 1,
                    column: 12
                  }
                }
              },
              start: 2,
              end: 23,
              loc: {
                start: {
                  line: 1,
                  column: 2
                },
                end: {
                  line: 1,
                  column: 23
                }
              }
            },
            start: 0,
            end: 23,
            loc: {
              start: {
                line: 1,
                column: 0
              },
              end: {
                line: 1,
                column: 23
              }
            }
          },
          start: 0,
          end: 23,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 23
            }
          }
        }
      ],
      start: 0,
      end: 23,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 23
        }
      }
    }
  ],
  [
    `async function f(){ var f }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [
              {
                type: 'VariableDeclaration',
                kind: 'var',
                declarations: [
                  {
                    type: 'VariableDeclarator',
                    init: null,
                    id: {
                      type: 'Identifier',
                      name: 'f',
                      start: 24,
                      end: 25,
                      loc: {
                        start: {
                          line: 1,
                          column: 24
                        },
                        end: {
                          line: 1,
                          column: 25
                        }
                      }
                    },
                    start: 24,
                    end: 25,
                    loc: {
                      start: {
                        line: 1,
                        column: 24
                      },
                      end: {
                        line: 1,
                        column: 25
                      }
                    }
                  }
                ],
                start: 20,
                end: 25,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 25
                  }
                }
              }
            ],
            start: 18,
            end: 27,
            loc: {
              start: {
                line: 1,
                column: 18
              },
              end: {
                line: 1,
                column: 27
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 15,
            end: 16,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 16
              }
            }
          },
          start: 0,
          end: 27,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 27
            }
          }
        }
      ],
      start: 0,
      end: 27,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      }
    }
  ],
  [
    `x={*f(){ var f }}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'AssignmentExpression',
            left: {
              type: 'Identifier',
              name: 'x',
              start: 0,
              end: 1,
              loc: {
                start: {
                  line: 1,
                  column: 0
                },
                end: {
                  line: 1,
                  column: 1
                }
              }
            },
            operator: '=',
            right: {
              type: 'ObjectExpression',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'f',
                    start: 4,
                    end: 5,
                    loc: {
                      start: {
                        line: 1,
                        column: 4
                      },
                      end: {
                        line: 1,
                        column: 5
                      }
                    }
                  },
                  value: {
                    type: 'FunctionExpression',
                    params: [],
                    body: {
                      type: 'BlockStatement',
                      body: [
                        {
                          type: 'VariableDeclaration',
                          kind: 'var',
                          declarations: [
                            {
                              type: 'VariableDeclarator',
                              init: null,
                              id: {
                                type: 'Identifier',
                                name: 'f',
                                start: 13,
                                end: 14,
                                loc: {
                                  start: {
                                    line: 1,
                                    column: 13
                                  },
                                  end: {
                                    line: 1,
                                    column: 14
                                  }
                                }
                              },
                              start: 13,
                              end: 14,
                              loc: {
                                start: {
                                  line: 1,
                                  column: 13
                                },
                                end: {
                                  line: 1,
                                  column: 14
                                }
                              }
                            }
                          ],
                          start: 9,
                          end: 14,
                          loc: {
                            start: {
                              line: 1,
                              column: 9
                            },
                            end: {
                              line: 1,
                              column: 14
                            }
                          }
                        }
                      ],
                      start: 7,
                      end: 16,
                      loc: {
                        start: {
                          line: 1,
                          column: 7
                        },
                        end: {
                          line: 1,
                          column: 16
                        }
                      }
                    },
                    async: false,
                    generator: true,
                    id: null,
                    start: 5,
                    end: 16,
                    loc: {
                      start: {
                        line: 1,
                        column: 5
                      },
                      end: {
                        line: 1,
                        column: 16
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: true,
                  shorthand: false,
                  start: 3,
                  end: 16,
                  loc: {
                    start: {
                      line: 1,
                      column: 3
                    },
                    end: {
                      line: 1,
                      column: 16
                    }
                  }
                }
              ],
              start: 2,
              end: 17,
              loc: {
                start: {
                  line: 1,
                  column: 2
                },
                end: {
                  line: 1,
                  column: 17
                }
              }
            },
            start: 0,
            end: 17,
            loc: {
              start: {
                line: 1,
                column: 0
              },
              end: {
                line: 1,
                column: 17
              }
            }
          },
          start: 0,
          end: 17,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 17
            }
          }
        }
      ],
      start: 0,
      end: 17,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 17
        }
      }
    }
  ],
  [
    `function foo({x:x}, {y:y}, {z:z}) {}`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'x',
                    start: 14,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'x',
                    start: 16,
                    end: 17,
                    loc: {
                      start: {
                        line: 1,
                        column: 16
                      },
                      end: {
                        line: 1,
                        column: 17
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 14,
                  end: 17,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 17
                    }
                  }
                }
              ],
              start: 13,
              end: 18,
              loc: {
                start: {
                  line: 1,
                  column: 13
                },
                end: {
                  line: 1,
                  column: 18
                }
              }
            },
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'y',
                    start: 21,
                    end: 22,
                    loc: {
                      start: {
                        line: 1,
                        column: 21
                      },
                      end: {
                        line: 1,
                        column: 22
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'y',
                    start: 23,
                    end: 24,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 24
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 21,
                  end: 24,
                  loc: {
                    start: {
                      line: 1,
                      column: 21
                    },
                    end: {
                      line: 1,
                      column: 24
                    }
                  }
                }
              ],
              start: 20,
              end: 25,
              loc: {
                start: {
                  line: 1,
                  column: 20
                },
                end: {
                  line: 1,
                  column: 25
                }
              }
            },
            {
              type: 'ObjectPattern',
              properties: [
                {
                  type: 'Property',
                  key: {
                    type: 'Identifier',
                    name: 'z',
                    start: 28,
                    end: 29,
                    loc: {
                      start: {
                        line: 1,
                        column: 28
                      },
                      end: {
                        line: 1,
                        column: 29
                      }
                    }
                  },
                  value: {
                    type: 'Identifier',
                    name: 'z',
                    start: 30,
                    end: 31,
                    loc: {
                      start: {
                        line: 1,
                        column: 30
                      },
                      end: {
                        line: 1,
                        column: 31
                      }
                    }
                  },
                  kind: 'init',
                  computed: false,
                  method: false,
                  shorthand: false,
                  start: 28,
                  end: 31,
                  loc: {
                    start: {
                      line: 1,
                      column: 28
                    },
                    end: {
                      line: 1,
                      column: 31
                    }
                  }
                }
              ],
              start: 27,
              end: 32,
              loc: {
                start: {
                  line: 1,
                  column: 27
                },
                end: {
                  line: 1,
                  column: 32
                }
              }
            }
          ],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 34,
            end: 36,
            loc: {
              start: {
                line: 1,
                column: 34
              },
              end: {
                line: 1,
                column: 36
              }
            }
          },
          async: false,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'foo',
            start: 9,
            end: 12,
            loc: {
              start: {
                line: 1,
                column: 9
              },
              end: {
                line: 1,
                column: 12
              }
            }
          },
          start: 0,
          end: 36,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 36
            }
          }
        }
      ],
      start: 0,
      end: 36,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 36
        }
      }
    }
  ],
  [
    `async function f(){} { async function f(){} }`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'FunctionDeclaration',
          params: [],
          body: {
            type: 'BlockStatement',
            body: [],
            start: 18,
            end: 20,
            loc: {
              start: {
                line: 1,
                column: 18
              },
              end: {
                line: 1,
                column: 20
              }
            }
          },
          async: true,
          generator: false,
          id: {
            type: 'Identifier',
            name: 'f',
            start: 15,
            end: 16,
            loc: {
              start: {
                line: 1,
                column: 15
              },
              end: {
                line: 1,
                column: 16
              }
            }
          },
          start: 0,
          end: 20,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 20
            }
          }
        },
        {
          type: 'BlockStatement',
          body: [
            {
              type: 'FunctionDeclaration',
              params: [],
              body: {
                type: 'BlockStatement',
                body: [],
                start: 41,
                end: 43,
                loc: {
                  start: {
                    line: 1,
                    column: 41
                  },
                  end: {
                    line: 1,
                    column: 43
                  }
                }
              },
              async: true,
              generator: false,
              id: {
                type: 'Identifier',
                name: 'f',
                start: 38,
                end: 39,
                loc: {
                  start: {
                    line: 1,
                    column: 38
                  },
                  end: {
                    line: 1,
                    column: 39
                  }
                }
              },
              start: 23,
              end: 43,
              loc: {
                start: {
                  line: 1,
                  column: 23
                },
                end: {
                  line: 1,
                  column: 43
                }
              }
            }
          ],
          start: 21,
          end: 45,
          loc: {
            start: {
              line: 1,
              column: 21
            },
            end: {
              line: 1,
              column: 45
            }
          }
        }
      ],
      start: 0,
      end: 45,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 45
        }
      }
    }
  ],
  [
    `(function foo(x = 0) { var x; { function x() {} } })(1);`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'CallExpression',
            callee: {
              type: 'FunctionExpression',
              params: [
                {
                  type: 'AssignmentPattern',
                  left: {
                    type: 'Identifier',
                    name: 'x',
                    start: 14,
                    end: 15,
                    loc: {
                      start: {
                        line: 1,
                        column: 14
                      },
                      end: {
                        line: 1,
                        column: 15
                      }
                    }
                  },
                  right: {
                    type: 'Literal',
                    value: 0,
                    start: 18,
                    end: 19,
                    loc: {
                      start: {
                        line: 1,
                        column: 18
                      },
                      end: {
                        line: 1,
                        column: 19
                      }
                    }
                  },
                  start: 14,
                  end: 19,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 19
                    }
                  }
                }
              ],
              body: {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: null,
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 27,
                          end: 28,
                          loc: {
                            start: {
                              line: 1,
                              column: 27
                            },
                            end: {
                              line: 1,
                              column: 28
                            }
                          }
                        },
                        start: 27,
                        end: 28,
                        loc: {
                          start: {
                            line: 1,
                            column: 27
                          },
                          end: {
                            line: 1,
                            column: 28
                          }
                        }
                      }
                    ],
                    start: 23,
                    end: 29,
                    loc: {
                      start: {
                        line: 1,
                        column: 23
                      },
                      end: {
                        line: 1,
                        column: 29
                      }
                    }
                  },
                  {
                    type: 'BlockStatement',
                    body: [
                      {
                        type: 'FunctionDeclaration',
                        params: [],
                        body: {
                          type: 'BlockStatement',
                          body: [],
                          start: 45,
                          end: 47,
                          loc: {
                            start: {
                              line: 1,
                              column: 45
                            },
                            end: {
                              line: 1,
                              column: 47
                            }
                          }
                        },
                        async: false,
                        generator: false,
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 41,
                          end: 42,
                          loc: {
                            start: {
                              line: 1,
                              column: 41
                            },
                            end: {
                              line: 1,
                              column: 42
                            }
                          }
                        },
                        start: 32,
                        end: 47,
                        loc: {
                          start: {
                            line: 1,
                            column: 32
                          },
                          end: {
                            line: 1,
                            column: 47
                          }
                        }
                      }
                    ],
                    start: 30,
                    end: 49,
                    loc: {
                      start: {
                        line: 1,
                        column: 30
                      },
                      end: {
                        line: 1,
                        column: 49
                      }
                    }
                  }
                ],
                start: 21,
                end: 51,
                loc: {
                  start: {
                    line: 1,
                    column: 21
                  },
                  end: {
                    line: 1,
                    column: 51
                  }
                }
              },
              async: false,
              generator: false,
              id: {
                type: 'Identifier',
                name: 'foo',
                start: 10,
                end: 13,
                loc: {
                  start: {
                    line: 1,
                    column: 10
                  },
                  end: {
                    line: 1,
                    column: 13
                  }
                }
              },
              start: 1,
              end: 51,
              loc: {
                start: {
                  line: 1,
                  column: 1
                },
                end: {
                  line: 1,
                  column: 51
                }
              }
            },
            arguments: [
              {
                type: 'Literal',
                value: 1,
                start: 53,
                end: 54,
                loc: {
                  start: {
                    line: 1,
                    column: 53
                  },
                  end: {
                    line: 1,
                    column: 54
                  }
                }
              }
            ],
            start: 0,
            end: 55,
            loc: {
              start: {
                line: 1,
                column: 0
              },
              end: {
                line: 1,
                column: 55
              }
            }
          },
          start: 0,
          end: 56,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 56
            }
          }
        }
      ],
      start: 0,
      end: 56,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 56
        }
      }
    }
  ],
  [
    `(function foo(...x) { var x; {  function x() {}  } })(1);`,
    Context.OptionsLoc,
    {
      type: 'Program',
      sourceType: 'script',
      body: [
        {
          type: 'ExpressionStatement',
          expression: {
            type: 'CallExpression',
            callee: {
              type: 'FunctionExpression',
              params: [
                {
                  type: 'RestElement',
                  argument: {
                    type: 'Identifier',
                    name: 'x',
                    start: 17,
                    end: 18,
                    loc: {
                      start: {
                        line: 1,
                        column: 17
                      },
                      end: {
                        line: 1,
                        column: 18
                      }
                    }
                  },
                  start: 14,
                  end: 18,
                  loc: {
                    start: {
                      line: 1,
                      column: 14
                    },
                    end: {
                      line: 1,
                      column: 18
                    }
                  }
                }
              ],
              body: {
                type: 'BlockStatement',
                body: [
                  {
                    type: 'VariableDeclaration',
                    kind: 'var',
                    declarations: [
                      {
                        type: 'VariableDeclarator',
                        init: null,
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 26,
                          end: 27,
                          loc: {
                            start: {
                              line: 1,
                              column: 26
                            },
                            end: {
                              line: 1,
                              column: 27
                            }
                          }
                        },
                        start: 26,
                        end: 27,
                        loc: {
                          start: {
                            line: 1,
                            column: 26
                          },
                          end: {
                            line: 1,
                            column: 27
                          }
                        }
                      }
                    ],
                    start: 22,
                    end: 28,
                    loc: {
                      start: {
                        line: 1,
                        column: 22
                      },
                      end: {
                        line: 1,
                        column: 28
                      }
                    }
                  },
                  {
                    type: 'BlockStatement',
                    body: [
                      {
                        type: 'FunctionDeclaration',
                        params: [],
                        body: {
                          type: 'BlockStatement',
                          body: [],
                          start: 45,
                          end: 47,
                          loc: {
                            start: {
                              line: 1,
                              column: 45
                            },
                            end: {
                              line: 1,
                              column: 47
                            }
                          }
                        },
                        async: false,
                        generator: false,
                        id: {
                          type: 'Identifier',
                          name: 'x',
                          start: 41,
                          end: 42,
                          loc: {
                            start: {
                              line: 1,
                              column: 41
                            },
                            end: {
                              line: 1,
                              column: 42
                            }
                          }
                        },
                        start: 32,
                        end: 47,
                        loc: {
                          start: {
                            line: 1,
                            column: 32
                          },
                          end: {
                            line: 1,
                            column: 47
                          }
                        }
                      }
                    ],
                    start: 29,
                    end: 50,
                    loc: {
                      start: {
                        line: 1,
                        column: 29
                      },
                      end: {
                        line: 1,
                        column: 50
                      }
                    }
                  }
                ],
                start: 20,
                end: 52,
                loc: {
                  start: {
                    line: 1,
                    column: 20
                  },
                  end: {
                    line: 1,
                    column: 52
                  }
                }
              },
              async: false,
              generator: false,
              id: {
                type: 'Identifier',
                name: 'foo',
                start: 10,
                end: 13,
                loc: {
                  start: {
                    line: 1,
                    column: 10
                  },
                  end: {
                    line: 1,
                    column: 13
                  }
                }
              },
              start: 1,
              end: 52,
              loc: {
                start: {
                  line: 1,
                  column: 1
                },
                end: {
                  line: 1,
                  column: 52
                }
              }
            },
            arguments: [
              {
                type: 'Literal',
                value: 1,
                start: 54,
                end: 55,
                loc: {
                  start: {
                    line: 1,
                    column: 54
                  },
                  end: {
                    line: 1,
                    column: 55
                  }
                }
              }
            ],
            start: 0,
            end: 56,
            loc: {
              start: {
                line: 1,
                column: 0
              },
              end: {
                line: 1,
                column: 56
              }
            }
          },
          start: 0,
          end: 57,
          loc: {
            start: {
              line: 1,
              column: 0
            },
            end: {
              line: 1,
              column: 57
            }
          }
        }
      ],
      start: 0,
      end: 57,
      loc: {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 57
        }
      }
    }
  ]
]);
